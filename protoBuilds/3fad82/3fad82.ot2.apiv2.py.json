{
    "content": "import math\n\nmetadata = {\n    'protocolName': '''Quarter Volume NEBNext Ultra II DNA Library Prep Kit for\n    Illumina: part 1''',\n    'author': 'Steve Plonk <protocols@opentrons.com>',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    # get parameter values from json above\n    [sample_count, labware_tips20, labware_pcr_plate, clearance_mm_plate,\n     clearance_samp_plate, flow_rate_ligation_mx, delay_lig_mm\n     ] = get_values(  # noqa: F821\n      'sample_count', 'labware_tips20', 'labware_pcr_plate',\n      'clearance_mm_plate', 'clearance_samp_plate', 'flow_rate_ligation_mx',\n      'delay_lig_mm')\n\n    ctx.set_rail_lights(True)\n\n    # tips, p20 multi gen2\n    tips20 = [ctx.load_labware(labware_tips20, str(slot)) for slot in [\n     2, 3, 5, 6]]\n    p20m = ctx.load_instrument(\n        \"p20_multi_gen2\", 'left', tip_racks=tips20)\n\n    \"\"\"\n    helper functions\n    \"\"\"\n    def pause_attention(message):\n        ctx.set_rail_lights(False)\n        ctx.delay(seconds=10)\n        ctx.pause(message)\n        ctx.set_rail_lights(True)\n\n    def aspirate_with_delay(current_pipette, volume, source, delay_seconds):\n        current_pipette.aspirate(volume, source)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n\n    def dispense_with_delay(current_pipette, volume, dest, delay_seconds):\n        current_pipette.dispense(volume, dest)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n\n    def mix_with_delay(current_pipette, volume, location, delay_seconds):\n        current_pipette.aspirate(volume, location)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n        current_pipette.dispense(volume, location)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n\n    def slow_tip_withdrawal(current_pipette, well_location, to_center=False):\n        if current_pipette.mount == 'right':\n            axis = 'A'\n        else:\n            axis = 'Z'\n        ctx.max_speeds[axis] = 10\n        if to_center is False:\n            current_pipette.move_to(well_location.top())\n        else:\n            current_pipette.move_to(well_location.center())\n        ctx.max_speeds[axis] = None\n\n    def set_default_clearances(\n     current_pipette, aspirate_setting, dispense_setting):\n        if 0 < aspirate_setting < 5 and 0 < dispense_setting < 5:\n            current_pipette.well_bottom_clearance.aspirate = aspirate_setting\n            current_pipette.well_bottom_clearance.dispense = dispense_setting\n\n    def restore_default_clearances(current_pipette):\n        current_pipette.well_bottom_clearance.aspirate = 1\n        current_pipette.well_bottom_clearance.dispense = 1\n\n    def viscous_flow_rates(current_pipette):\n        current_pipette.flow_rate.aspirate = flow_rate_ligation_mx\n        current_pipette.flow_rate.dispense = flow_rate_ligation_mx\n        current_pipette.flow_rate.blow_out = flow_rate_ligation_mx\n\n    def default_flow_rates(current_pipette):\n        if (current_pipette.name == 'p300_multi_gen2'\n           or current_pipette.name == 'p300_single_gen2'):\n            current_pipette.flow_rate.aspirate = 92.86\n            current_pipette.flow_rate.dispense = 92.86\n            current_pipette.flow_rate.blow_out = 92.86\n        elif (current_pipette.name == 'p20_multi_gen2'\n              or current_pipette.name == 'p20_single_gen2'):\n            current_pipette.flow_rate.aspirate = 7.56\n            current_pipette.flow_rate.dispense = 7.56\n            current_pipette.flow_rate.blow_out = 7.56\n\n    ctx.comment(\"\"\"\n    master mix plate in deck slot 4:\n    col 1 - End Prep Enzyme Mx + End Prep Rxn Bf\n    col 2 - Adapter\n    col 3 - Ligation Master Mx + Ligation Enhancer\n    col 4 - USER enzyme\n    \"\"\")\n    master_mix_plate = ctx.load_labware(\n     labware_pcr_plate, '4', 'Master Mix Plate')\n    [end_prep, adapter, lig_mm, user] = [master_mix_plate.columns_by_name()[\n     str(column)] for column in [1, 2, 3, 4]]\n\n    ctx.comment(\"\"\"\n    sample plate in thermocycler module:\n    samples arranged in columns of 8\n    up to 96 samples total\n    {} samples in this run\n    \"\"\".format(str(sample_count)))\n    num_cols = math.ceil(sample_count / 8)\n    tc = ctx.load_module('thermocycler')\n    tc.open_lid()\n    sample_plate = tc.load_labware(labware_pcr_plate, 'Sample Plate')\n\n    ctx.comment(\"\"\"\n    add end prep mix to samples\n    incubate in cycler:\n    15 min 37 C, 30 min 65 C, hold 20 C\n    \"\"\")\n    for column in sample_plate.columns()[:num_cols]:\n        p20m.transfer(2.25, end_prep[0].bottom(clearance_mm_plate), column[\n         0].bottom(clearance_samp_plate), mix_after=(3, 4), new_tip='always')\n    tc.close_lid()\n    tc.set_lid_temperature(100)\n    for temp, sec in zip([37, 65, 20], [900, 1800, 30]):\n        tc.set_block_temperature(temp)\n        ctx.delay(seconds=sec)\n    tc.open_lid()\n    tc.deactivate_lid()\n\n    ctx.comment(\"\"\"\n    add adapter to samples\n    \"\"\")\n    for column in sample_plate.columns()[:num_cols]:\n        p20m.transfer(1, adapter[0].bottom(clearance_mm_plate), column[\n         0].bottom(clearance_samp_plate), new_tip='always')\n\n    ctx.comment(\"\"\"\n    add ligation mix to samples\n    mix\n    incubate in cycler:\n    15 min 20 C\n\n    liquid handling method for ligation mix:\n    slow flow rate for aspiration and dispense\n    wait for liquid to finish moving after aspiration and dispense\n    dispense to a surface\n    withdraw tip slowly from liquid\n    \"\"\")\n\n    viscous_flow_rates(p20m)\n    for column in sample_plate.columns()[:num_cols]:\n        p20m.pick_up_tip()\n        aspirate_with_delay(p20m, 7.75, lig_mm[0].bottom(\n         clearance_mm_plate), delay_lig_mm)\n        slow_tip_withdrawal(p20m, lig_mm[0])\n        dispense_with_delay(p20m, 7.75, column[0].bottom(\n         clearance_samp_plate), delay_lig_mm)\n        for repeat in range(3):\n            mix_with_delay(p20m, 10, column[0].bottom(\n             clearance_samp_plate), delay_lig_mm)\n        p20m.drop_tip()\n    default_flow_rates(p20m)\n\n    tc.close_lid()\n    tc.set_block_temperature(20)\n    ctx.delay(minutes=15)\n    tc.open_lid()\n\n    ctx.comment(\"\"\"\n    add USER enzyme to samples\n    incubate in cycler:\n    15 min 37 C, hold 4 C\n    \"\"\")\n    for column in sample_plate.columns()[:num_cols]:\n        p20m.transfer(0.75, user[0].bottom(clearance_mm_plate), column[\n         0].bottom(clearance_samp_plate), mix_after=(3, 8), new_tip='always')\n    tc.close_lid()\n    tc.set_lid_temperature(47)\n    for temp, sec in zip([37, 4], [900, 30]):\n        tc.set_block_temperature(temp)\n        ctx.delay(seconds=sec)\n\n    pause_attention(\n     \"\"\"Process steps for part 1 are complete. Click resume to open the\n     cycler lid. Proceed to part 2.\"\"\")\n    tc.open_lid()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "Sample Count (between 1 and 96)",
            "name": "sample_count",
            "type": "int"
        },
        {
            "label": "Choice of p20 Tips",
            "name": "labware_tips20",
            "options": [
                {
                    "label": "Opentrons p20 Filter Tips",
                    "value": "opentrons_96_filtertiprack_20ul"
                },
                {
                    "label": "Opentrons p20 Tips",
                    "value": "opentrons_96_tiprack_20ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Choice of PCR Plate",
            "name": "labware_pcr_plate",
            "options": [
                {
                    "label": "biorad_96_wellplate_200ul_pcr",
                    "value": "biorad_96_wellplate_200ul_pcr"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 1,
            "label": "Well Bottom Clearance for Master Mix Plate (millimeters)",
            "name": "clearance_mm_plate",
            "type": "float"
        },
        {
            "default": 1,
            "label": "Well Bottom Clearance for Sample Plate (millimeters)",
            "name": "clearance_samp_plate",
            "type": "float"
        },
        {
            "default": 3,
            "label": "Reduced Flow Rate for Ligation Mix (ul/sec)",
            "name": "flow_rate_ligation_mx",
            "type": "float"
        },
        {
            "default": 1,
            "label": "Delay After Aspirate and Dispense for Ligation Mix (seconds)",
            "name": "delay_lig_mm",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Master Mix Plate on 4",
            "share": false,
            "slot": "4",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Sample Plate on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Steve Plonk <protocols@opentrons.com>",
        "protocolName": "Quarter Volume NEBNext Ultra II DNA Library Prep Kit for\n    Illumina: part 1"
    },
    "modules": [
        {
            "name": "ThermocyclerContext at Thermocycler Module on 7 lw Sample Plate on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "thermocycler"
        }
    ]
}