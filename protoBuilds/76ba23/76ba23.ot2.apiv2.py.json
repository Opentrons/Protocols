{
    "content": "from opentrons.protocol_api.labware import OutOfTipsError\nimport math\n\nmetadata = {\n    'protocolName': 'DNA extraction',\n    'author': 'Steve <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    ctx.set_rail_lights(True)\n\n    [engage_time, clearance_reservoir, labware_reservoir, set_tip_max,\n     dry_time, choose_tip_rack, uploaded_csv] = get_values(  # noqa: F821\n        \"engage_time\", \"clearance_reservoir\", \"labware_reservoir\",\n        \"set_tip_max\", \"dry_time\", \"choose_tip_rack\", \"uploaded_csv\")\n\n    # define constant values\n    increment_vol = 250\n    baseline_vol = 500\n\n    # sample volume from manifest\n    ml_line = uploaded_csv.splitlines()[3]\n    sample_volume = int(float(ml_line[\n     ml_line.find(',')+1:ml_line.find(' ml')])*1000)\n\n    # tips (capacity 200 ul if filter tips, otherwise 300 ul)\n    tips_300 = [ctx.load_labware(choose_tip_rack, slot) for slot in ['6', '9']]\n\n    # keep tip useage between full and half volume capacity\n    tip_capacity = tips_300[0].wells_by_name()['A1'].max_volume\n    tip_max = tip_capacity\n    if set_tip_max is not None:\n        if 0.5*tip_capacity < set_tip_max < tip_capacity:\n            tip_max = set_tip_max\n\n    # p300 multi\n    p300m = ctx.load_instrument(\n        \"p300_multi_gen2\", 'right', tip_racks=tips_300)\n\n    # primary DNA extraction plate in slot 2\n    dna_extraction_plates = [ctx.load_labware(\n     \"usascientific_96_wellplate_2.4ml_deep\", '2')]\n\n    # slot 1 first for sample plate, later for water\n    sample_plate = deep_well = ctx.load_labware(\n     \"usascientific_96_wellplate_2.4ml_deep\", '1')\n\n    # slot 3 first for premix, then wash, then ethanol\n    reagent_reservoir = ctx.load_labware(labware_reservoir, '3')\n    premix = wash = etoh = reagent_reservoir.wells()[0]\n\n    # waste reservoir\n    reservoir = ctx.load_labware(labware_reservoir, '11')\n    waste = reservoir.wells()[0]\n\n    # pcr plate for eluate in slot 10\n    elution_plate = ctx.load_labware(\n     \"nest_96_wellplate_100ul_pcr_full_skirt\", '10')\n\n    # magnetic module with magnets disengaged, function to remove waste\n    mag = ctx.load_module('magnetic module', '7')\n    mag.disengage()\n    mag_plate = mag.load_labware('usascientific_96_wellplate_2.4ml_deep')\n    mag_height = {\n        'omni_96_wellplate_2000ul': 8.5,\n        'nest_96_wellplate_2ml_deep': 8.5,\n        'usascientific_96_wellplate_2.4ml_deep': 8.5\n        }\n\n    # volume of sample and premix to be dispensed to primary extraction plate\n    vol_increments = math.floor((sample_volume - baseline_vol) / increment_vol)\n    if vol_increments > 4:\n        vol_increments = 4\n    vol_primary = baseline_vol + ((vol_increments in [1, 3, 4])*increment_vol)\n    if vol_primary == 500:\n        premix_vol = 633\n    else:\n        premix_vol = 950\n\n    # duplicate extraction plate in slot 5 if sample volume >= 1.0 mL\n    dna_extraction_plate = dna_extraction_plates[0]\n    if sample_volume >= 1000:\n        dna_extraction_plates.append(ctx.load_labware(\n         \"usascientific_96_wellplate_2.4ml_deep\", '5'))\n        duplicate_extraction_plate = dna_extraction_plates[1]\n        vol_duplicate = baseline_vol + ((vol_increments in [4])*increment_vol)\n        if vol_duplicate == 500:\n            duplicate_premix_vol = 633\n        else:\n            duplicate_premix_vol = 950\n\n    # helper functions\n    def change_tips(current_pipette):\n        current_pipette.drop_tip()\n        pick_up_or_refill(current_pipette)\n\n    def change_every_n(current_pipette, j, change_freq):\n        if ((j % change_freq == 0) and (j != 0)):\n            change_tips(current_pipette)\n\n    def set_default_clearances(\n     current_pipette, aspirate_setting, dispense_setting):\n        if 0 < aspirate_setting < 5 and 0 < dispense_setting < 5:\n            current_pipette.well_bottom_clearance.aspirate = aspirate_setting\n            current_pipette.well_bottom_clearance.dispense = dispense_setting\n\n    def restore_default_clearances(current_pipette):\n        current_pipette.well_bottom_clearance.aspirate = 1\n        current_pipette.well_bottom_clearance.dispense = 1\n\n    def pause_attention(message):\n        ctx.set_rail_lights(False)\n        ctx.delay(seconds=10)\n        ctx.pause(message)\n        ctx.set_rail_lights(True)\n\n    def pick_up_or_refill(current_pipette):\n        try:\n            current_pipette.pick_up_tip()\n        except OutOfTipsError:\n            pause_attention(\n             \"Please Refill the {} Tip Boxes\".format(current_pipette))\n            current_pipette.reset_tipracks()\n            current_pipette.pick_up_tip()\n\n    def pre_wet(volume, location):\n        for rep in range(2):\n            p300m.aspirate(volume, location)\n            p300m.dispense(volume, location)\n\n    def etoh_settings():\n        p300m.flow_rate.dispense = 300\n        p300m.flow_rate.blow_out = 300\n\n    def default_settings():\n        p300m.flow_rate.dispense = 94\n        p300m.flow_rate.blow_out = 300\n\n    def viscous_settings():\n        p300m.flow_rate.aspirate = 60\n        p300m.flow_rate.dispense = 60\n        p300m.flow_rate.blow_out = 300\n\n    def aqueous_settings():\n        p300m.flow_rate.aspirate = 60\n        p300m.flow_rate.dispense = 60\n        p300m.flow_rate.blow_out = 300\n\n    def rep_max_transfer(\n     remaining, source, dest, tip_max_vol=tip_max, air=0, blow=0, touch=False,\n     asp_delay=0, disp_delay=0, blow_location=\"destination\", blow_delay=0):\n        vol = tip_max_vol - air\n        while remaining > vol:\n            p300m.aspirate(vol, source)\n            if air > 0:\n                p300m.air_gap(air)\n            else:\n                if asp_delay > 0:\n                    ctx.delay(seconds=asp_delay)\n            p300m.dispense(tip_max_vol, dest)\n            if disp_delay > 0:\n                ctx.delay(seconds=disp_delay)\n            if blow > 0:\n                for rep in range(blow):\n                    if rep > 0:\n                        p300m.aspirate(tip_max, dest)\n                    ctx.delay(seconds=blow_delay)\n                    if blow_location == \"destination\":\n                        p300m.blow_out(dest)\n                    else:\n                        p300m.blow_out(blow_location)\n            if touch is True:\n                p300m.touch_tip(radius=0.75, v_offset=-2, speed=20)\n            remaining -= vol\n        p300m.aspirate(remaining, source)\n        if air > 0:\n            p300m.air_gap(air)\n        else:\n            if asp_delay > 0:\n                ctx.delay(seconds=asp_delay)\n        p300m.dispense(remaining + air, dest)\n        if disp_delay > 0:\n            ctx.delay(seconds=disp_delay)\n        if blow > 0:\n            for rep in range(blow):\n                if rep > 0:\n                    p300m.aspirate(tip_max, dest)\n                ctx.delay(seconds=blow_delay)\n                if blow_location == \"destination\":\n                    p300m.blow_out(dest)\n                else:\n                    p300m.blow_out(blow_location)\n        if touch is True:\n            p300m.touch_tip(radius=0.75, v_offset=-2, speed=20)\n\n    def add_reagent(\n     origin, target, add_vol, change_freq, current_pipette=p300m):\n        for index, column in enumerate(target.columns()):\n            if index == 0:\n                pick_up_or_refill(current_pipette)\n            change_every_n(current_pipette, index, change_freq)\n            rep_max_transfer(add_vol, origin, column[0].top())\n        p300m.drop_tip()\n\n    def remove_waste(waste_vol, change_freq):\n        for index, column in enumerate(mag_plate.columns()):\n            if index == 0:\n                pick_up_or_refill(p300m)\n            change_every_n(p300m, index, change_freq)\n            rep_max_transfer(\n             waste_vol, column[0], waste.top(), blow=3, blow_delay=1)\n        p300m.drop_tip()\n\n    # mix premix and distribute to DNA extraction plates\n    change_freq = 4  # adjust tip change frequency here\n    viscous_settings()\n    set_default_clearances(p300m, 4, 4)\n    for index, plate in enumerate(dna_extraction_plates):\n        pick_up_or_refill(p300m)\n        p300m.mix(10, tip_max, premix)\n        for j, column in enumerate(plate.columns()):\n            change_every_n(p300m, j, change_freq)\n            p300m.mix(5, tip_max, premix)\n            if index == 0:\n                rep_max_transfer(\n                 premix_vol, premix, column[0].top(), asp_delay=1,\n                 disp_delay=1, blow=1, touch=True)\n            else:\n                rep_max_transfer(\n                 duplicate_premix_vol, premix, column[0].top(), asp_delay=1,\n                 disp_delay=1, blow=1, touch=True)\n        p300m.drop_tip()\n\n    # sample to DNA extraction plates\n    change_freq = 1  # adjust tip change frequency here\n    aqueous_settings()\n    set_default_clearances(p300m, 2, 2)\n    for index, column in enumerate(sample_plate.columns()):\n        if index == 0:\n            pick_up_or_refill(p300m)\n        change_every_n(p300m, index, change_freq)\n        rep_max_transfer(\n         vol_primary, column[0], dna_extraction_plate.columns()[\n          index][0].top())\n        if sample_volume >= 1000:\n            rep_max_transfer(\n             vol_duplicate, column[0],\n             duplicate_extraction_plate.columns()[index][0].top())\n            p300m.mix(\n             5, tip_max, duplicate_extraction_plate.columns()[\n              index][0].bottom(4))\n            p300m.mix(5, tip_max, dna_extraction_plate.columns()[\n             index][0].bottom(4))\n        else:\n            p300m.mix(5, tip_max, dna_extraction_plate.columns()[\n             index][0].bottom(4))\n    p300m.drop_tip()\n\n    # manual steps\n    pause_attention(\"\"\"Paused for the following manual steps: (1)Seal the\n    plates, then invert 10 times to mix, then on plate shaker 10 minutes. Spin.\n    (2)Unseal the primary dna extraction plate and place it on the OT-2\n    magnetic module (Slot 4). If a duplicate plate, unseal and place it back in\n    its original deck slot. (3)Remove the premix reservoir from the OT-2 deck\n    (Slot 3). Replace it with HKG DNA Wash Buffer 1 reservoir. (4)Remove the\n    sample plate from the OT-2 deck (Slot 1). Replace it with a deep well plate\n    containing water (in column 1) for the elution step. (5)Click resume in\n    the OT app.\"\"\")\n\n    # engage magnets 20 min (primary DNA extraction plate)\n    mag.engage(height=mag_height['usascientific_96_wellplate_2.4ml_deep'])\n    ctx.delay(minutes=20)\n\n    # remove sup, final traces of sup (primary DNA extraction plate)\n    change_freq = 1  # adjust tip change frequency here\n    viscous_settings()\n    remove_waste(premix_vol + vol_primary, change_freq)\n    remove_waste(50, change_freq)\n\n    if sample_volume >= 1000:\n        pause_attention(\"\"\"Remove the primary plate from the magnetic module.\n        Return it to its previous deck slot. Place the duplicate DNA extraction\n        plate on the magnetic module.\"\"\")\n\n        # engage magnets 20 min (duplicate dna extraction plate)\n        mag.disengage()\n        mag.engage(height=mag_height['usascientific_96_wellplate_2.4ml_deep'])\n        ctx.delay(minutes=20)\n\n        # add 400 ul HKG DNA Wash Buffer 1 to primary dna extraction plate\n        change_freq = 4  # adjust tip change frequency here\n        aqueous_settings()\n        set_default_clearances(p300m, 4, 4)\n        add_reagent(wash, dna_extraction_plate, 400, change_freq)\n\n        # remove sup, remaining traces of sup (duplicate DNA extraction plate)\n        change_freq = 1  # adjust tip change frequency here\n        set_default_clearances(p300m, 2, 2)\n        remove_waste(duplicate_premix_vol + vol_duplicate, change_freq)\n        remove_waste(50, change_freq)\n\n        # suspend primary plate beads, move to duplicate wells to combine\n        change_freq = 1  # adjust tip change frequency here\n        viscous_settings()\n        for index, column in enumerate(dna_extraction_plate.columns()):\n            if index == 0:\n                pick_up_or_refill(p300m)\n            change_every_n(p300m, index, change_freq)\n            p300m.mix(5, tip_max, column[0])\n            rep_max_transfer(\n             400, column[0], mag_plate.columns()[index][0].top(), asp_delay=1,\n             disp_delay=1)\n        p300m.drop_tip()\n\n        # suspend with additional 100 ul HKG DNA Wash Buffer 1, combine\n        change_freq = 1  # adjust tip change frequency here\n        aqueous_settings()\n        set_default_clearances(p300m, 4, 4)\n        add_reagent(wash, dna_extraction_plate, 100, change_freq)\n\n        change_freq = 1  # adjust tip change frequency here\n        for index, column in enumerate(dna_extraction_plate.columns()):\n            if index == 0:\n                pick_up_or_refill(p300m)\n            change_every_n(p300m, index, change_freq)\n            p300m.mix(5, 50, column[0])\n            p300m.aspirate(100, column[0])\n            p300m.dispense(100, mag_plate.columns()[index][0])\n        p300m.drop_tip()\n\n    else:\n\n        # add 400 ul wash to primary DNA extraction plate (on magnetic module)\n        change_freq = 4  # adjust tip change frequency here\n        aqueous_settings()\n        set_default_clearances(p300m, 4, 4)\n        add_reagent(wash, mag_plate, 400, change_freq)\n\n    # suspend all beads in wash on magnetic module\n    change_freq = 1  # adjust tip change frequency here\n    viscous_settings()\n    set_default_clearances(p300m, 2, 2)\n    for index, column in enumerate(mag_plate.columns()):\n        if index == 0:\n            pick_up_or_refill(p300m)\n        change_every_n(p300m, index, change_freq)\n        p300m.mix(5, tip_max, column[0])\n    p300m.drop_tip()\n\n    mag.engage(height=mag_height['usascientific_96_wellplate_2.4ml_deep'])\n    ctx.delay(minutes=engage_time)\n\n    # remove sup\n    change_freq = 1  # adjust tip change frequency here\n    aqueous_settings()\n    if sample_volume >= 1000:\n        remove_waste(500, change_freq)\n    else:\n        remove_waste(400, change_freq)\n\n    # add 2nd wash 400 ul all beads\n    change_freq = 4  # adjust tip change frequency here\n    set_default_clearances(p300m, 4, 4)\n    add_reagent(wash, mag_plate, 400, change_freq)\n\n    mag.disengage()\n\n    # mix 2nd wash with beads\n    change_freq = 1  # adjust tip change frequency here\n    set_default_clearances(p300m, 2, 2)\n    for index, column in enumerate(mag_plate.columns()):\n        if index == 0:\n            pick_up_or_refill(p300m)\n        change_every_n(p300m, index, change_freq)\n        p300m.mix(5, tip_max, column[0])\n    p300m.drop_tip()\n\n    mag.engage(height=mag_height['usascientific_96_wellplate_2.4ml_deep'])\n    ctx.delay(minutes=engage_time)\n\n    # remove sup 2nd wash\n    change_freq = 1  # adjust tip change frequency here\n    remove_waste(400, change_freq)\n\n    mag.disengage()\n\n    # wash twice with 80 percent ethanol\n    pause_attention(\"\"\"Please remove the wash buffer reservoir from the OT-2\n    deck (Slot 3) and replace it with the 80 percent ethanol reservoir.\"\"\")\n\n    etoh_settings()\n    set_default_clearances(p300m, 4, 4)\n    change_freq = 4  # adjust tip change frequency here\n    for rep in range(2):\n        # add 80% etoh\n        for index, column in enumerate(mag_plate.columns()):\n            if index == 0:\n                pick_up_or_refill(p300m)\n            change_every_n(p300m, index, change_freq)\n            pre_wet(150, etoh)\n            rep_max_transfer(\n             500, etoh, column[0].top(), air=15, blow=3, blow_delay=1,\n             touch=True)\n        p300m.drop_tip()\n\n        # mix\n        set_default_clearances(p300m, 2, 2)\n        change_freq = 1  # adjust tip change frequency here\n        for index, column in enumerate(mag_plate.columns()):\n            if index == 0:\n                pick_up_or_refill(p300m)\n            change_every_n(p300m, index, change_freq)\n            p300m.mix(5, tip_max, column[0])\n        p300m.drop_tip()\n\n        mag.engage(height=mag_height['usascientific_96_wellplate_2.4ml_deep'])\n        ctx.delay(minutes=engage_time)\n\n        # remove sup\n        change_freq = 1  # adjust tip change frequency here\n        for index, column in enumerate(mag_plate.columns()):\n            if index == 0:\n                pick_up_or_refill(p300m)\n            change_every_n(p300m, index, change_freq)\n            rep_max_transfer(\n             500, column[0], waste.top(), air=15, blow=3, blow_delay=1)\n        p300m.drop_tip()\n\n    # remove remaining traces of sup\n    change_freq = 1  # adjust tip change frequency here\n    for index, column in enumerate(mag_plate.columns()):\n        if index == 0:\n            pick_up_or_refill(p300m)\n        change_every_n(p300m, index, change_freq)\n        rep_max_transfer(\n         50, column[0], waste.top(), air=15, blow=3, blow_delay=1)\n    p300m.drop_tip()\n\n    # air dry\n    mag.disengage()\n    ctx.delay(minutes=dry_time)\n\n    pause_attention(\"\"\"Replenish both tip boxes.\"\"\")\n    p300m.reset_tipracks()\n\n    # elution: add water, mix\n    aqueous_settings()\n    water = deep_well.columns_by_name()['1'][0]\n    p300m.distribute(\n     23, water, [column[0].top() for column in mag_plate.columns()])\n    for index, column in enumerate(mag_plate.columns()):\n        p300m.pick_up_tip()\n        p300m.mix(5, 18, column[0])\n        p300m.move_to(column[0].bottom(4))\n        p300m.blow_out()\n        p300m.drop_tip()\n\n    mag.engage(height=mag_height['usascientific_96_wellplate_2.4ml_deep'])\n    ctx.delay(minutes=engage_time)\n\n    pause_attention(\"\"\"Replenish both tip boxes.\"\"\")\n    p300m.reset_tipracks()\n\n    # recover eluate to pcr plate\n    p300m.transfer(\n     23, [column[0].bottom(1) for column in mag_plate.columns()],\n     [column[0].bottom(2) for column in elution_plate.columns()],\n     new_tip='always')\n    mag.disengage()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 7,
            "label": "Magnetic Module Engage Time (minutes)",
            "name": "engage_time",
            "type": "int"
        },
        {
            "default": 4,
            "label": "Default Well Bottom Clearance for Reservoirs (mm)",
            "name": "clearance_reservoir",
            "type": "float"
        },
        {
            "label": "Choose Reservoir Labware",
            "name": "labware_reservoir",
            "options": [
                {
                    "label": "agilent_1_reservoir_290ml",
                    "value": "agilent_1_reservoir_290ml"
                },
                {
                    "label": "nest_1_reservoir_195ml",
                    "value": "nest_1_reservoir_195ml"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 150,
            "label": "Tip Max Volume Capacity (ul)",
            "name": "set_tip_max",
            "type": "int"
        },
        {
            "default": 20,
            "label": "Minutes to Air Dry Beads",
            "name": "dry_time",
            "type": "int"
        },
        {
            "label": "Choose Filtered or Standard Tips for P300 multi",
            "name": "choose_tip_rack",
            "options": [
                {
                    "label": "Filtered Tips",
                    "value": "opentrons_96_filtertiprack_200ul"
                },
                {
                    "label": "Standard Tips",
                    "value": "opentrons_96_tiprack_300ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": "Run date,200612,,,,,,\nTechnician ID,7687654,,,,,,\nProgram,EpiAge (plasma),SOP Number: HKGEPI-028,,,,,\nVolume ,2.30 ml,,,,,,\n,,,,,,,\nDate,Reseller/test,Sample barcode,Plate barcode,Reverse index,Forward index,Well,Program\n180612,govita /aging,GP26,EPIF2,B001,2,A1,EpiAge\n180612,govita aging,GP28,EPIF2,B002,2,A2,EpiAge\n180612,govita aging,GP26,EPIF2,B003,2,A3,EpiAge\n180612,govita aging,GP229,EPIF2,B004,2,A4,EpiAge\n180612,govita aging,GP25,EPIF2,B005,2,A5,EpiAge\n180612,govita aging,GGTL10,EPIF2,B006,2,A6,EpiAge\n180612,govita aging,GP30,EPIF2,B007,2,A7,EpiAge\n180612,govita aging,GP32,EPIF2,B008,2,A8,EpiAge\n180612,govita aging,GP4,EPIF2,B009,2,A9,EpiAge\n180612,govita aging,GP7,EPIF2,B010,2,A10,EpiAge\n180612,govita aging,GP10,EPIF2,B011,2,A11,EpiAge\n180612,govita aging,GP11,EPIF2,B012,2,A12,EpiAge\n180612,govita aging,GP18,EPIF2,B013,2,B1,EpiAge\n180612,govita aging,GP20,EPIF2,B014,2,B2,EpiAge\n180612,govita aging,GP21,EPIF2,B015,2,B3,EpiAge\n180612,govita aging,GP22,EPIF2,B016,2,B4,EpiAge\n180612,govita aging,GP23,EPIF2,B017,2,B5,EpiAge\n180612,govita aging,GP25,EPIF2,B018,2,B6,EpiAge\n180612,govita aging,GP34,EPIF2,B019,2,B7,EpiAge\n180612,govita aging,GP36,EPIF2,B020,2,B8,EpiAge\n180612,govita aging,GP37,EPIF2,B021,2,B9,EpiAge\n180612,govita aging,GP42,EPIF2,B022,2,B10,EpiAge\n180612,govita aging,GP43,EPIF2,B023,2,B11,EpiAge\n180612,govita aging,GP44,EPIF2,B024,2,B12,EpiAge\n180612,govita aging,GP47,EPIF2,B025,2,C1,EpiAge\n180612,govita aging,GP49,EPIF2,B026,2,C2,EpiAge\n180612,govita aging,GP50,EPIF2,B027,2,C3,EpiAge\n180612,govita aging,GP51,EPIF2,B028,2,C4,EpiAge\n180612,govita aging,GP52,EPIF2,B029,2,C5,EpiAge\n180612,govita aging,GP55,EPIF2,B030,2,C6,EpiAge\n180612,govita aging,GP56,EPIF2,B031,2,C7,EpiAge\n180612,govita aging,GP57,EPIF2,B032,2,C8,EpiAge\n180612,govita aging,GP60,EPIF2,B033,2,C9,EpiAge\n180612,govita aging,GP61,EPIF2,B034,2,C10,EpiAge\n180612,govita aging,GP58,EPIF2,B035,2,C11,EpiAge\n180612,govita aging,GP78,EPIF2,B036,2,C12,EpiAge\n180612,govita aging,GP79,EPIF2,B037,2,D1,EpiAge\n180612,govita aging,GP80,EPIF2,B038,2,D2,EpiAge\n180612,govita aging,GP86,EPIF2,B039,2,D3,EpiAge\n180612,govita aging,GP110,EPIF2,B040,2,D4,EpiAge\n180612,govita aging,GP126,EPIF2,B041,2,D5,EpiAge\n180612,govita aging,GP127,EPIF2,B042,2,D6,EpiAge\n180612,govita aging,GP137,EPIF2,B043,2,D7,EpiAge\n180612,govita aging,GP138,EPIF2,B044,2,D8,EpiAge\n180612,govita aging,GP254,EPIF2,B045,2,D9,EpiAge\n180612,govita aging,GP255,EPIF2,B046,2,D10,EpiAge\n180612,govita aging,GP33,EPIF2,B047,2,D11,EpiAge\n180612,govita aging,GP0,EPIF2,B048,2,D12,EpiAge\n180612,govita aging,GP2,EPIF2,B049,2,E1,EpiAge\n180612,govita aging,GP24,EPIF2,B050,2,E2,EpiAge\n180612,govita aging,GP45,EPIF2,B051,2,E3,EpiAge\n180612,govita aging,GP48,EPIF2,B052,2,E4,EpiAge\n180612,govita aging,GP59,EPIF2,B053,2,E5,EpiAge\n180612,govita aging,GS100,EPIF2,B054,2,E6,EpiAge\n180612,govita aging,GS80,EPIF2,B055,2,E7,EpiAge\n180612,govita aging,GS60,EPIF2,B056,2,E8,EpiAge\n180612,govita aging,GS40,EPIF2,B057,2,E9,EpiAge\n180612,govita aging,GS20,EPIF2,B058,2,E10,EpiAge\n180612,govita aging,GS0,EPIF2,B059,2,E11,EpiAge\n180612,Isaac aging,GMIXP26,EPIF2,B060,2,E12,EpiAge\n180612,Isaac aging,GMIXP28,EPIF2,B061,2,F1,EpiAge\n180612,Isaac aging,GMIXP27,EPIF2,B062,2,F2,EpiAge\n180612,Isaac aging,GMIXGTL10,EPIF2,B063,2,F3,EpiAge\n180612,Isaac aging,GMIXP31,EPIF2,B064,2,F4,EpiAge\n180613,Isaac aging,GMIXP32,EPIF2,B065,2,F5,EpiAge\n180614,Isaac aging,GMIXP33,EPIF2,B066,2,F6,EpiAge\n180615,Isaac aging,GMIXP34,EPIF2,B067,2,F7,EpiAge\n180616,Isaac aging,GMIXP35,EPIF2,B068,2,F8,EpiAge\n180617,Isaac aging,GMIXP36,EPIF2,B069,2,F9,EpiAge\n180618,Isaac aging,GMIXP37,EPIF2,B070,2,F10,EpiAge\n180619,Isaac aging,GMIXP38,EPIF2,B071,2,F11,EpiAge\n180620,Isaac aging,GMIXP39,EPIF2,B072,2,F12,EpiAge\n180621,Isaac aging,GMIXP40,EPIF2,B073,2,G1,EpiAge\n180622,Isaac aging,GMIXP41,EPIF2,B074,2,G2,EpiAge\n180623,Isaac aging,GMIXP42,EPIF2,B075,2,G3,EpiAge\n180624,Isaac aging,GMIXP43,EPIF2,B076,2,G4,EpiAge\n180625,Isaac aging,GMIXP44,EPIF2,B077,2,G5,EpiAge\n180626,Isaac aging,GMIXP45,EPIF2,B078,2,G6,EpiAge\n180627,Isaac aging,GMIXP46,EPIF2,B079,2,G7,EpiAge\n180628,Isaac aging,GMIXP47,EPIF2,B080,2,G8,EpiAge\n180629,Isaac aging,GMIXP48,EPIF2,B081,2,G9,EpiAge\n180630,Isaac aging,GMIXP49,EPIF2,B082,2,G10,EpiAge\n180631,Isaac aging,GMIXP50,EPIF2,B083,2,G11,EpiAge\n180632,Isaac aging,GMIXP51,EPIF2,B084,2,G12,EpiAge\n180633,Isaac aging,GMIXP52,EPIF2,B085,2,H1,EpiAge\n180634,Isaac aging,GMIXP53,EPIF2,B086,2,H2,EpiAge\n180635,Isaac aging,GMIXP54,EPIF2,B087,2,H3,EpiAge\n180636,Isaac aging,GMIXP55,EPIF2,B088,2,H4,EpiAge\n180637,Isaac aging,GMIXP56,EPIF2,B089,2,H5,EpiAge\n180638,Isaac aging,GMIXP57,EPIF2,B090,2,H6,EpiAge\n180639,Isaac aging,GMIXP58,EPIF2,B091,2,H7,EpiAge\n180640,Isaac aging,GMIXP59,EPIF2,B092,2,H8,EpiAge\n180640,Isaac aging,GMIXP60,EPIF2,B093,2,H9,EpiAge\n180640,Isaac aging,GMIXP61,EPIF2,B094,2,H10,EpiAge\n180640,Isaac aging,GMIXP62,EPIF2,B095,2,H11,EpiAge\n180640,Isaac aging,GMIXP63,EPIF2,B096,2,H12,EpiAge",
            "label": "Uploaded CSV Copy of Sample Manifest",
            "name": "uploaded_csv",
            "type": "textFile"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "USA Scientific 96 Deep Well Plate 2.4 mL on 1",
            "share": false,
            "slot": "1",
            "type": "usascientific_96_wellplate_2.4ml_deep"
        },
        {
            "name": "USA Scientific 96 Deep Well Plate 2.4 mL on 2",
            "share": false,
            "slot": "2",
            "type": "usascientific_96_wellplate_2.4ml_deep"
        },
        {
            "name": "Agilent 1 Well Reservoir 290 mL on 3",
            "share": false,
            "slot": "3",
            "type": "agilent_1_reservoir_290ml"
        },
        {
            "name": "USA Scientific 96 Deep Well Plate 2.4 mL on 5",
            "share": false,
            "slot": "5",
            "type": "usascientific_96_wellplate_2.4ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "USA Scientific 96 Deep Well Plate 2.4 mL on Magnetic Module GEN1 on 7",
            "share": false,
            "slot": "7",
            "type": "usascientific_96_wellplate_2.4ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 10",
            "share": false,
            "slot": "10",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Agilent 1 Well Reservoir 290 mL on 11",
            "share": false,
            "slot": "11",
            "type": "agilent_1_reservoir_290ml"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Steve <protocols@opentrons.com>",
        "protocolName": "DNA extraction",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "MagneticModuleContext at Magnetic Module GEN1 on 7 lw USA Scientific 96 Deep Well Plate 2.4 mL on Magnetic Module GEN1 on 7",
            "share": false,
            "slot": "7",
            "type": "magdeck"
        }
    ]
}