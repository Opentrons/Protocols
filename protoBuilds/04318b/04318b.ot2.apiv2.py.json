{
    "content": "metadata = {\n    'protocolName': 'DMSO and Compound Stock Solution Addition - Part 1',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.13'\n}\n\n\ndef run(ctx):\n\n    [dmso_dil_factor, pre_dilution,\n        pre_dil_factor, m20_mount] = get_values(  # noqa: F821\n        \"dmso_dil_factor\", \"pre_dilution\",\n            \"pre_dil_factor\", \"m20_mount\")\n    #\n    # dmso_dil_factor = 1.5\n    # m20_mount = 'left'\n    # pre_dilution = False\n    # pre_dil_factor = 2\n\n    # labware\n    dmso = ctx.load_labware('nest_12_reservoir_15ml', 1).wells()[0]\n\n    plates = [ctx.load_labware('nest_96_wellplate_100ul_pcr_full_skirt',\n              slot, 'plate')\n              for slot in [2, 4, 5, 10, 11]]\n\n    plates = plates\n    deep_plates = [ctx.load_labware('nest_96_wellplate_2ml_deep',\n                   slot, 'plate')\n                   for slot in [6, 7, 8, 9]]\n    deep_plates = deep_plates\n    tips = [ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n            for slot in [3]]\n\n    # pipette\n    m20 = ctx.load_instrument('p20_multi_gen2', m20_mount, tip_racks=tips)\n\n    # mapping\n    compound_plate = plates[0]\n    dmso_plate_11 = ctx.loaded_labwares[4]\n    dmso_plate_12 = ctx.loaded_labwares[5]\n    dmso_plate_21 = ctx.loaded_labwares[10]\n    dmso_plate_22 = ctx.loaded_labwares[11]\n    media_plate_11 = ctx.loaded_labwares[9]\n    media_plate_12 = ctx.loaded_labwares[6]\n    media_plate_21 = ctx.loaded_labwares[7]\n    media_plate_22 = ctx.loaded_labwares[8]\n\n    # protocol\n    dmso_vol = -4.8*(1-dmso_dil_factor)\n\n    # transfer dmso to most cols dilution plates dmso 1-1, 1-2\n    m20.pick_up_tip()\n\n    for plate in [dmso_plate_11, dmso_plate_21]:\n        for col in plate.rows()[0][1:]:\n            m20.aspirate(dmso_vol, dmso)\n            m20.dispense(dmso_vol, col)\n        ctx.comment('\\n')\n\n    # transfer dmso to all cols dilution plates dmso 1-2, 2-2\n    for plate in [dmso_plate_12, dmso_plate_22]:\n        for col in plate.rows()[0]:\n            m20.aspirate(dmso_vol, dmso)\n            m20.dispense(dmso_vol, col)\n        ctx.comment('\\n')\n\n    if pre_dilution:\n        dmso_pre_dil_vol = 20-20/pre_dil_factor\n        compound_source_A = compound_plate.rows()[0][10]\n        compound_source_B = compound_plate.rows()[0][11]\n        m20.aspirate(dmso_pre_dil_vol, dmso)\n        m20.dispense(dmso_pre_dil_vol, compound_source_A)\n        m20.aspirate(dmso_pre_dil_vol, dmso)\n        m20.dispense(dmso_pre_dil_vol, compound_source_B)\n        m20.drop_tip()\n        ctx.comment('\\n')\n\n        m20.pick_up_tip()\n        m20.aspirate(20-dmso_pre_dil_vol, compound_plate.rows()[0][0])\n        m20.dispense(20-dmso_pre_dil_vol, compound_source_A)\n        m20.mix(10, 18, compound_source_A)\n        m20.drop_tip()\n        ctx.comment('\\n')\n\n        m20.pick_up_tip()\n        m20.aspirate(20-dmso_pre_dil_vol, compound_plate.rows()[0][1])\n        m20.dispense(20-dmso_pre_dil_vol, compound_source_B)\n        m20.mix(10, 18, compound_source_B)\n        m20.drop_tip()\n        ctx.comment('\\n')\n\n    else:\n        m20.drop_tip()\n        compound_source_A = compound_plate.rows()[0][0]\n        compound_source_B = compound_plate.rows()[0][1]\n\n    # transfer compound to plate\n    ctx.comment('\\nTransferring Compound \\n')\n    for compound, first_plate, second_plate in zip(\n                            [compound_source_A, compound_source_B],\n                            [dmso_plate_11, dmso_plate_21],\n                            [dmso_plate_12, dmso_plate_22]):\n        m20.pick_up_tip()\n        m20.aspirate(7.2, compound)\n        m20.dispense(7.2, first_plate.wells()[0])\n        for i, col in enumerate(first_plate.rows()[0][:10]):\n            m20.aspirate(4.8, first_plate.rows()[0][i])\n            m20.dispense(4.8, first_plate.rows()[0][i+1])\n            m20.mix(6, 0.9*(dmso_vol+4.8), first_plate.rows()[0][i+1])\n        ctx.comment('\\n\\n')\n\n        m20.aspirate(4.8, first_plate.rows()[0][10])\n        m20.dispense(4.8, second_plate.rows()[0][0])\n        m20.mix(6, 0.9*(dmso_vol+4.8), second_plate.rows()[0][0])\n\n        for i, col in enumerate(second_plate.rows()[0][:10]):\n            m20.aspirate(4.8, second_plate.rows()[0][i])\n            m20.dispense(4.8, second_plate.rows()[0][i+1])\n            m20.mix(6, 0.9*(dmso_vol+4.8), second_plate.rows()[0][i+1])\n        m20.drop_tip()\n        ctx.comment('\\n\\n\\n\\n\\n\\n\\n\\n')\n\n    ctx.pause(\"Replace Tip Rack\")\n    m20.reset_tipracks()\n\n    for source_plate, dest_plate in zip(\n\n                                        [dmso_plate_11, dmso_plate_12,\n                                         dmso_plate_21, dmso_plate_22],\n                                        [media_plate_11, media_plate_12,\n                                         media_plate_21, media_plate_22]):\n\n        for source, dest in zip(source_plate.rows()[0], dest_plate.rows()[0]):\n            m20.pick_up_tip()\n            m20.aspirate(2.4, source)\n            m20.dispense(2.4, dest)\n            m20.drop_tip()\n\n        ctx.pause(\"Replace Tip Rack\")\n        m20.reset_tipracks()\n\n        ctx.comment('\\n\\n')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 1.5,
            "label": "DMSO Dilution Factor",
            "name": "dmso_dil_factor",
            "type": "float"
        },
        {
            "label": "Add pre-dilution step?",
            "name": "pre_dilution",
            "options": [
                {
                    "label": "yes, add pre-dilution step",
                    "value": true
                },
                {
                    "label": "no, do not add pre-dilution step",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 2,
            "label": "If prepdilution step, pre-dilution factor",
            "name": "pre_dil_factor",
            "type": "float"
        },
        {
            "label": "P20 Multi-Channel Mount",
            "name": "m20_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 12 Well Reservoir 15 mL on 1",
            "share": false,
            "slot": "1",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "plate on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "plate on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "plate on 5",
            "share": false,
            "slot": "5",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "plate on 6",
            "share": false,
            "slot": "6",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "plate on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "plate on 8",
            "share": false,
            "slot": "8",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "plate on 9",
            "share": false,
            "slot": "9",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "plate on 10",
            "share": false,
            "slot": "10",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "plate on 11",
            "share": false,
            "slot": "11",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.13",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "DMSO and Compound Stock Solution Addition - Part 1",
        "source": "Custom Protocol Request"
    },
    "modules": []
}