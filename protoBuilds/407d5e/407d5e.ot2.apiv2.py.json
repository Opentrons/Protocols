{
    "content": "import os\nimport csv\n\nmetadata = {\n    'protocolName': 'Protein Labeling with Incubation',\n    'author': 'Chaz <chaz@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.9'\n}\n\n\ndef run(protocol):\n    [numSamps, numInc, sampLabware,\n     tempGen, resetTips] = get_values(  # noqa: F821\n     'numSamps', 'numInc', 'sampLabware', 'tempGen', 'resetTips')\n\n    # load labware\n    tips20 = [\n        protocol.load_labware(\n            'opentrons_96_tiprack_20ul', s) for s in [9, 6, 3]]\n    tips300 = [\n        protocol.load_labware(\n            'opentrons_96_tiprack_300ul', s) for s in [8, 11, 10]]\n\n    p20 = protocol.load_instrument(\n        'p20_single_gen2', 'right', tip_racks=tips20)\n    p300 = protocol.load_instrument(\n        'p300_single_gen2', 'left', tip_racks=tips300)\n\n    tempDeck = protocol.load_module(tempGen, '4')\n    tempPlate = tempDeck.load_labware(\n        'opentrons_96_aluminumblock_nest_wellplate_100ul')\n    reagentRack = protocol.load_labware(\n        'opentrons_24_aluminumblock_nest_1.5ml_snapcap',\n        '7', 'Aluminum Block with 1.5mL Tubes containing Reagents')\n    mixPlate = protocol.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt',\n        '5', 'NEST 96 PCR Plate for mixing')\n    destPlate = protocol.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt',\n        '1', 'NEST 96 PCR Plate for Samples')\n    sampRack = protocol.load_labware(\n        sampLabware, '2', 'Aluminum Block containing Samples')\n\n    # Create and update variables\n\n    if not 1 <= numSamps <= 19:\n        raise Exception('Number of Samples should be between 1 and 19.')\n\n    tempDeck.deactivate()\n\n    protocol.set_rail_lights(True)\n\n    initSamps = sampRack.wells()[:numSamps]  # samples in rack\n    mixSamps = mixPlate.wells()[:numSamps]  # samples + reagents\n    tempChunks = [\n        tempPlate.wells()[i * 5:(i + 1) * 5] for i in range(\n            (len(tempPlate.wells()) + 5 - 1) // 5)][:numSamps]\n    tempWells = tempPlate.wells()[:numSamps*5]\n    destWells = destPlate.wells()[:numSamps*5]\n    buff1 = reagentRack['A1']\n    labelling = reagentRack['A2']\n    tris = reagentRack['A3']\n    sampBuffs = reagentRack.rows()[1]\n\n    # Tip tracking between runs\n    if not protocol.is_simulating():\n        file_path = '/data/csv/tiptracking407d5e.csv'\n        file_dir = os.path.dirname(file_path)\n        # check for file directory\n        if not os.path.exists(file_dir):\n            os.makedirs(file_dir)\n        # check for file; if not there, create initial tip count tracking\n        if not os.path.isfile(file_path):\n            with open(file_path, 'w') as outfile:\n                outfile.write(\"0, 0\\n\")\n\n    tip_count_list = []\n    # first value is 300uL tips; second is 20uL tips\n    if protocol.is_simulating() or resetTips:\n        tip_count_list = [0, 0]\n    else:\n        with open(file_path) as csv_file:\n            csv_reader = csv.reader(csv_file, delimiter=',')\n            tip_count_list = next(csv_reader)\n\n    tips300flat = [well for rack in tips300 for well in rack.wells()]\n    tips20flat = [well for rack in tips20 for well in rack.wells()]\n    tipState = {\n        p300: [tips300flat, tip_count_list[0]],\n        p20: [tips20flat, tip_count_list[1]]\n        }\n\n    def pick_up(pip):\n        if tipState[pip][1] == 96*3:\n            for _ in range(10):\n                protocol.set_rail_lights(not protocol.rail_lights_on)\n                protocol.delay(seconds=1)\n            protocol.pause(f\"Please replace tips for {pip}\")\n            pip.reset_tipracks()\n            tipState[pip][1] = 0\n        pip.pick_up_tip(tipState[pip][0][tipState[pip][1]])\n        tipState[pip][1] += 1\n\n    # 1. Transfer 5.8uL buffer to samp wells on mix plate\n    protocol.comment('\\nTransferring 5.8uL of Buffer to Mix Plate\\n')\n\n    pick_up(p20)\n\n    for samp in mixSamps:\n        p20.transfer(5.8, buff1, samp, new_tip='never')\n\n    p20.drop_tip()\n\n    # 2. Transfer 58.1uL of samp to mix plate\n    protocol.comment('\\nTransferring 58.1uL of Sample to Mix Plate\\n')\n\n    for src, dest in zip(initSamps, mixSamps):\n        pick_up(p300)\n        p300.transfer(58.1, src, dest, new_tip='never')\n        p300.drop_tip()\n\n    # 3. Transfer 2.9uL of labelling reagent to mix plate\n    protocol.comment('\\nTransferring 2.9uL of Labelling Reagent to Samples\\n')\n\n    for samp in mixSamps:\n        pick_up(p20)\n        p20.transfer(2.9, labelling, samp, mix_after=(15, 20), new_tip='never')\n        p20.drop_tip()\n\n    # 4. Incubate for 1 hour\n    protocol.comment('\\nIncubating for 1 hour\\n')\n\n    protocol.delay(minutes=60)\n\n    # 5. Transfer 58.1 Tris to each well and mix\n    # 6. Distributing 20uL to 5 wells on Temperature module\n    protocol.comment('\\nAdding 58.1uL of Tris to each Sample & \\\n    Distributing 20uL 5-times to Temperature Module\\n')\n\n    for samp, dests in zip(mixSamps, tempChunks):\n        pick_up(p300)\n        p300.transfer(58.1, tris, samp, mix_after=(5, 100), new_tip='never')\n        p300.aspirate(110, samp)\n        for dest in dests:\n            p300.dispense(20, dest)\n        p300.dispense(10, samp)\n        p300.drop_tip()\n\n    # 7. Transfer 180uL of buffers to samples on temperature module\n    protocol.comment('\\nTransferring 180uL buffer to corresponding samples\\n')\n\n    for dests in tempChunks:\n        for src, dest in zip(sampBuffs, dests):\n            pick_up(p300)\n            p300.transfer(180, src, dest, mix_after=(5, 180), new_tip='never')\n            p300.drop_tip()\n\n    # 8. Transfer 20uL of samp to final plate\n    protocol.comment('\\nTransferring 20uL of sample to final plate\\n')\n    for src, dest in zip(tempWells, destWells):\n        pick_up(p20)\n        p20.transfer(20, src, dest, mix_before=(5, 20), new_tip='never')\n        p20.drop_tip()\n\n    # 9. Set Temperature Module to 37\n    # 10. Perform step 8 at 1, 2, and 4 day intervals (based on parameter)\n\n    times = [1, 1, 2]  # create intervals for delay\n\n    for time in times[:numInc]:\n        tempDeck.set_temperature(37)\n\n        protocol.comment(f'\\nIncubating for {time} day(s)\\n')\n        protocol.delay(minutes=time*24*60)\n\n        protocol.comment('\\nPreparing for sample transfer to final plate\\n')\n\n        for _ in range(20):\n            protocol.set_rail_lights(not protocol.rail_lights_on)\n            protocol.delay(seconds=1)\n\n        for src, dest in zip(tempWells, destWells):\n            pick_up(p20)\n            p20.transfer(20, src, dest, mix_before=(5, 20), new_tip='never')\n            p20.drop_tip()\n\n    # Protocol complete; save tip state\n    new_tip_count = str(tipState[p300][1])+\", \"+str(tipState[p20][1])+\"\\n\"\n    if not protocol.is_simulating():\n        with open(file_path, 'w') as outfile:\n            outfile.write(new_tip_count)\n\n    protocol.set_rail_lights(False)\n    protocol.comment('\\nProtocol complete!')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 1,
            "label": "Number of Samples (1-19)",
            "name": "numSamps",
            "type": "int"
        },
        {
            "default": 3,
            "label": "Number of Incubations (max: 3)",
            "name": "numInc",
            "type": "int"
        },
        {
            "label": "Labware Containing Samples",
            "name": "sampLabware",
            "options": [
                {
                    "label": "NEST 2mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_screwcap"
                },
                {
                    "label": "NEST 2mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_snapcap"
                },
                {
                    "label": "NEST 1.5mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_screwcap"
                },
                {
                    "label": "NEST 1.5mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
                },
                {
                    "label": "NEST 0.5mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_0.5ml_screwcap"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Temperature Module",
            "name": "tempGen",
            "options": [
                {
                    "label": "GEN1",
                    "value": "temperature module"
                },
                {
                    "label": "GEN2",
                    "value": "temperature module gen2"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Reset Tipracks?",
            "name": "resetTips",
            "options": [
                {
                    "label": "Yes",
                    "value": 1
                },
                {
                    "label": "No",
                    "value": 0
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        },
        {
            "mount": "right",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 PCR Plate for Samples on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Aluminum Block containing Samples on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_24_aluminumblock_nest_2ml_screwcap"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L on Temperature Module GEN1 on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "NEST 96 PCR Plate for mixing on 5",
            "share": false,
            "slot": "5",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Aluminum Block with 1.5mL Tubes containing Reagents on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Chaz <chaz@opentrons.com>",
        "protocolName": "Protein Labeling with Incubation",
        "source": "Custom Protocol Request"
    },
    "modules": []
}