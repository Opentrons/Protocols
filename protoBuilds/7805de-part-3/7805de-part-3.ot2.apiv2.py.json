{
    "content": "import math\nfrom opentrons import types\nfrom opentrons.protocol_api.labware import OutOfTipsError\n\nmetadata = {\n    'protocolName': '''NEBNext Ultra II Directional RNA Library Prep Kit\n    for Illumina with poly(A) selection: part 3 -\n    End Prep, Adapter Ligation and Bead Clean Up''',\n    'author': 'Steve Plonk <protocols@opentrons.com>',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    # get parameter values from json above\n    [sample_count, labware_pcr_plate,\n     labware_reservoir, labware_tube_strip, clearance_sample_plate,\n     clearance_reservoir, clearance_strip_tubes, clearance_bead_pellet,\n     delay_beads, flow_rate_beads, engage_time, engage_offset, dry_time,\n     x_offset_bead_pellet\n     ] = get_values(  # noqa: F821\n      'sample_count', 'labware_pcr_plate',\n      'labware_reservoir', 'labware_tube_strip', 'clearance_sample_plate',\n      'clearance_reservoir', 'clearance_strip_tubes', 'clearance_bead_pellet',\n      'delay_beads', 'flow_rate_beads', 'engage_time', 'engage_offset',\n      'dry_time', 'x_offset_bead_pellet')\n\n    ctx.set_rail_lights(True)\n    if not 1 <= sample_count <= 24:\n        raise Exception('Invalid number of samples (must be 1-24).')\n\n    # tips, p20 multi gen2, p300 multi gen2\n    tips20 = [ctx.load_labware(\n     \"opentrons_96_filtertiprack_20ul\", str(slot)) for slot in [2, 5]]\n    p20m = ctx.load_instrument(\n        \"p20_multi_gen2\", 'left', tip_racks=tips20)\n    tips300 = [ctx.load_labware(\n     \"opentrons_96_filtertiprack_200ul\", str(slot)) for slot in [6, 9]]\n    p300m = ctx.load_instrument(\n        \"p300_multi_gen2\", 'right', tip_racks=tips300)\n\n    \"\"\"\n    helper functions\n    \"\"\"\n\n    def create_chunks(list_name, n):\n        for i in range(0, len(list_name), n):\n            yield list_name[i:i+n]\n\n    def pick_up_or_refill(current_pipette):\n        try:\n            current_pipette.pick_up_tip()\n        except OutOfTipsError:\n            pause_attention(\n             \"\"\"Please Refill the {} Tip Boxes\n             and Empty the Tip Waste\"\"\".format(current_pipette))\n            current_pipette.reset_tipracks()\n            current_pipette.pick_up_tip()\n\n    def pause_attention(message):\n        ctx.set_rail_lights(False)\n        ctx.delay(seconds=10)\n        ctx.pause(message)\n        ctx.set_rail_lights(True)\n\n    def aspirate_with_delay(current_pipette, volume, source, delay_seconds):\n        current_pipette.aspirate(volume, source)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n\n    def dispense_with_delay(current_pipette, volume, dest, delay_seconds):\n        current_pipette.dispense(volume, dest)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n\n    def mix_with_delay(current_pipette, volume, location, delay_seconds):\n        current_pipette.aspirate(volume, location)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n        current_pipette.dispense(volume, location)\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n\n    def slow_tip_withdrawal(current_pipette, well_location, to_center=False):\n        if current_pipette.mount == 'right':\n            axis = 'A'\n        else:\n            axis = 'Z'\n        ctx.max_speeds[axis] = 10\n        if to_center is False:\n            current_pipette.move_to(well_location.top())\n        else:\n            current_pipette.move_to(well_location.center())\n        ctx.max_speeds[axis] = None\n\n    def pre_wet(current_pipette, volume, location):\n        for rep in range(2):\n            current_pipette.aspirate(volume, location)\n            current_pipette.dispense(volume, location)\n\n    def set_default_clearances(\n     current_pipette, aspirate_setting, dispense_setting):\n        if 0 < aspirate_setting < 5 and 0 < dispense_setting < 5:\n            current_pipette.well_bottom_clearance.aspirate = aspirate_setting\n            current_pipette.well_bottom_clearance.dispense = dispense_setting\n\n    def restore_default_clearances(current_pipette):\n        current_pipette.well_bottom_clearance.aspirate = 1\n        current_pipette.well_bottom_clearance.dispense = 1\n\n    def viscous_flow_rates(current_pipette):\n        current_pipette.flow_rate.aspirate = flow_rate_beads\n        current_pipette.flow_rate.dispense = flow_rate_beads\n        current_pipette.flow_rate.blow_out = flow_rate_beads\n\n    def etoh_flow_rates(current_pipette):\n        if (current_pipette.name == 'p300_multi_gen2' or\n           current_pipette.name == 'p300_single_gen2'):\n            current_pipette.flow_rate.aspirate = 92.86\n            current_pipette.flow_rate.dispense = 92.86\n            current_pipette.flow_rate.blow_out = 300\n\n    def default_flow_rates(current_pipette):\n        if (current_pipette.name == 'p300_multi_gen2' or\n           current_pipette.name == 'p300_single_gen2'):\n            current_pipette.flow_rate.aspirate = 92.86\n            current_pipette.flow_rate.dispense = 92.86\n            current_pipette.flow_rate.blow_out = 92.86\n        elif (current_pipette.name == 'p20_multi_gen2' or\n              current_pipette.name == 'p20_single_gen2'):\n            current_pipette.flow_rate.aspirate = 7.56\n            current_pipette.flow_rate.dispense = 7.56\n            current_pipette.flow_rate.blow_out = 7.56\n\n    def reuse_tips(current_pipette, which_tips):\n        current_pipette.reset_tipracks()\n        current_pipette.starting_tip = named_tips[which_tips]\n\n    named_tips = {}\n\n    def name_the_tips(tip_box, name_list, well_list):\n        for name, well in zip(\n         name_list, well_list):\n            named_tips[name] = tip_box[well]\n\n    ctx.delay(seconds=10)\n    pause_attention(\"\"\"\n    Set up for End Prep and Adapter Ligation:\n\n    sample plate (from part 2) in pre-chilled aluminum block on deck slot 7\n    (50 ul double-stranded cDNA with\n    up to 24 samples arranged in columns of 8).\n\n    Reagents in strip tubes on 4 degree temp module:\n    column 1 - end prep reaction buffer\n    column 2 - end prep enzyme mix\n    column 3 - diluted NEBNext adapter\n    column 4 - NEBNext ligation enhancer\n    column 5 - NEBNext Ligation Master Mix\n    column 6 - USER enzyme\n\n    p20 tips in slots 2 and 5\n    p300 tips in slots 6 and 9\n    \"\"\")\n\n    ctx.comment(\"\"\"\n    reagent reservoir in deck slot 1:\n    col 1 - beads\n    col 2 - freshly prepared 80 percent ethanol\n    col 4 - 0.1x TE\n    col 10 - waste\n    col 11 - waste\n    col 12 - waste\n    \"\"\")\n    reagent_reservoir = ctx.load_labware(\n     labware_reservoir, '1', 'Reagent Reservoir')\n    [beads, etoh, te, waste_1, waste_2, waste_3] = [\n     reagent_reservoir.wells_by_name()[\n      well] for well in ['A1', 'A2', 'A4', 'A10', 'A11', 'A12']]\n\n    ctx.comment(\"\"\"\n    mag plate on magnetic module\n    \"\"\")\n    mag = ctx.load_module('magnetic module gen2', '4')\n    mag.disengage()\n    mag_plate = mag.load_labware(labware_pcr_plate, 'Mag Plate')\n\n    ctx.comment(\"\"\"\n    reagent block for tube strips on 4 degree temperature module\n    \"\"\")\n    temp = ctx.load_module('temperature module gen2', '3')\n    reagent_block = temp.load_labware(labware_tube_strip, '4 Degree Block')\n    [ep_rxn_bf, ep_enz, adapt, lig_enhance, lig_mm, user] = [\n     reagent_block.columns_by_name()[str(name + 1)] for name in [*range(6)]]\n\n    ctx.comment(\"\"\"\n    Sample plate in deck slot 7:\n    on pre-chilled aluminum block\n    containing 50 ul double-stranded cDNA\n    samples arranged in columns of 8\n    up to 24 samples total\n    {} samples in this run\n    \"\"\".format(str(sample_count)))\n    num_cols = math.ceil(sample_count / 8)\n    sample_plate = ctx.load_labware(\n     \"opentrons_96_aluminumblock_nest_wellplate_100ul\", '7',\n     'cDNA Sample Plate on Chilled Aluminum Block')\n\n    ctx.comment(\"\"\"\n    elution plate in deck slot 8\n    \"\"\")\n    elution_plate = ctx.load_labware(labware_pcr_plate, '8', 'Elution Plate')\n\n    ctx.comment(\"\"\"\n    end prep:\n    add end prep reaction buffer\n    add end prep enzyme mix\n    mix thoroughly\n    \"\"\")\n    p20m.transfer(\n     7, ep_rxn_bf[0].bottom(clearance_strip_tubes), [column[0].bottom(\n      clearance_sample_plate) for column in sample_plate.columns()[\n      :num_cols]], new_tip='always')\n    p20m.transfer(\n     3, ep_enz[0].bottom(clearance_strip_tubes), [column[0].bottom(\n      clearance_sample_plate) for column in sample_plate.columns()[\n      :num_cols]], new_tip='always')\n    for column in sample_plate.columns()[:num_cols]:\n        p300m.pick_up_tip()\n        p300m.mix(10, 50, column[0].bottom(clearance_sample_plate))\n        p300m.drop_tip()\n\n    pause_attention(\"\"\"\n        pausing for off-deck steps\n\n        first, spin the plate\n        then, on thermocycler-\n\n        30 min 20 C\n        30 min 65 C\n        hold 4 C\n\n        immediately place plate in pre-chilled aluminum block\n        and return to deck slot 7 for adapter ligation\n        resume\n        \"\"\")\n\n    ctx.comment(\"\"\"\n    adapter ligation:\n    add diluted adapter\n    add ligation enhancer\n    add ligation master mix\n    mix thoroughly\n\n    liquid handling method for master mix:\n    slow flow rate for aspiration and dispense\n    wait for liquid to finish moving after aspiration and dispense\n    withdraw tip slowly from liquid\n    \"\"\")\n    p20m.transfer(\n     2.5, adapt[0].bottom(clearance_strip_tubes), [column[0].bottom(\n      clearance_sample_plate) for column in sample_plate.columns()[\n      :num_cols]], new_tip='always')\n    p20m.transfer(\n     1, lig_enhance[0].bottom(clearance_strip_tubes), [column[0].bottom(\n      clearance_sample_plate) for column in sample_plate.columns()[\n      :num_cols]], new_tip='always')\n    viscous_flow_rates(p300m)\n    for column in sample_plate.columns()[:num_cols]:\n        p300m.pick_up_tip()\n        aspirate_with_delay(p300m, 30, lig_mm[0].bottom(\n         clearance_strip_tubes), delay_beads)\n        slow_tip_withdrawal(p300m, lig_mm[0])\n        dispense_with_delay(p300m, 30, column[0].bottom(\n         clearance_sample_plate), delay_beads)\n        for repeat in range(10):\n            mix_with_delay(p300m, 80, column[0].bottom(\n             clearance_sample_plate), delay_beads)\n        slow_tip_withdrawal(p300m, column[0])\n        p300m.drop_tip()\n    default_flow_rates(p300m)\n\n    pause_attention(\"\"\"\n        pausing for off-deck steps\n\n        spin\n\n        thermocycler:\n        15 min 20 C\n\n        return the sample plate\n        resume\n        \"\"\")\n\n    ctx.comment(\"\"\"\n    add USER enzyme\n    mix\n    \"\"\")\n    for column in sample_plate.columns()[:num_cols]:\n        pick_up_or_refill(p20m)\n        p20m.aspirate(3, user[0].bottom(clearance_strip_tubes))\n        p20m.dispense(3, column[0].bottom(clearance_sample_plate))\n        p20m.drop_tip()\n        p300m.pick_up_tip()\n        p300m.mix(10, 50, column[0].bottom(clearance_sample_plate))\n        p300m.drop_tip()\n\n    pause_attention(\"\"\"\n        pausing for off-deck steps\n\n        thermocycler:\n        15 min 37 C\n\n        return the sample plate to the magnetic module\n\n        set up for bead clean up:\n        replenish the tip boxes\n        empty the tip waste\n        add reagents to reservoir in deck slot 1:\n        col 1 - beads\n        col 2 - freshly prepared 80 percent ethanol\n        col 4 - 0.1x TE\n        place elution plate in deck slot 8\n        resume\n        \"\"\")\n    p300m.reset_tipracks()\n    p20m.reset_tipracks()\n    ctx.comment(\"\"\"\n    bead clean up of ligation reaction\n    move half the cDNA volume to a second well\n    \"\"\")\n    p300m.transfer(48, [column[0].bottom(\n     clearance_sample_plate) for column in mag_plate.columns()[:num_cols]], [\n     column[0].bottom(clearance_sample_plate) for column in mag_plate.columns(\n     )[6:num_cols+6]], new_tip='always')\n\n    ctx.comment(\"\"\"\n    add beads and mix, wait\n\n    liquid handling method for beads:\n    slow flow rate for aspiration and dispense\n    wait for liquid to finish moving after aspiration and dispense\n    withdraw tip slowly from liquid\n    \"\"\")\n    viscous_flow_rates(p300m)\n    for column in mag_plate.columns()[\n     :num_cols]+mag_plate.columns()[6:num_cols+6]:\n        p300m.pick_up_tip()\n        p300m.mix(3, 100, beads.bottom(clearance_reservoir), rate=2)\n        aspirate_with_delay(p300m, 43.5, beads.bottom(\n         clearance_reservoir), delay_beads)\n        slow_tip_withdrawal(p300m, beads)\n        dispense_with_delay(p300m, 43.5, column[0].bottom(\n         clearance_sample_plate), delay_beads)\n        p300m.mix(10, 50, column[0].bottom(2), rate=2)\n        p300m.drop_tip()\n    default_flow_rates(p300m)\n    ctx.delay(minutes=10)\n    pause_attention(\"\"\"\n    spin and return the plate\n    resume\n    \"\"\")\n    mag.engage()\n    ctx.delay(minutes=engage_time)\n    ctx.comment(\"\"\"\n    remove sup\n\n    add 80 percent ethanol\n    remove sup\n    repeat\n\n    liquid handling method for ethanol:\n    prewet tips\n    15 ul air gap\n    dispense from top\n    repeated delayed blowout\n    increased blow out flow rate\n    \"\"\")\n    for index, column in enumerate(mag_plate.columns()[\n     :num_cols]+mag_plate.columns()[6:num_cols+6]):\n        pick_up_or_refill(p300m)\n        if index % 2 != 1:\n            # offset to right (for even columns) to avoid bead pellet\n            aspirate_location = column[0].bottom(\n             clearance_bead_pellet).move(\n             types.Point(x=x_offset_bead_pellet, y=0, z=0))\n        else:\n            # offset to left (for odd columns) to avoid bead pellet\n            aspirate_location = column[0].bottom(\n             clearance_bead_pellet).move(\n             types.Point(x=-1*x_offset_bead_pellet, y=0, z=0))\n        p300m.move_to(column[0].top())\n        ctx.max_speeds['Z'] = 10\n        p300m.move_to(column[0].bottom(4))\n        p300m.aspirate(50, column[0].bottom(4), rate=0.33)\n        p300m.aspirate(50, aspirate_location, rate=0.33)\n        p300m.move_to(column[0].top())\n        ctx.max_speeds['Z'] = None\n        p300m.air_gap(20)\n        p300m.dispense(120, waste_1.top())\n        p300m.air_gap(15)\n        p300m.drop_tip()\n    etoh_flow_rates(p300m)\n    for repeat in range(2):\n        pick_up_or_refill(p300m)\n        for column in mag_plate.columns()[\n         :num_cols]+mag_plate.columns()[6:num_cols+6]:\n            pre_wet(p300m, 100, etoh.bottom(clearance_reservoir))\n            p300m.aspirate(100, etoh.bottom(clearance_reservoir))\n            p300m.air_gap(15)\n            p300m.dispense(115, column[0].top())\n            for rep in range(3):\n                if rep > 0:\n                    p300m.aspirate(100, column[0].top())\n                ctx.delay(seconds=1)\n                p300m.blow_out(column[0].top())\n        p300m.drop_tip()\n        if repeat == 0:\n            wst = waste_2\n            pause_attention(\n             \"\"\"Please Refill the p300 Tip Boxes\n             and Empty the Tip Waste\"\"\")\n            p300m.reset_tipracks()\n        else:\n            wst = waste_3\n        for index, column in enumerate(mag_plate.columns()[\n         :num_cols]+mag_plate.columns()[6:num_cols+6]):\n            pick_up_or_refill(p300m)\n            if index % 2 != 1:\n                # offset to right (for even columns) to avoid bead pellet\n                aspirate_location = column[0].bottom(\n                 clearance_bead_pellet).move(\n                 types.Point(x=x_offset_bead_pellet, y=0, z=0))\n            else:\n                # offset to left (for odd columns) to avoid bead pellet\n                aspirate_location = column[0].bottom(\n                 clearance_bead_pellet).move(\n                 types.Point(x=-1*x_offset_bead_pellet, y=0, z=0))\n            p300m.move_to(column[0].top())\n            ctx.max_speeds['Z'] = 10\n            p300m.move_to(column[0].bottom(4))\n            p300m.aspirate(60, column[0].bottom(4), rate=0.5)\n            p300m.aspirate(50, aspirate_location, rate=0.5)\n            p300m.move_to(column[0].top())\n            ctx.max_speeds['Z'] = None\n            p300m.air_gap(20)\n            p300m.dispense(130, wst.top())\n            for rep in range(3):\n                if rep > 0:\n                    p300m.aspirate(150, wst.top())\n                ctx.delay(seconds=1)\n                p300m.blow_out(wst.top())\n            p300m.air_gap(15)\n            p300m.drop_tip()\n    default_flow_rates(p300m)\n    mag.disengage()\n    pause_attention(\"\"\"\n    remove plate, spin and return the plate to the magnetic module\n    resume\n    \"\"\")\n    mag.engage()\n    ctx.delay(minutes=1)\n    pause_attention(\"\"\"\n    manually remove last traces of ethanol with 10 ul tip\n    resume\n    \"\"\")\n    ctx.comment(\"\"\"\n    air dry beads\n    \"\"\")\n    ctx.delay(minutes=dry_time)\n    mag.disengage()\n    ctx.comment(\"\"\"\n    add TE and mix\n    \"\"\")\n    for column in mag_plate.columns()[\n     :num_cols]+mag_plate.columns()[6:num_cols+6]:\n        pick_up_or_refill(p20m)\n        p20m.transfer(\n         8.5, te.bottom(clearance_reservoir), column[0].bottom(\n          clearance_sample_plate), mix_after=(10, 5), new_tip='never')\n        p20m.drop_tip()\n    pause_attention(\"\"\"\n    spin and return the plate\n    resume\n    \"\"\")\n    ctx.delay(minutes=2)\n    mag.engage()\n    ctx.delay(minutes=engage_time)\n    ctx.comment(\"\"\"\n    combine eluates and transfer to elution plate\n    \"\"\")\n    for index, column in enumerate(mag_plate.columns()[:num_cols]):\n        pick_up_or_refill(p20m)\n        p20m.aspirate(7.5, column[0].bottom(clearance_bead_pellet))\n        p20m.aspirate(\n         7.5, mag_plate.columns()[index+6][0].bottom(clearance_bead_pellet))\n        p20m.dispense(\n         15, elution_plate.columns()[index][0].bottom(clearance_sample_plate))\n        p20m.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 24,
            "label": "Sample Count (up to 48)",
            "name": "sample_count",
            "type": "int"
        },
        {
            "label": "Labware for PCR Plate",
            "name": "labware_pcr_plate",
            "options": [
                {
                    "label": "nest_96_wellplate_100ul_pcr_full_skirt",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Labware for Reagent Reservoir",
            "name": "labware_reservoir",
            "options": [
                {
                    "label": "nest_12_reservoir_15ml",
                    "value": "nest_12_reservoir_15ml"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Labware for Reagent Tube Strips on the Temperature Module",
            "name": "labware_tube_strip",
            "options": [
                {
                    "label": "opentrons_96_aluminumblock_generic_pcr_strip_200ul",
                    "value": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 1,
            "label": "Well Bottom Clearance for Sample Plate (mm)",
            "name": "clearance_sample_plate",
            "type": "float"
        },
        {
            "default": 2,
            "label": "Well Bottom Clearance for Reservoir (mm)",
            "name": "clearance_reservoir",
            "type": "float"
        },
        {
            "default": 2,
            "label": "Well Bottom Clearance for Strip Tubes (mm)",
            "name": "clearance_strip_tubes",
            "type": "float"
        },
        {
            "default": 2,
            "label": "Well Bottom Clearance for Bead Pellet (mm)",
            "name": "clearance_bead_pellet",
            "type": "float"
        },
        {
            "default": 1,
            "label": "Delay Time after Bead Aspiration and Dispense (sec)",
            "name": "delay_beads",
            "type": "int"
        },
        {
            "default": 60,
            "label": "Reduced Flow Rate for Pipetting Beads (ul/sec)",
            "name": "flow_rate_beads",
            "type": "float"
        },
        {
            "default": 5,
            "label": "Engage Time for Magnetic Module (min)",
            "name": "engage_time",
            "type": "int"
        },
        {
            "default": 0,
            "label": "Offset (mm) Applied to Default Engage Height for Magnetic Module",
            "name": "engage_offset",
            "type": "float"
        },
        {
            "default": 5,
            "label": "Air Dry Time for Beads (min)",
            "name": "dry_time",
            "type": "int"
        },
        {
            "default": 1.5,
            "label": "Offset in X Direction to Avoid Bead Bellet during Aspiration (mm)",
            "name": "x_offset_bead_pellet",
            "type": "float"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "Reagent Reservoir on 1",
            "share": false,
            "slot": "1",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "4 Degree Block on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
        },
        {
            "name": "Mag Plate on Magnetic Module GEN2 on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "cDNA Sample Plate on Chilled Aluminum Block on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "Elution Plate on 8",
            "share": false,
            "slot": "8",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Steve Plonk <protocols@opentrons.com>",
        "protocolName": "NEBNext Ultra II Directional RNA Library Prep Kit\n    for Illumina with poly(A) selection: part 3 -\n    End Prep, Adapter Ligation and Bead Clean Up"
    },
    "modules": []
}