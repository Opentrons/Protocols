{
    "content": "from opentrons.types import Point\nmetadata = {\n    'protocolName': 'DYNABEADS FOR IP - 96 well',\n    'author': '',\n    'source': '',\n    'apiLevel': '2.11'\n}\n\n########################\n\nNUM_SAMPLES = 96\nwash_volume = 200\nwash_times = 3\n\ntotal_cols = int(NUM_SAMPLES//8)\nr1 = int(NUM_SAMPLES%8)\nif r1 != 0: total_cols = total_cols + 1\n\n#########################\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{\"asp_height\": 0.5,\n                                 \"length_from_side\": 2.5,\n                                 \"p300_mount\":\"left\"}\"\"\")\n    return [_all_values[n] for n in names]\n\n\ndef run(ctx):\n\n    [asp_height,\n        length_from_side, p300_mount] = get_values(  # noqa: F821\n        \"asp_height\",\n            \"length_from_side\", \"p300_mount\")\n\n    # load labware\n    wash_res = ctx.load_labware('nest_12_reservoir_15ml', '2', 'wash')\n    mag_mod = ctx.load_module('magnetic module gen2', '1')\n    mag_plate = mag_mod.load_labware('nest_96_wellplate_2ml_deep')\n    temp_mod = ctx.load_module('temperature module gen2', '3')\n    elution_plate = temp_mod.load_labware('opentrons_96_aluminumblock_nest_wellplate_100ul')\n    reagent_plate = ctx.load_labware('nest_96_wellplate_2ml_deep', '4', 'reagents')\n    #samples = ctx.load_labware('nest_96_wellplate_2ml_deep', '5', 'samples')\n    tiprack = [ctx.load_labware('opentrons_96_tiprack_300ul', slot)\n               for slot in ['6', '7', '8']]\n    tiprack_reuse = ctx.load_labware('opentrons_96_tiprack_300ul', '5')\n    waste_res = ctx.load_labware('nest_1_reservoir_195ml', '9', 'waste')\n\n    # load pipette\n    pip = ctx.load_instrument('p300_multi_gen2', p300_mount, tip_racks=tiprack)\n\n    # liquids\n    wash = wash_res.wells()[:total_cols]\n    #beads = reagent_plate.rows()[0][0]\n    #ab = reagent_plate.rows()[0][1]\n    elution = reagent_plate.rows()[0][11]\n    waste = waste_res.wells()[0]\n    #samples = samples.rows()[0][:total_cols]\n    working_cols = mag_plate.rows()[0][:total_cols]\n    final_cols = elution_plate.rows()[0][:total_cols]\n\n    def remove_supernatant(vol):\n        ctx.comment('\\n\\n\\n~~~~~~~~REMOVING SUPERNATANT~~~~~~~~\\n')\n        pip.pick_up_tip()\n        pip.flow_rate.aspirate = 45\n        for i, col in enumerate(working_cols):\n            side = -1 if i % 2 == 0 else 1\n            aspirate_loc = col.bottom(z=asp_height).move(\n                            Point(x=(col.length/2-length_from_side)*side))\n            pip.transfer(vol,\n                         aspirate_loc,\n                         waste.bottom(z=25),\n                         new_tip='never'\n                         # blow_out=True,\n                         # blowout_location='destination well'\n                         )\n            # pip.blow_out()\n        pip.flow_rate.aspirate = 92\n        pip.drop_tip()\n\n    def remove_residue(vol):\n        ctx.comment('\\n\\n\\n~~~~~~~~REMOVING RESIDUE~~~~~~~~\\n')\n        pip.flow_rate.aspirate = 45\n        for i, col in enumerate(working_cols):\n            side = -1 if i % 2 == 0 else 1\n            aspirate_loc = col.bottom(z=asp_height).move(\n                            Point(x=(col.length/2-length_from_side)*side))\n            pip.pick_up_tip()\n            pip.aspirate(vol, aspirate_loc)\n            pip.drop_tip()\n        pip.flow_rate.aspirate = 92\n\n    # protocol\n    mag_mod.disengage()\n    ctx.pause('load sample plate')\n    #temp_mod.set_temperature(70)\n    mag_mod.engage(height_from_base=4.2)\n    ctx.delay(minutes=2)\n    remove_supernatant(250)\n    mag_mod.disengage()\n\n    ctx.comment('\\n\\n\\n~~~~~~~~THREE WASHES~~~~~~~~\\n')\n    for i in range(3):\n        ctx.comment('\\n\\n\\n~~~~~~~~ADDING WASH~~~~~~~~\\n')\n        #pip.starting_tip = tiprack_reuse.well('A1')\n        x = 0\n        for wash_well, working_well in zip(wash, working_cols):\n            pip.pick_up_tip(tiprack_reuse.well(x))\n            pip.aspirate(200, wash_well)\n            pip.dispense(200, working_well)\n            pip.mix(10, 175, working_well, rate = 3)\n            pip.return_tip()\n            x = x+8\n        mag_mod.engage(height_from_base=4.2)\n        ctx.delay(minutes=1)\n        remove_supernatant(200)\n        if i == 2: remove_residue(50)\n\n        mag_mod.disengage()\n\n    ctx.comment('\\n\\n\\n~~~~~~~~ADD ELUTION~~~~~~~~\\n')\n    pip.pick_up_tip()\n    for col in working_cols:\n        pip.aspirate(30, elution)\n        pip.dispense(30, col.bottom(7.5))\n        pip.blow_out()\n        pip.touch_tip()\n    pip.drop_tip()\n\n    ctx.comment('\\n\\n\\n~~~~~~~~MOVE ELUTE TO FINAL PLATE~~~~~~~~\\n')\n    for source_col, dest_col in zip(working_cols, final_cols):\n        pip.pick_up_tip()\n        pip.mix(10, 25, source_col)\n        pip.aspirate(35, source_col.bottom(0.5), rate = 0.1)\n        pip.dispense(35, dest_col)\n        pip.blow_out()\n        pip.drop_tip()\n\n    ctx.pause('SEAL THE PLATE - 10 MINUTE INCUBATION AT 70C')\n    temp_mod.set_temperature(70)",
    "custom_labware_defs": [],
    "fields": [],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Deepwell Plate 2mL on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "wash on 2",
            "share": false,
            "slot": "2",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "reagents on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "waste on 9",
            "share": false,
            "slot": "9",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "",
        "protocolName": "DYNABEADS FOR IP - 96 well",
        "source": ""
    },
    "modules": []
}