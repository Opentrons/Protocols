{
    "content": "metadata = {\n    'protocolName': 'PCR Preparation',\n    'author': 'Opentrons',\n    'description': 'Custom Protocol Request',\n    'apiLevel': '2.8'\n}\n\n\ndef run(protocol):\n\n    [number_of_DNA_samples,\n        number_of_oligo_standards] = get_values(  # noqa: F821\n        \"number_of_DNA_samples\", \"number_of_oligo_standards\")\n\n    # check invalid parameters\n    number_of_DNA_samples = int(number_of_DNA_samples)\n    number_of_oligo_standards = int(number_of_oligo_standards)\n\n    if number_of_DNA_samples + number_of_oligo_standards > 30:\n        raise Exception('Too many samples and standards for one plate.')\n\n    # load labware\n    tips10 = protocol.load_labware('opentrons_96_tiprack_10ul', 1)\n    tips300 = protocol.load_labware('opentrons_96_tiprack_300ul', 2)\n    tubes = protocol.load_labware(\n        'opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', 5)\n\n    # modules\n    temp_mod = protocol.load_module('temperature module', 4)\n    temp_plate = temp_mod.load_labware(\n        'opentrons_96_aluminumblock_biorad_wellplate_200ul')\n\n    temp_mod.set_temperature(8)\n\n    # pipettes\n    p10 = protocol.load_instrument('p10_single', mount='right',\n                                   tip_racks=[tips10])\n    p300 = protocol.load_instrument('p300_single', mount='left',\n                                    tip_racks=[tips300])\n\n    # master mix setup\n    master_mix = tubes.wells('A1')\n\n    # DNA sample sources setup\n    DNA_samples = tubes.wells()[2:(number_of_DNA_samples+1)]\n\n    # destinations setup\n    dests_triplicates = [temp_plate.rows()[start][(3*i):(3*i+3)]\n                         for i in range(4) for start in range(8)]\n\n    DNA_dests = dests_triplicates[0:number_of_DNA_samples]\n    pc_dests = dests_triplicates[number_of_DNA_samples]\n    NTC_dests = dests_triplicates[number_of_DNA_samples+1]\n    oligo_dests = dests_triplicates[(len(dests_triplicates) -\n                                    number_of_oligo_standards):\n                                    len(dests_triplicates)]\n\n    # distribute master mix to all destination wells for DNA, oligo, positive\n    # control, and NTC\n    mm_dests = [well\n                for set in [DNA_dests, [pc_dests], [NTC_dests], oligo_dests]\n                for well in set]\n    for trip in mm_dests:\n        p300.distribute(15, master_mix, trip)\n\n    # transfer DNA samples to corresponding triplicate locations\n    for source, dests in zip(DNA_samples, DNA_dests):\n        p10.transfer(5,\n                     source,\n                     dests,\n                     new_tip='always',\n                     blow_out=True)\n\n    protocol.pause('Please replace the master mix tube'\n                   'and DNA sample tubes with '\n                   'positive control, NTC and oligo standard tubes before '\n                   'resuming.')\n\n    # transfer positive control to corresponding triplicate location\n    positive_control = tubes.wells('C6')\n    p10.transfer(5,\n                 positive_control,\n                 pc_dests,\n                 new_tip='always',\n                 blow_out=True)\n\n    # transfer NTC to corresponding triplicate location\n    NTC = tubes.wells('D6')\n    p10.transfer(5,\n                 NTC,\n                 NTC_dests,\n                 new_tip='always',\n                 blow_out=True)\n\n    # oligo standard sources setup\n    oligo_standards = tubes.wells()[:number_of_oligo_standards]\n\n    # transfer oligo standards to corresponding triplicate locations\n    for source, dests in zip(oligo_standards, oligo_dests):\n        p10.transfer(5,\n                     source,\n                     dests,\n                     new_tip='always',\n                     blow_out=True)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 21,
            "label": "Number of DNA Samples",
            "name": "number_of_DNA_samples",
            "type": "int"
        },
        {
            "default": 8,
            "label": "Number of Oligo Standards",
            "name": "number_of_oligo_standards",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single"
        },
        {
            "mount": "right",
            "name": "p10_single"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Tip Rack 10 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_tiprack_10ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with Bio-Rad Well Plate 200 \u00b5L on Temperature Module GEN1 on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_aluminumblock_biorad_wellplate_200ul"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 1.5 mL Safe-Lock Snapcap on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.8",
        "author": "Opentrons",
        "description": "Custom Protocol Request",
        "protocolName": "PCR Preparation"
    },
    "modules": []
}