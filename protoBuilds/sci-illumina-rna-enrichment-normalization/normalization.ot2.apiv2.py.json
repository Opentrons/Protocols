{
    "content": "# flake8: noqa\n\nfrom opentrons import protocol_api\nfrom opentrons import types\n\nmetadata = {\n    'protocolName': 'Illumina RNA Prep with Enrichment: Normalization',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.9'\n    }\n\nDRYRUN = 'NO'\n\ndef run(protocol: protocol_api.ProtocolContext):\n\n    [sample_quant_csv] = get_values(  # noqa: F821\n        'sample_quant_csv')\n\n    if DRYRUN == 'YES':\n        protocol.comment(\"THIS IS A DRY RUN\")\n    else:\n        protocol.comment(\"THIS IS A REACTION RUN\")\n\n\n    tiprack_20      = protocol.load_labware('opentrons_96_filtertiprack_20ul', '1')\n    tiprack_200     = protocol.load_labware('opentrons_96_filtertiprack_200ul', '4')\n    reagent_tube    = protocol.load_labware('opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical','5')\n    sample_plate    = protocol.load_labware('nest_96_wellplate_100ul_pcr_full_skirt','2')\n\n    # reagent\n    RSB               = reagent_tube.wells()[0]\n\n    # pipette\n    #p300    = protocol.load_instrument('p300_multi_gen2', 'left', tip_racks=[tiprack_200])\n    #p20     = protocol.load_instrument('p20_multi_gen2', 'right', tip_racks=[tiprack_20])\n    p300    = protocol.load_instrument('p300_single_gen2', 'right', tip_racks=[tiprack_200])\n    p20     = protocol.load_instrument('p20_single_gen2', 'left', tip_racks=[tiprack_20])\n\n    MaxTubeVol      = 200\n    RSBUsed         = 0\n    RSBVol          = 0\n\n    bypass = protocol.deck.position_for('11').move(types.Point(x=70,y=80,z=130))\n\n    data = [r.split(',') for r in sample_quant_csv.strip().splitlines() if r][1:]\n\n    # commands\n\n    protocol.comment('==============================================')\n    protocol.comment('Reading File')\n    protocol.comment('==============================================')\n\n    current = 0\n    while current < len(data):\n\n        CurrentWell     = str(data[current][1])\n        if float(data[current][2]) > 0:\n            InitialVol = float(data[current][2])\n        else:\n            InitialVol = 0\n        if float(data[current][3]) > 0:\n            InitialConc = float(data[current][3])\n        else:\n            InitialConc = 0\n        if float(data[current][4]) > 0:\n            TargetConc = float(data[current][4])\n        else:\n            TargetConc = 0\n        TotalDNA        = float(InitialConc*InitialVol)\n        if TargetConc > 0:\n            TargetVol = float(TotalDNA/TargetConc)\n        else:\n            TargetVol = InitialVol\n        if TargetVol > InitialVol:\n            DilutionVol = float(TargetVol-InitialVol)\n        else:\n            DilutionVol = 0\n        FinalVol        = float(DilutionVol+InitialVol)\n        if TotalDNA > 0 and FinalVol > 0:\n            FinalConc       = float(TotalDNA/FinalVol)\n        else:\n            FinalConc = 0\n\n        if DilutionVol <= 1:\n            protocol.comment(\"Sample \"+CurrentWell+\": Conc. Too Low, Will Skip\")\n        elif DilutionVol > MaxTubeVol-InitialVol:\n            DilutionVol = MaxTubeVol-InitialVol\n            protocol.comment(\"Sample \"+CurrentWell+\": Conc. Too High, Will add, \"+str(DilutionVol)+\"ul, Max = \"+str(MaxTubeVol)+\"ul\")\n            RSBVol += MaxTubeVol-InitialVol\n        else:\n            if DilutionVol <=20:\n                protocol.comment(\"Sample \"+CurrentWell+\": Using p20, will add \"+str(round(DilutionVol,1)))\n            elif DilutionVol > 20:\n                protocol.comment(\"Sample \"+CurrentWell+\": Using p300, will add \"+str(round(DilutionVol,1)))\n            RSBVol += DilutionVol\n        current += 1\n\n    if RSBVol >= 14000:\n        protocol.pause(\"Caution, more than 15ml Required\")\n    else:\n        protocol.comment(\"RSB Minimum: \"+str(round(RSBVol/1000,1)+1)+\"ml\")\n\n    PiR2 = 176.71\n    InitialRSBVol = RSBVol\n    RSBHeight = (InitialRSBVol/PiR2)+17.5\n\n    protocol.pause(\"Proceed\")\n    protocol.comment('==============================================')\n    protocol.comment('Normalizing Samples')\n    protocol.comment('==============================================')\n\n    current = 0\n    while current < len(data):\n\n        CurrentWell     = str(data[current][1])\n        if float(data[current][2]) > 0:\n            InitialVol = float(data[current][2])\n        else:\n            InitialVol = 0\n        if float(data[current][3]) > 0:\n            InitialConc = float(data[current][3])\n        else:\n            InitialConc = 0\n        if float(data[current][4]) > 0:\n            TargetConc = float(data[current][4])\n        else:\n            TargetConc = 0\n        TotalDNA        = float(InitialConc*InitialVol)\n        if TargetConc > 0:\n            TargetVol = float(TotalDNA/TargetConc)\n        else:\n            TargetVol = InitialVol\n        if TargetVol > InitialVol:\n            DilutionVol = float(TargetVol-InitialVol)\n        else:\n            DilutionVol = 0\n        FinalVol        = float(DilutionVol+InitialVol)\n        if TotalDNA > 0 and FinalVol > 0:\n            FinalConc       = float(TotalDNA/FinalVol)\n        else:\n            FinalConc = 0\n\n        protocol.comment(\"Number \"+str(data[current])+\": Sample \"+str(CurrentWell))\n#        protocol.comment(\"Vol Height = \"+str(round(RSBHeight,2)))\n        HeightDrop = DilutionVol/PiR2\n#        protocol.comment(\"Vol Drop = \"+str(round(HeightDrop,2)))\n\n        if DilutionVol <= 0:\n        #If the No Volume\n            protocol.comment(\"Conc. Too Low, Skipping\")\n\n        elif DilutionVol >= MaxTubeVol-InitialVol:\n        #If the Required Dilution volume is >= Max Volume\n            DilutionVol = MaxTubeVol-InitialVol\n            protocol.comment(\"Conc. Too High, Will add, \"+str(DilutionVol)+\"ul, Max = \"+str(MaxTubeVol)+\"ul\")\n            p300.pick_up_tip()\n            p300.aspirate(DilutionVol, RSB.bottom(RSBHeight-(HeightDrop)))\n            RSBHeight -= HeightDrop\n#            protocol.comment(\"New Vol Height = \"+str(round(RSBHeight,2)))\n            p300.dispense(DilutionVol, sample_plate.wells_by_name()[CurrentWell])\n            HighVolMix = 10\n            for Mix in range(HighVolMix):\n                p300.move_to(sample_plate.wells_by_name()[CurrentWell].center())\n                p300.aspirate(100)\n                p300.move_to(sample_plate.wells_by_name()[CurrentWell].bottom())\n                p300.aspirate(100)\n                p300.dispense(100)\n                p300.move_to(sample_plate.wells_by_name()[CurrentWell].center())\n                p300.dispense(100)\n                Mix += 1\n            p300.move_to(sample_plate.wells_by_name()[CurrentWell].top())\n            protocol.delay(seconds=3)\n            p300.blow_out()\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        else:\n            if DilutionVol <= 20:\n        #If the Required Dilution volume is <= 20ul\n                protocol.comment(\"Using p20 to add \"+str(round(DilutionVol,1)))\n                p20.pick_up_tip()\n                if  round(float(data[current][3]),1) <= 20:\n                    p20.aspirate(DilutionVol, RSB.bottom(RSBHeight-(HeightDrop)))\n                    RSBHeight -= HeightDrop\n                else:\n                    p20.aspirate(20, RSB.bottom(RSBHeight-(HeightDrop)))\n                    RSBHeight -= HeightDrop\n                p20.dispense(DilutionVol, sample_plate.wells_by_name()[CurrentWell])\n                p20.move_to(sample_plate.wells_by_name()[CurrentWell].bottom())\n        # Mix volume <=20ul\n                if DilutionVol+InitialVol <= 20:\n                    p20.mix(10,DilutionVol+InitialVol)\n                elif DilutionVol+InitialVol > 20:\n                    p20.mix(10,20)\n                p20.move_to(sample_plate.wells_by_name()[CurrentWell].top())\n                protocol.delay(seconds=3)\n                p20.blow_out()\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n\n            elif DilutionVol > 20:\n        #If the required volume is >20\n                protocol.comment(\"Using p300 to add \"+str(round(DilutionVol,1)))\n                p300.pick_up_tip()\n                p300.aspirate(DilutionVol, RSB.bottom(RSBHeight-(HeightDrop)))\n                RSBHeight -= HeightDrop\n                if DilutionVol+InitialVol >= 120:\n                    HighVolMix = 10\n                    for Mix in range(HighVolMix):\n                        p300.move_to(sample_plate.wells_by_name()[CurrentWell].center())\n                        p300.aspirate(100)\n                        p300.move_to(sample_plate.wells_by_name()[CurrentWell].bottom())\n                        p300.aspirate(DilutionVol+InitialVol-100)\n                        p300.dispense(100)\n                        p300.move_to(sample_plate.wells_by_name()[CurrentWell].center())\n                        p300.dispense(DilutionVol+InitialVol-100)\n                        Mix += 1\n                else:\n                    p300.dispense(DilutionVol, sample_plate.wells_by_name()[CurrentWell])\n                    p300.move_to(sample_plate.wells_by_name()[CurrentWell].bottom())\n                    p300.mix(10,DilutionVol+InitialVol)\n                    p300.move_to(sample_plate.wells_by_name()[CurrentWell].top())\n                protocol.delay(seconds=3)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        current += 1\n\n    protocol.comment('==============================================')\n    protocol.comment('Results')\n    protocol.comment('==============================================')\n\n    current = 0\n    while current < len(data):\n\n        CurrentWell     = str(data[current][1])\n        if float(data[current][2]) > 0:\n            InitialVol = float(data[current][2])\n        else:\n            InitialVol = 0\n        if float(data[current][3]) > 0:\n            InitialConc = float(data[current][3])\n        else:\n            InitialConc = 0\n        if float(data[current][4]) > 0:\n            TargetConc = float(data[current][4])\n        else:\n            TargetConc = 0\n        TotalDNA        = float(InitialConc*InitialVol)\n        if TargetConc > 0:\n            TargetVol = float(TotalDNA/TargetConc)\n        else:\n            TargetVol = InitialVol\n        if TargetVol > InitialVol:\n            DilutionVol = float(TargetVol-InitialVol)\n        else:\n            DilutionVol = 0\n        if DilutionVol > MaxTubeVol-InitialVol:\n            DilutionVol = MaxTubeVol-InitialVol\n        FinalVol        = float(DilutionVol+InitialVol)\n        if TotalDNA > 0 and FinalVol > 0:\n            FinalConc       = float(TotalDNA/FinalVol)\n        else:\n            FinalConc = 0\n        protocol.comment(\"Sample \"+CurrentWell+\": \"+str(round(FinalVol,1))+\" at \"+str(round(FinalConc,1))+\"ng/ul\")\n\n        current += 1\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": "Sample_Plate,Sample_well,InitialVol,InitialConc,TargetConc\nsample_plate,A1,20,2.3,2\nsample_plate,B1,20,3.99,2\nsample_plate,C1,20,4.39,2\nsample_plate,D1,20,3.95,2\nsample_plate,E1,20,4.16,2\nsample_plate,F1,20,3.81,2\nsample_plate,G1,20,3.96,2\nsample_plate,H1,20,3.41,2\n",
            "label": "input .csv file",
            "name": "sample_quant_csv",
            "type": "textFile"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 10 Tube Rack with Falcon 4x50 mL, 6x15 mL Conical on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Illumina RNA Prep with Enrichment: Normalization",
        "source": "Protocol Library"
    },
    "modules": []
}