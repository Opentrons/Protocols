{
    "content": "from opentrons.types import Point\n\nmetadata = {\n    'protocolName': 'Cell Culture',\n    'author': 'Nick Diehl <ndiehl@opentrons.com>',\n    'description': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n\n    num_plates, mount_p300, mount_p20 = get_values(  # noqa: F821\n        'num_plates', 'mount_p300', 'mount_p20')\n\n    plates = [\n        ctx.load_labware('corning_96_wellplate_360ul_flat', f'{slot}',\n                         f'plate {slot}')\n        for slot in range(1, 1+num_plates)]\n    tipracks20 = [ctx.load_labware('opentrons_96_filtertiprack_20ul', '10')]\n    tipracks200 = [ctx.load_labware('opentrons_96_filtertiprack_200ul', '11')]\n    tuberack = ctx.load_labware(\n        'opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical', '9')\n\n    p300 = ctx.load_instrument('p300_single_gen2', mount_p300,\n                               tip_racks=tipracks200)\n    p20 = ctx.load_instrument('p20_single_gen2', mount_p20,\n                              tip_racks=tipracks20)\n\n    vol_tracker = {\n        well: 0.0\n        for plate in plates\n        for well in plate.wells()\n    }\n\n    def drop_all():\n        for pip in [p300, p20]:\n            if pip.has_tip:\n                pip.drop_tip()\n\n    def low_volume_dispense(vol, well, loc, pip=p20):\n        pip.move_to(well.top(-1))\n        ctx.max_speeds['A'] = 100\n        ctx.max_speeds['X'] = 100\n        ctx.max_speeds['Y'] = 100\n        ctx.max_speeds['Z'] = 100\n\n        if loc == 'bottom':\n            dispense_loc = well.bottom(0.5)\n            pip.dispense(vol)\n            pip.blow_out()\n        else:\n            side = 1 if loc == 'right' else -1\n            dispense_loc = well.top().move(Point(x=side*well.diameter/2, z=-1))\n            pip.dispense(vol, dispense_loc)\n\n        vol_tracker[well] += vol\n\n        ctx.max_speeds['A'] = 400\n        ctx.max_speeds['X'] = 100\n        ctx.max_speeds['Y'] = 100\n        ctx.max_speeds['Z'] = 400\n\n    # transfer 1\n    volumes1 = [50.00, 25.00, 12.50, 6.25, 3.13, 1.56, 50.00, 25.00, 12.50,\n                6.25, 3.13]\n    for plate in plates:\n        for i, vol in enumerate(volumes1):\n            pip = p300 if vol >= 20 else p20\n            if not pip.has_tip:\n                pip.pick_up_tip()\n                for well in plate.columns()[i]:\n                    if i == 6:\n                        drop_all()\n                        if not pip.has_tip:\n                            pip.pick_up_tip()\n                    pip.aspirate(vol, tuberack.wells_by_name()['A1'])\n                    low_volume_dispense(vol, well, 'bottom', pip)\n    drop_all()\n\n    # transfer 2\n    volumes2 = [50, 25, 12.5, 6.25, 3.13, 1.56, 0.78]\n    for plate in plates:\n        for i, vol in enumerate(volumes2):\n            pip = p300 if vol >= 20 else p20\n            if not pip.has_tip:\n                pip.pick_up_tip()\n                for well in plate.rows()[i]:\n                    pip.aspirate(vol, tuberack.wells_by_name()['A2'])\n                    low_volume_dispense(vol, well, 'left', pip)\n    drop_all()\n\n    # transfer 3\n    vol_final = 100.0\n    all_wells = [well for plate in plates for well in plate.wells()]\n    for well in all_wells:\n        vol = round(vol_final - vol_tracker[well], 2)\n        pip = p300 if vol >= 20 else p20\n        if not pip.has_tip:\n            pip.pick_up_tip()\n        pip.aspirate(vol, tuberack.wells_by_name()['A3'])\n        low_volume_dispense(vol, well, 'right', pip)\n    drop_all()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 1,
            "label": "number of plates",
            "name": "num_plates",
            "type": "int"
        },
        {
            "label": "P300 multi\u00ab8\u00bb-channel GEN2 mount",
            "name": "mount_p300",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 single-channel GEN2 mount",
            "name": "mount_p20",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        },
        {
            "mount": "right",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "plate 1 on 1",
            "share": false,
            "slot": "1",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Opentrons 10 Tube Rack with Falcon 4x50 mL, 6x15 mL Conical on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Nick Diehl <ndiehl@opentrons.com>",
        "description": "Custom Protocol Request",
        "protocolName": "Cell Culture"
    },
    "modules": []
}