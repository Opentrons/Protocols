{
    "content": "import math\n\n# metadata\nmetadata = {\n    'protocolName': 'Complete PCR Workflow with Thermocycler',\n    'author': 'Nick <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.0'\n}\n\n\ndef run(ctx):\n\n    [number_of_samples, dna_volume, mastermix_volume,\n     master_mix_csv, tuberack_type, single_channel_type, single_channel_mount,\n     pipette_2_type, pipette_2_mount, lid_temp, init_temp, init_time, d_temp,\n     d_time, a_temp, a_time, e_temp, e_time, no_cycles, fe_temp, fe_time,\n     final_temp] = get_values(  # noqa: F821\n        'number_of_samples', 'dna_volume', 'mastermix_volume',\n        'master_mix_csv', 'tuberack_type', 'single_channel_type',\n        'single_channel_mount', 'pipette_2_type', 'pipette_2_mount',\n        'lid_temp', 'init_temp', 'init_time', 'd_temp', 'd_time', 'a_temp',\n        'a_time', 'e_temp', 'e_time', 'no_cycles', 'fe_temp', 'fe_time',\n        'final_temp')\n\n    range1 = single_channel_type.split('_')[0][1:]\n    tipracks1 = [\n        ctx.load_labware('opentrons_96_tiprack_' + range1 + 'ul', slot)\n        for slot in ['2', '3']\n    ]\n    p1 = ctx.load_instrument(\n        single_channel_type, single_channel_mount, tip_racks=tipracks1)\n\n    using_multi = True if pipette_2_type.split('_')[1] == 'multi' else False\n    if using_multi:\n        mm_plate = ctx.load_labware(\n            'nest_96_wellplate_100ul_pcr_full_skirt', '4',\n            'plate for mastermix distribution')\n    if pipette_2_type and pipette_2_mount:\n        range2 = pipette_2_type.split('_')[0][1:]\n        tipracks2 = [\n            ctx.load_labware('opentrons_96_tiprack_' + range2 + 'ul', slot)\n            for slot in ['6', '9']\n        ]\n        p2 = ctx.load_instrument(\n            pipette_2_type, pipette_2_mount, tip_racks=tipracks2)\n\n    # labware setup\n    tc = ctx.load_module('thermocycler')\n    tc_plate = tc.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', 'thermocycler plate')\n    if tc.lid_position != 'open':\n        tc.open_lid()\n    tc.set_lid_temperature(lid_temp)\n    if 'cooled' in tuberack_type:\n        tempdeck = ctx.load_module('tempdeck', '1')\n        tuberack = tempdeck.load_labware(\n            tuberack_type, 'rack for mastermix reagents'\n        )\n    else:\n        tuberack = ctx.load_labware(\n            tuberack_type, '1', 'rack for mastermix reagents')\n    dna_plate = ctx.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', '5', 'DNA plate')\n\n    # reagent setup\n    mm_tube = tuberack.wells()[0]\n    num_cols = math.ceil(number_of_samples/8)\n\n    pip_counts = {p1: 0, p2: 0}\n    p1_max = len(tipracks1)*96\n    p2_max = len(tipracks2)*12 if using_multi else len(tipracks2)*96\n    pip_maxs = {p1: p1_max, p2: p2_max}\n\n    def pick_up(pip):\n        if pip_counts[pip] == pip_maxs[pip]:\n            ctx.pause('Replace empty tipracks before resuming.')\n            pip.reset_tipracks()\n            pip_counts[pip] = 0\n        pip.pick_up_tip()\n        pip_counts[pip] += 1\n\n    # determine which pipette has the smaller volume range\n    if using_multi:\n        pip_s, pip_l = p1, p1\n    else:\n        if int(range1) <= int(range2):\n            pip_s, pip_l = p1, p2\n        else:\n            pip_s, pip_l = p2, p1\n\n    # destination\n    mastermix_dest = tuberack.wells()[0]\n\n    info_list = [\n        [cell.strip() for cell in line.split(',')]\n        for line in master_mix_csv.splitlines()[1:] if line\n    ]\n\n    \"\"\" create mastermix \"\"\"\n    for line in info_list[1:]:\n        source = tuberack.wells(line[1].upper())\n        vol = float(line[2])\n        pip = pip_s if vol <= pip_s.max_volume else pip_l\n        pick_up(pip)\n        pip.transfer(vol, source, mastermix_dest, new_tip='never')\n        pip.drop_tip()\n\n    \"\"\" distribute mastermix and transfer sample \"\"\"\n    if tc.lid_position != 'open':\n        tc.open_lid()\n    if using_multi:\n        mm_source = mm_plate.rows()[0][0]\n        mm_dests = tc_plate.rows()[0][:num_cols]\n        vol_per_well = mastermix_volume*num_cols*1.05\n        pick_up(p1)\n        for well in mm_plate.columns()[0]:\n            p1.transfer(vol_per_well, mm_tube, well, new_tip='never')\n            p1.blow_out(well.top(-2))\n        p1.drop_tip()\n        pip_mm = p2\n\n    else:\n        mm_source = mm_tube\n        mm_dests = tc_plate.wells()[:number_of_samples]\n        pip_mm = pip_s if mastermix_volume <= pip_s.max_volume else pip_l\n\n    for d in mm_dests:\n        pick_up(pip_mm)\n        pip_mm.transfer(mastermix_volume, mm_source, d, new_tip='never')\n        pip_mm.drop_tip()\n\n    # transfer DNA to corresponding well\n    if using_multi:\n        dna_sources = dna_plate.rows()[0][:num_cols]\n        dna_dests = tc_plate.rows()[0][:num_cols]\n        pip_dna = p2\n    else:\n        dna_sources = dna_plate.wells()[:number_of_samples]\n        dna_dests = tc_plate.wells()[:number_of_samples]\n        pip_dna = pip_s if dna_volume <= pip_s.max_volume else pip_l\n\n    for s, d in zip(dna_sources, dna_dests):\n        pick_up(pip_dna)\n        pip_dna.transfer(\n            dna_volume, s, d, mix_after=(5, 0.8*mastermix_volume + dna_volume),\n            new_tip='never')\n        pip_dna.drop_tip()\n\n    \"\"\" run PCR profile on thermocycler \"\"\"\n\n    # Close lid\n    if tc.lid_position != 'closed':\n        tc.close_lid()\n\n    # lid temperature set\n    tc.set_lid_temperature(lid_temp)\n\n    # initialization\n    well_vol = mastermix_volume + dna_volume\n    tc.set_block_temperature(\n        init_temp, hold_time_seconds=init_time, block_max_volume=well_vol)\n\n    # run profile\n    profile = [\n        {'temperature': d_temp, 'hold_time_seconds': d_time},\n        {'temperature': a_temp, 'hold_time_seconds': a_temp},\n        {'temperature': e_temp, 'hold_time_seconds': e_time}\n    ]\n\n    tc.execute_profile(\n        steps=profile, repetitions=no_cycles, block_max_volume=well_vol)\n\n    # final elongation\n    tc.set_block_temperature(\n        fe_temp, hold_time_seconds=fe_time, block_max_volume=well_vol)\n\n    # final hold\n    tc.deactivate_lid()\n    tc.set_block_temperature(final_temp)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "sample number",
            "name": "number_of_samples",
            "type": "int"
        },
        {
            "default": 2,
            "label": "DNA volume (in ul)",
            "name": "dna_volume",
            "type": "float"
        },
        {
            "default": 18,
            "label": "mastermix volume (in ul)",
            "name": "mastermix_volume",
            "type": "float"
        },
        {
            "default": "Reagent,Well,Volume\nBuffer,A2,3\nMgCl,A3,40\ndNTPs,A2,90\nWater,A3,248\nprimer 1,A4,25\nprimer 2,A5,25\n",
            "label": "master mix .csv file",
            "name": "master_mix_csv",
            "type": "textFile"
        },
        {
            "label": "mastermix reagents labware",
            "name": "tuberack_type",
            "options": [
                {
                    "label": "Opentrons 24 Well Aluminum Block (cooled) with NEST 1.5 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block (cooled) with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block (cooled) with NEST 2 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block (cooled) with NEST 2 mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 2 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 2 mL Snapcap",
                    "value": "opentrons_24_tuberack_nest_2ml_snapcap"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "single-channel pipette type",
            "name": "single_channel_type",
            "options": [
                {
                    "label": "GEN2 P1000 Single",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "GEN2 P300 Single",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "GEN2 P20 Single",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "GEN1 P1000 Single",
                    "value": "p1000_single"
                },
                {
                    "label": "GEN1 P300 Single",
                    "value": "p300_single"
                },
                {
                    "label": "GEN1 P50 Single",
                    "value": "p50_single"
                },
                {
                    "label": "GEN1 P10 Single",
                    "value": "p10_single"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "single-channel mount",
            "name": "single_channel_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "secondary pipette type (if applicable)",
            "name": "pipette_2_type",
            "options": [
                {
                    "label": "GEN2 P1000 Single",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "GEN2 P300 Single",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "GEN2 P20 Single",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "GEN1 P1000 Single",
                    "value": "p1000_single"
                },
                {
                    "label": "GEN1 P300 Single",
                    "value": "p300_single"
                },
                {
                    "label": "GEN1 P50 Single",
                    "value": "p50_single"
                },
                {
                    "label": "GEN1 P10 Single",
                    "value": "p10_single"
                },
                {
                    "label": "GEN2 P300 Multi",
                    "value": "p300_multi_gen2"
                },
                {
                    "label": "GEN2 P20 Multi",
                    "value": "p20_multi_gen2"
                },
                {
                    "label": "GEN1 P300 multi",
                    "value": "p300_multi"
                },
                {
                    "label": "GEN1 P50 multi",
                    "value": "p50_multi"
                },
                {
                    "label": "GEN1 P10 multi",
                    "value": "p10_multi"
                },
                {
                    "label": "none",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "secondary pipette mount (if applicable)",
            "name": "pipette_2_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "none",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 105,
            "label": "Lid Temperature (\u00b0C)",
            "name": "lid_temp",
            "type": "int"
        },
        {
            "default": 96,
            "label": "Initialization Temperature (\u00b0C)",
            "name": "init_temp",
            "type": "int"
        },
        {
            "default": 30,
            "label": "Initialization Time",
            "name": "init_time",
            "type": "int"
        },
        {
            "default": 96,
            "label": "Denaturation Temperature (\u00b0C)",
            "name": "d_temp",
            "type": "int"
        },
        {
            "default": 15,
            "label": "Denaturation Time",
            "name": "d_time",
            "type": "int"
        },
        {
            "default": 60,
            "label": "Annealation Temperature (\u00b0C)",
            "name": "a_temp",
            "type": "int"
        },
        {
            "default": 30,
            "label": "Annealation Time",
            "name": "a_time",
            "type": "int"
        },
        {
            "default": 74,
            "label": "Elongation Temperature (\u00b0C)",
            "name": "e_temp",
            "type": "int"
        },
        {
            "default": 30,
            "label": "Elongation Time",
            "name": "e_time",
            "type": "int"
        },
        {
            "default": 30,
            "label": "Number of Cycles",
            "name": "no_cycles",
            "type": "int"
        },
        {
            "default": 74,
            "label": "Final Elongation Temperature (\u00b0C)",
            "name": "fe_temp",
            "type": "int"
        },
        {
            "default": 30,
            "label": "Final Elongation Time",
            "name": "fe_time",
            "type": "int"
        },
        {
            "default": 4,
            "label": "Final Hold Temperature (\u00b0C)",
            "name": "final_temp",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single_gen2"
        },
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "rack for mastermix reagents on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_24_aluminumblock_nest_1.5ml_screwcap"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "DNA plate on 5",
            "share": false,
            "slot": "5",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "thermocycler plate on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.0",
        "author": "Nick <protocols@opentrons.com>",
        "protocolName": "Complete PCR Workflow with Thermocycler",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "ThermocyclerContext at Thermocycler Module on 7 lw thermocycler plate on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "thermocycler"
        }
    ]
}