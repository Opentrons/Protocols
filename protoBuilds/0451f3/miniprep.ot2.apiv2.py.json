{
    "content": "from opentrons import protocol_api\nfrom opentrons.types import Point\nimport math\n\nmetadata = {\n    'protocolName': 'Zymo Zyppy\u2122-96 Plasmid MagBead Miniprep',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'apiLevel': '2.12'\n}\n\nTEST_MODE_BEADS = False\nTEST_MODE_BIND_INCUBATE = False\nTEST_MODE_AIRDRY = False\n\n\ndef run(ctx):\n\n    [num_samples, mixreps, time_airdry_minutes, vol_final_elution,\n     mount_m300] = get_values(  # noqa: F821\n        'num_samples', 'mixreps', 'time_airdry_minutes', 'vol_final_elution',\n        'mount_m300')\n\n    if TEST_MODE_BEADS:\n        mixreps = 1\n    # time_settling_bind_minutes = 5.0\n    time_settling_wash_minutes = 2.0\n    vol_mix = 200\n    z_offset = 3.0\n    radial_offset_fraction = 0.6  # fraction of radius\n    vol_cleared_lysate = 750.0\n    vol_elution = 40\n    engage_height = 7.6\n    time_incubation_deep_blue_minutes = 5.0\n    time_incubation_elution_minutes = 5.0\n\n    ctx.max_speeds['X'] = 200\n    ctx.max_speeds['Y'] = 200\n\n    magdeck = ctx.load_module('magnetic module gen2', '1')\n    magdeck.disengage()\n    magplate = magdeck.load_labware('nest_96_wellplate_2ml_deep',\n                                    'deepwell plate')\n    collection_plate = ctx.load_labware('nest_96_wellplate_2ml_deep', '2',\n                                        'collection plate')\n    elutionplate = ctx.load_labware('biorad_96_wellplate_200ul_pcr', '3',\n                                    'elution plate')\n    waste = ctx.load_labware('nest_1_reservoir_195ml', '4',\n                             'Liquid Waste').wells()[0]\n    res1 = ctx.load_labware('nest_12_reservoir_15ml', '5',\n                            'reagent reservoir 1')\n    res2 = ctx.load_labware('nest_1_reservoir_195ml', '6',\n                            'reagent reservoir 2')\n    tips300 = [\n        ctx.load_labware('opentrons_96_filtertiprack_200ul', slot,\n                         '200\u00b5l filtertiprack')\n        for slot in ['7', '8', '9', '10', '11']]\n\n    # load P300M pipette\n    m300 = ctx.load_instrument(\n        'p300_multi_gen2', mount_m300, tip_racks=tips300)\n\n    \"\"\"\n    Here is where you can define the locations of your reagents.\n    \"\"\"\n    deep_blue_lysis_buffer = res1.rows()[0][:1]\n    neutralization_buffer = res1.rows()[0][1:5]\n    magclearing_beads = res1.rows()[0][5:6]\n    magbinding_beads = res1.rows()[0][6:7]\n    endo_wash_buffer = res1.rows()[0][7:9]\n    elution_buffer = res1.rows()[0][9:10]\n    zyppy_wash_buffer = res2.rows()[0][:1]\n\n    num_cols = math.ceil(num_samples/8)\n    mag_samples_m = magplate.rows()[0][:num_cols]\n    collection_samples = collection_plate.rows()[0][:num_cols]\n    elution_samples_m = elutionplate.rows()[0][:num_cols]\n    if mag_samples_m[0].width:\n        radius = mag_samples_m[0].width/2\n    else:\n        radius = mag_samples_m[0].diameter/2\n\n    def pick_up(pip=m300):\n        try:\n            pip.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            ctx.pause(\"\\n\\n\\n\\nReplace 200ul filtertipracks before resuming.\")\n            pip.reset_tipracks()\n            pip.pick_up_tip()\n\n    def slow_withdraw(well, pip=m300):\n        ctx.max_speeds['A'] = 25\n        ctx.max_speeds['Z'] = 25\n        pip.move_to(well.top())\n        del ctx.max_speeds['A']\n        del ctx.max_speeds['Z']\n\n    def remove_supernatant(vol, destinations, z_asp=z_offset, z_disp=None):\n        \"\"\"\n        `remove_supernatant` will transfer supernatant from the deepwell\n        extraction plate to the liquid waste reservoir.\n        :param vol (float): The amount of volume to aspirate from all deepwell\n                            sample wells and dispense in the liquid waste.\n        :param park (boolean): Whether to pick up sample-corresponding tips\n                               in the 'parking rack' or to pick up new tips.\n        \"\"\"\n\n        dest_list = [destinations]*num_cols \\\n            if type(destinations) != list else destinations\n\n        if not z_disp:\n            z_disp = dest_list[0].depth\n\n        num_transfers = math.ceil(vol/m300.tip_racks[0].wells()[0].max_volume)\n        vol_per_transfer = round(vol/num_transfers, 2)\n        m300.flow_rate.aspirate /= 10\n        for m, dest in zip(mag_samples_m, dest_list):\n            pick_up()\n            for _ in range(num_transfers):\n                m300.aspirate(vol_per_transfer, m.bottom(z_asp))\n                slow_withdraw(m)\n                m300.dispense(vol_per_transfer, dest.bottom(z_disp))\n                m300.blow_out(dest.bottom(z_disp))\n                slow_withdraw(dest, m300)\n            m300.drop_tip()\n        m300.flow_rate.aspirate *= 10\n\n    def resuspend(location, reps=mixreps, vol=vol_mix,\n                  samples=mag_samples_m, x_mix_fraction=radial_offset_fraction,\n                  z_mix=z_offset, dispense_height_rel=8, delay_seconds=0):\n        m300.flow_rate.aspirate *= 4\n        m300.flow_rate.dispense *= 4\n        side_x = 1 if samples.index(location) % 2 == 0 else -1\n        m300.move_to(location.center())\n        for r_ind in range(reps):\n            side_y = 1 if r_ind % 2 == 0 else -1\n            bead_loc = location.bottom().move(\n                Point(x=side_x*radius*radial_offset_fraction,\n                      y=side_y*radius*radial_offset_fraction,\n                      z=z_mix))\n            m300.aspirate(vol, bead_loc)\n            m300.dispense(vol, bead_loc.move(Point(z=dispense_height_rel)))\n        ctx.delay(seconds=delay_seconds)\n        m300.flow_rate.aspirate /= 4\n        m300.flow_rate.dispense /= 4\n\n    def lyse_bind_wash(vol, reagent, time_incubation=0,\n                       time_settling=0, premix=False,\n                       do_discard_supernatant=True, do_resuspend=False,\n                       vol_supernatant=0, supernatant_locations=None,\n                       resuspension_delay_seconds=0,\n                       z_disp_supernatant=None):\n        \"\"\"\n        `bind` will perform magnetic bead binding on each sample in the\n        deepwell plate. Each channel of binding beads will be mixed before\n        transfer, and the samples will be mixed with the binding beads after\n        the transfer. The magnetic deck activates after the addition to all\n        samples, and the supernatant is removed after bead bining.\n        :param vol (float): The amount of volume to aspirate from the elution\n                            buffer source and dispense to each well containing\n                            beads.\n        :param park (boolean): Whether to save sample-corresponding tips\n                               between adding elution buffer and transferring\n                               supernatant to the final clean elutions PCR\n                               plate.\n        \"\"\"\n\n        columns_per_channel = 12//len(reagent)\n        num_transfers = math.ceil(vol/m300.tip_racks[0].wells()[0].max_volume)\n        vol_per_transfer = round(vol/num_transfers, 2)\n\n        for i, well in enumerate(mag_samples_m):\n            source = reagent[i//columns_per_channel]\n            pick_up()\n            if premix:\n                m300.flow_rate.aspirate *= 4\n                m300.flow_rate.dispense *= 4\n                for _ in range(5):\n                    m300.aspirate(200, source.bottom(0.5))\n                    m300.dispense(200, source.bottom(5))\n                m300.flow_rate.aspirate /= 4\n                m300.flow_rate.dispense /= 4\n            for _ in range(num_transfers):\n                m300.dispense(m300.current_volume, source.top(-1))\n                m300.aspirate(vol_per_transfer, source)\n                slow_withdraw(source)\n                m300.dispense(vol_per_transfer, well.top(-1))\n                m300.blow_out(well.top(-1))\n                m300.aspirate(10, well.top(-1))  # avoid droplet\n\n            if do_resuspend:\n                resuspend(well)\n            else:\n                if mixreps > 0:\n                    m300.flow_rate.aspirate *= 4\n                    m300.flow_rate.dispense *= 4\n                    m300.mix(mixreps, vol_mix, well.bottom(2))\n                    m300.flow_rate.aspirate /= 4\n                    m300.flow_rate.dispense /= 4\n            m300.air_gap(20)\n            m300.drop_tip()\n\n        if not TEST_MODE_BIND_INCUBATE:\n            ctx.delay(minutes=time_incubation,\n                      msg=f'Incubating off MagDeck for \\\n{time_incubation_deep_blue_minutes} minutes.')\n        if do_discard_supernatant:\n            magdeck.engage(engage_height)\n            if not TEST_MODE_BEADS:\n                ctx.delay(minutes=time_settling, msg=f'Incubating on \\\nMagDeck for {time_settling} minutes.')\n\n            remove_supernatant(vol_supernatant,\n                               destinations=supernatant_locations)\n            magdeck.disengage()\n\n    lyse_bind_wash(vol=100, reagent=deep_blue_lysis_buffer,\n                   time_incubation=time_incubation_deep_blue_minutes,\n                   do_discard_supernatant=False)\n    lyse_bind_wash(vol=450, reagent=neutralization_buffer,\n                   do_discard_supernatant=False, resuspension_delay_seconds=5)\n    lyse_bind_wash(vol=50, reagent=magclearing_beads, premix=True,\n                   do_discard_supernatant=False, resuspension_delay_seconds=5)\n\n    ctx.pause('Centrifuge the extraction plate. Replace on magnetic module \\\nwhen finished.')\n    magdeck.engage(engage_height)\n    ctx.delay(minutes=10, msg='Incubating on MagDeck for 10 minutes.')\n    remove_supernatant(vol_cleared_lysate, collection_samples,\n                       z_disp=2.0)\n\n    ctx.pause('Discard plate on magnetic module. Move collection plate \\\n(slot 2) to the magnetic module (slot 1)')\n\n    lyse_bind_wash(30, magbinding_beads, do_resuspend=True, premix=True,\n                   do_discard_supernatant=True, vol_supernatant=780,\n                   supernatant_locations=waste)\n    lyse_bind_wash(200, endo_wash_buffer, do_resuspend=True,\n                   time_settling=time_settling_wash_minutes,\n                   do_discard_supernatant=True, vol_supernatant=200,\n                   supernatant_locations=waste)\n    for _ in range(2):\n        lyse_bind_wash(400, zyppy_wash_buffer, do_resuspend=True,\n                       time_settling=time_settling_wash_minutes,\n                       do_discard_supernatant=True, vol_supernatant=400,\n                       supernatant_locations=waste)\n\n    ctx.pause('Move the collection plate (slot 1) to a heating block for \\\n30mins 65C to remove the residual ethanol. Replace the plate onto the \\\nmagnetic module when complete.')\n\n    lyse_bind_wash(vol_elution, elution_buffer,\n                   time_incubation=time_incubation_elution_minutes,\n                   do_resuspend=True, supernatant_locations=elution_samples_m,\n                   time_settling=5.0, vol_supernatant=vol_elution-5.0,\n                   z_disp_supernatant=2.0)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "number of samples (1-96)",
            "name": "num_samples",
            "type": "int"
        },
        {
            "label": "deepwell plate type",
            "name": "lw_deepwell_plate",
            "options": [
                {
                    "label": "Eppendorf 1ml #951032603",
                    "value": "eppendorf_96_wellplate_1000ul"
                },
                {
                    "label": "NEST 2ml #999-00103",
                    "value": "nest_96_wellplate_2ml_deep"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 20,
            "label": "mixing repetitions for resuspension",
            "name": "mixreps",
            "type": "int"
        },
        {
            "default": 2.0,
            "label": "bead settling time (in  minutes)",
            "name": "time_settling_minutes",
            "type": "float"
        },
        {
            "default": 15.0,
            "label": "airdry time before elution (in minutes)",
            "name": "time_airdry_minutes",
            "type": "float"
        },
        {
            "default": 35.0,
            "label": "volume of final elution (in ul)",
            "name": "vol_final_elution",
            "type": "float"
        },
        {
            "label": "P300 8-channel GEN2 pipette mount",
            "name": "mount_m300",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "deepwell plate on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "collection plate on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "elution plate on 3",
            "share": false,
            "slot": "3",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Liquid Waste on 4",
            "share": false,
            "slot": "4",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "reagent reservoir 1 on 5",
            "share": false,
            "slot": "5",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "reagent reservoir 2 on 6",
            "share": false,
            "slot": "6",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "200\u00b5l filtertiprack on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "200\u00b5l filtertiprack on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "200\u00b5l filtertiprack on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "200\u00b5l filtertiprack on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "200\u00b5l filtertiprack on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.12",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Zymo Zyppy\u2122-96 Plasmid MagBead Miniprep"
    },
    "modules": [
        {
            "name": "MagneticModuleContext at Magnetic Module GEN2 on 1 lw deepwell plate on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "magdeck"
        }
    ]
}