{
    "content": "from opentrons import protocol_api\nfrom opentrons.types import Point\nimport math\n\nmetadata = {\n    'protocolName': 'NEBNext\u00ae Ultra\u2122 II FS DNA Library Prep Kit for \\\nIllumina',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'apiLevel': '2.13'\n}\n\n\ndef run(ctx):\n\n    [num_samples, mount_m300, mount_p20] = get_values(  # noqa: F821\n        'num_samples', 'mount_m300', 'mount_p20')\n\n    # tuning parameters\n    ctx.max_speeds['X'] = 200\n    ctx.max_speeds['Y'] = 200\n    z_offset = 3.0\n    radial_offset_fraction = 0.3  # fraction of radius\n\n    # modules\n    tc = ctx.load_module('thermocycler')\n    tempdeck = ctx.load_module('temperature module gen2', '3')\n    tempdeck.set_temperature(4)\n    magdeck = ctx.load_module('magnetic module gen2', '1')\n\n    # labware\n    tc_plate = tc.load_labware('nest_96_wellplate_100ul_pcr_full_skirt')\n    pcr_plate = ctx.load_labware(\n        'opentrons_96_aluminumblock_nest_wellplate_100ul', '2', 'PCR plate')\n    mag_plate = magdeck.load_labware('nest_96_wellplate_100ul_pcr_full_skirt')\n    tuberack = tempdeck.load_labware(\n        'opentrons_24_aluminumblock_nest_1.5ml_snapcap')\n    reagent_plate = ctx.load_labware('nest_96_wellplate_2ml_deep', '4',\n                                     'reagent plate')\n    tips20 = [\n        ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n        for slot in ['5', '6']]\n    tips200 = [\n        ctx.load_labware('opentrons_96_filtertiprack_200ul', slot)\n        for slot in ['9']]\n\n    # load pipette\n    p20 = ctx.load_instrument('p20_single_gen2', mount_p20, tip_racks=tips20)\n    m300 = ctx.load_instrument(\n        'p300_multi_gen2', mount_m300, tip_racks=tips200)\n\n    liquid_trash = ctx.loaded_labwares[12].wells()[0].top()\n\n    # reagents and variables\n    mm = tuberack.wells()[0]\n\n    num_cols = math.ceil(num_samples/8)\n    samples_s = pcr_plate.wells()[:num_samples]\n    samples_m = pcr_plate.rows()[0][:num_cols]\n    samples_s_tc = tc_plate.wells()[:num_samples]\n    samples_m_tc = tc_plate.rows()[0][:num_cols]\n    samples_s_mag = mag_plate.wells()[:num_samples]\n    samples_m_mag = mag_plate.rows()[0][:num_cols]\n    ref_well = pcr_plate.wells()[0]\n    if ref_well.width:\n        radius = ref_well.width/2\n    else:\n        radius = ref_well.diameter/2\n\n    def wick(pip, well, side=1):\n        pip.move_to(well.bottom().move(Point(x=side*radius*0.7, z=3)))\n\n    def slow_withdraw(pip, well):\n        ctx.max_speeds['A'] = 25\n        ctx.max_speeds['Z'] = 25\n        pip.move_to(well.top())\n        del ctx.max_speeds['A']\n        del ctx.max_speeds['Z']\n\n    def pick_up(pip, spot=None):\n        if spot:\n            pip.pick_up_tip(spot)\n        else:\n            try:\n                pip.pick_up_tip()\n            except protocol_api.labware.OutOfTipsError:\n                ctx.pause(\"\\n\\n\\n\\nReplace 200ul filtertipracks before \\\nresuming.\\n\\n\\n\\n\")\n                pip.reset_tipracks()\n                pip.pick_up_tip()\n\n    def remove_supernatant(vol, pip=m300, z_asp=0.2):\n        pip.flow_rate.aspirate /= 5\n        for i, s in enumerate(samples_m_mag):\n            if not pip.has_tip:\n                pick_up(pip)\n            pip.move_to(s.top())\n            ctx.max_speeds['A'] = 25\n            ctx.max_speeds['Z'] = 25\n            side = -1 if samples_m_mag.index(s) % 2 == 0 else 1\n            pip.aspirate(vol, s.bottom().move(Point(x=side, z=z_asp)))\n            pip.move_to(s.top())\n            del ctx.max_speeds['A']\n            del ctx.max_speeds['Z']\n            pip.dispense(vol, liquid_trash)\n            pip.blow_out(liquid_trash)\n            pip.air_gap(10)\n            pip.drop_tip()\n        pip.flow_rate.aspirate *= 5\n\n    def resuspend(location, reps, vol, samples,\n                  x_mix_fraction=radial_offset_fraction,\n                  z_mix=z_offset, dispense_height_rel=2.0,\n                  speed_up=True):\n        if speed_up:\n            m300.flow_rate.aspirate *= 4\n            m300.flow_rate.dispense *= 4\n        side_x = 1 if samples.index(location) % 2 == 0 else -1\n        m300.move_to(location.center())\n        for r_ind in range(reps):\n            bead_loc = location.bottom().move(\n                Point(x=side_x*radius*radial_offset_fraction,\n                      z=z_mix))\n            m300.aspirate(vol, bead_loc)\n            m300.dispense(vol, bead_loc.move(Point(z=dispense_height_rel)))\n        slow_withdraw(m300, location)\n        if speed_up:\n            m300.flow_rate.aspirate /= 4\n            m300.flow_rate.dispense /= 4\n\n    def wash(vol, reagent, time_incubation=0,\n             time_settling=0, premix=False,\n             do_discard_supernatant=True, do_resuspend=False,\n             vol_supernatant=0, park=True):\n\n        columns_per_channel = 12//len(reagent)\n        num_transfers = math.ceil(vol/m300.tip_racks[0].wells()[0].max_volume)\n        vol_per_transfer = round(vol/num_transfers, 2)\n\n        last_source = None\n\n        for i, well in enumerate(samples_m_mag):\n            source = reagent[i//columns_per_channel]\n            pick_up(m300)\n            if premix and last_source != source:\n                m300.flow_rate.aspirate *= 4\n                m300.flow_rate.dispense *= 4\n                for _ in range(5):\n                    m300.aspirate(200, source.bottom(0.5))\n                    m300.dispense(200, source.bottom(5))\n                m300.flow_rate.aspirate /= 4\n                m300.flow_rate.dispense /= 4\n            last_source = source\n            for _ in range(num_transfers):\n                m300.aspirate(vol_per_transfer, source)\n                slow_withdraw(m300, source)\n                m300.dispense(vol_per_transfer, well.top())\n            if do_resuspend:\n                magdeck.disengage()\n                resuspend(well)\n            m300.air_gap(20)\n            m300.drop_tip()\n\n        if time_incubation > 0:\n            ctx.delay(minutes=time_incubation,\n                      msg=f'Incubating off MagDeck for \\\n{time_incubation} minutes.')\n        if do_discard_supernatant:\n            magdeck.engage()\n            ctx.delay(minutes=time_settling, msg=f'Incubating on \\\nMagDeck for {time_settling} minutes.')\n\n            remove_supernatant(vol_supernatant)\n            magdeck.disengage()\n\n    \"\"\"\n\n    1. Fragmentation/End Preparation\n\n    \"\"\"\n\n    vol_mm = 4.5\n    vol_reaction = 17.5\n\n    for s in samples_s:\n        pick_up(p20)\n        p20.aspirate(vol_mm, mm)\n        slow_withdraw(p20, mm)\n        p20.dispense(vol_mm, s.bottom(1))\n        p20.blow_out(s.bottom(1))\n        ctx.delay(seconds=2)\n        slow_withdraw(p20, s)\n        p20.drop_tip()\n\n    for m in samples_m:\n        pick_up(m300)\n        m300.mix(10, 10, m)\n        m300.blow_out(m.bottom(1))\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, m)\n        m300.drop_tip()\n\n    ctx.pause('\\n\\n\\n\\nCentrifugre PCR plate if necessary. Resume once \\\nplate is returned to slot 2.\\n\\n\\n\\n')\n\n    tc.open_lid()\n    tc.set_lid_temperature(75)\n\n    for s, d in zip(samples_m, samples_m_tc):\n        pick_up(m300)\n        m300.aspirate(vol_reaction, s.bottom(0.5))\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, s)\n        m300.dispense(vol_reaction, d.bottom(1))\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, d)\n        m300.drop_tip()\n\n    profile = [\n        {'temperature': 37, 'hold_time_minutes': 5},\n        {'temperature': 65, 'hold_time_minutes': 30}\n    ]\n    tc.close_lid()\n    tc.execute_profile(steps=profile, repetitions=1,\n                       block_max_volume=vol_reaction)\n    tc.set_block_temperature(4)\n    tc.open_lid()\n\n    \"\"\"\n\n    2. Adaptor Ligation\n\n    \"\"\"\n    mm = tuberack.wells()[1]\n    user = tuberack.wells()[2]\n    vol_mm = 16.75\n    vol_user = 1.5\n\n    tc.deactivate_lid()\n\n    for s in samples_s_tc:\n        pick_up(p20)\n        p20.aspirate(vol_mm, mm)\n        slow_withdraw(p20, mm)\n        p20.dispense(vol_mm, s.bottom(1))\n        slow_withdraw(p20, s)\n        p20.drop_tip()\n\n    for m in samples_m_tc:\n        pick_up(m300)\n        m300.mix(10, 25, m)\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, m)\n        m300.drop_tip()\n\n    ctx.pause('\\n\\n\\n\\nCentrifuge PCR plate if necessary. Resume once \\\nplate is returned to Thermocycler.\\n\\n\\n\\n')\n\n    tc.close_lid()\n    tc.set_block_temperature(20, hold_time_minutes=15)\n    tc.open_lid()\n\n    ctx.pause('\\n\\n\\n\\nPlace USER enzyme in position C1 of tuberack on \\\ntemprature module. Resume once finished.\\n\\n\\n\\n')\n\n    for s in samples_s_tc:\n        pick_up(p20)\n        p20.aspirate(vol_user, user)\n        slow_withdraw(p20, user)\n        p20.dispense(vol_user, s.bottom(1))\n        slow_withdraw(p20, s)\n        p20.drop_tip()\n\n    for m in samples_m_tc:\n        pick_up(m300)\n        m300.mix(10, 25, m)\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, m)\n        m300.drop_tip()\n\n    ctx.pause('\\n\\n\\n\\nCentrifuge PCR plate if necessary. Resume once \\\nplate is returned to Thermocycler.\\n\\n\\n\\n')\n\n    tc.set_lid_temperature(47)\n    tc.close_lid()\n\n    tc.set_block_temperature(37, hold_time_minutes=15)\n    tc.set_block_temperature(4)\n    tc.open_lid()\n\n    ctx.pause('\\n\\n\\n\\nMove Thermocycler plate to magnetic module.\\n\\n\\n\\n')\n\n    \"\"\"\n\n    3. Cleanup of Adaptor-Ligated DNA\n\n    \"\"\"\n\n    samples_s_tc = tc_plate.wells()[num_samples:num_samples*2]\n    samples_m_tc = tc_plate.rows()[0][num_cols:num_cols*2]\n\n    vahts_beads = reagent_plate.rows()[0][0]\n    etoh = reagent_plate.rows()[0][2]\n    nuclease_free_water = reagent_plate.rows()[0][11]\n    vol_vahts_beads = 28.5\n    vol_etoh = 100.0\n    vol_water = 9.0\n    vol_elution = 7.5\n\n    for i, s in enumerate(samples_m_mag):\n        pick_up(m300)\n        if i == 0:\n            m300.mix(10, 20, vahts_beads)\n        m300.aspirate(vol_vahts_beads, vahts_beads)\n        slow_withdraw(m300, vahts_beads)\n        m300.dispense(vol_vahts_beads, s)\n        m300.mix(10, 20, s)\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, s)\n        m300.drop_tip()\n\n    ctx.pause('\\n\\n\\n\\nCentrifuge PCR plate if necessary. Resume once \\\nplate is returned to Thermocycler.\\n\\n\\n\\n')\n\n    ctx.delay(minutes=5, msg='\\n\\n\\n\\nIncubating\\n\\n\\n\\n')\n    magdeck.engage()\n    ctx.delay(minutes=5, msg='\\n\\n\\n\\nBeads separating\\n\\n\\n\\n')\n\n    ctx.pause('\\n\\n\\n\\nResume once supernatant is clear\\n\\n\\n\\n')\n    remove_supernatant(62)\n\n    # washes\n    for _ in range(2):\n        pick_up(m300)\n        for s in samples_m_mag:\n            m300.aspirate(vol_etoh, etoh)\n            slow_withdraw(m300, etoh)\n            m300.dispense(vol_etoh, s.top())\n\n        ctx.delay(seconds=30, msg='\\n\\n\\n\\nIncubating\\n\\n\\n\\n')\n        remove_supernatant(102)\n\n    ctx.pause('Resume once beads are dry.')\n    magdeck.disengage()\n\n    for s in samples_m_mag:\n        pick_up(m300)\n        m300.aspirate(vol_water, nuclease_free_water)\n        slow_withdraw(m300, nuclease_free_water)\n        m300.dispense(vol_water, s)\n        resuspend(s, reps=10, vol=7, samples=samples_m_mag, speed_up=False)\n        m300.drop_tip()\n\n    ctx.delay(minutes=2, msg='\\n\\n\\n\\nIncubating\\n\\n\\n\\n')\n    magdeck.engage()\n    ctx.delay(minutes=5, msg='\\n\\n\\n\\nBeads separating\\n\\n\\n\\n')\n\n    ctx.pause('\\n\\n\\n\\nResume once supernatant is clear\\n\\n\\n\\n')\n\n    for s, d in zip(samples_s_mag, samples_s_tc):\n        pick_up(p20)\n        p20.aspirate(vol_elution, s.bottom(0.2))\n        p20.dispense(vol_elution, d.bottom(0.2))\n        wick(p20, d)\n        p20.drop_tip()\n\n    magdeck.disengage()\n\n    \"\"\"\n\n    4. PCR Amplification\n\n    \"\"\"\n\n    mm = tuberack.wells()[3]\n    vol_mm = 12.5\n\n    for s in samples_s_tc:\n        pick_up(p20)\n        p20.aspirate(vol_mm, mm)\n        slow_withdraw(p20, mm)\n        p20.dispense(vol_mm, s.bottom(1))\n        slow_withdraw(p20, s)\n        p20.drop_tip()\n\n    ctx.pause('Add 5ul of Primer indexes, vortex and centrifuge manually. \\\nPlace back into the thermocycler block when finished.')\n\n    profile = [\n        {'temperature': 98, 'hold_time_seconds': 10},\n        {'temperature': 65, 'hold_time_seconds': 75}\n    ]\n    tc.close_lid()\n    tc.set_block_temperature(98, hold_time_seconds=30)\n    tc.execute_profile(profile, repetitions=6)\n    tc.set_block_temperature(65, hold_time_minutes=5)\n    tc.set_block_temperature(4)\n    tc.open_lid()\n\n    ctx.pause('\\n\\n\\n\\nRefill all tips and reagents, and move \\\nThermocycler plate to magnetic module.\\n\\n\\n\\n')\n    p20.reset_tipracks()\n    m300.reset_tipracks()\n\n    \"\"\"\n\n    5. Cleanup of PCR Reaction\n\n    \"\"\"\n\n    samples_s_mag = mag_plate.wells()[num_samples:num_samples*2]\n    samples_m_mag = mag_plate.rows()[0][num_cols:num_cols*2]\n    samples_m_eluton = pcr_plate.rows()[0][num_cols:num_cols*2]\n\n    vol_vahts_beads = 22.5\n    vol_etoh = 100.0\n    vol_water = 27.0\n    vol_elution = 25.0\n\n    for i, s in enumerate(samples_m_mag):\n        pick_up(m300)\n        if i == 0:\n            m300.mix(10, 20, vahts_beads)\n        m300.aspirate(vol_vahts_beads, vahts_beads)\n        slow_withdraw(m300, vahts_beads)\n        m300.dispense(vol_vahts_beads, s)\n        m300.mix(10, 20, s)\n        ctx.delay(seconds=2)\n        slow_withdraw(m300, s)\n        m300.drop_tip()\n\n    ctx.delay(minutes=5, msg='\\n\\n\\n\\nIncubating\\n\\n\\n\\n')\n    magdeck.engage()\n    ctx.delay(minutes=5, msg='\\n\\n\\n\\nBeads separating\\n\\n\\n\\n')\n\n    ctx.pause('\\n\\n\\n\\nResume once supernatant is clear\\n\\n\\n\\n')\n    remove_supernatant(46)\n\n    # washes\n    for _ in range(2):\n        pick_up(m300)\n        for s in samples_m_mag:\n            m300.aspirate(vol_etoh, etoh)\n            slow_withdraw(m300, etoh)\n            m300.dispense(vol_etoh, s.top())\n\n        ctx.delay(seconds=30, msg='\\n\\n\\n\\nIncubating\\n\\n\\n\\n')\n        remove_supernatant(102)\n\n    ctx.pause('Resume once beads are dry.')\n    magdeck.disengage()\n\n    for s in samples_m_mag:\n        pick_up(m300)\n        m300.aspirate(vol_water, nuclease_free_water)\n        slow_withdraw(m300, nuclease_free_water)\n        m300.dispense(vol_water, s)\n        resuspend(s, reps=10, vol=7, samples=samples_m_mag)\n        m300.drop_tip()\n\n    ctx.delay(minutes=2, msg='\\n\\n\\n\\nIncubating\\n\\n\\n\\n')\n    magdeck.engage()\n    ctx.delay(minutes=5, msg='\\n\\n\\n\\nBeads separating\\n\\n\\n\\n')\n\n    ctx.pause('\\n\\n\\n\\nResume once supernatant is clear\\n\\n\\n\\n')\n\n    for s, d in zip(samples_m_mag, samples_m_eluton):\n        pick_up(m300)\n        m300.aspirate(vol_elution, s.bottom(0.2))\n        m300.dispense(vol_elution, d.bottom(0.2))\n        wick(m300, d)\n        m300.drop_tip()\n\n    magdeck.disengage()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 24,
            "label": "number of samples (1-24)",
            "name": "num_samples",
            "type": "int"
        },
        {
            "label": "P300 8-channel GEN2 pipette mount",
            "name": "mount_m300",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 single-channel GEN2 pipette mount",
            "name": "mount_p20",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "PCR plate on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "Opentrons 24 Well Aluminum Block with NEST 1.5 mL Snapcap on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
        },
        {
            "name": "reagent plate on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.13",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "NEBNext\u00ae Ultra\u2122 II FS DNA Library Prep Kit for Illumina"
    },
    "modules": [
        {
            "name": "ThermocyclerContext at Thermocycler Module on 7 lw NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "thermocycler"
        },
        {
            "name": "TemperatureModuleContext at Temperature Module GEN2 on 3 lw Opentrons 24 Well Aluminum Block with NEST 1.5 mL Snapcap on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "tempdeck"
        },
        {
            "name": "MagneticModuleContext at Magnetic Module GEN2 on 1 lw NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "magdeck"
        }
    ]
}