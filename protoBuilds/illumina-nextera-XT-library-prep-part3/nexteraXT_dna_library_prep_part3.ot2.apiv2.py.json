{"instruments": [{"mount": "right", "name": "p50_single"}], "labware": [{"slot": "1", "type": "biorad_96_wellplate_200ul_pcr", "name": "Final Plate (empty) on 1", "share": false}, {"slot": "2", "type": "usascientific_12_reservoir_22ml", "name": "Reservoir, 12-channel on 2", "share": false}, {"slot": "4", "type": "biorad_96_wellplate_200ul_pcr", "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on Magnetic Module on 4", "share": false}, {"slot": "5", "type": "biorad_96_wellplate_200ul_pcr", "name": "Load Plate on 5", "share": false}, {"slot": "6", "type": "opentrons_96_tiprack_300ul", "name": "Opentrons 96 Tip Rack 300 \u00b5L on 6", "share": false}, {"slot": "7", "type": "opentrons_96_tiprack_300ul", "name": "Opentrons 96 Tip Rack 300 \u00b5L on 7", "share": false}, {"slot": "8", "type": "opentrons_96_tiprack_300ul", "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8", "share": false}, {"slot": "12", "type": "opentrons_1_trash_1100ml_fixed", "name": "Opentrons Fixed Trash on 12", "share": false}], "fields": [{"type": "dropDown", "label": "Pipette Model", "name": "pip_type", "options": [{"label": "P50 Single GEN1", "value": "p50_single"}, {"label": "P300 Single GEN2", "value": "p300_single_gen2"}, {"label": "P300 Single GEN1", "value": "p300_single"}]}, {"type": "dropDown", "label": "Pipette Mount", "name": "pip_mount", "options": [{"label": "Right side", "value": "right"}, {"label": "Left side", "value": "left"}]}, {"type": "int", "label": "Number of Samples", "name": "no_of_samps", "default": 24}], "modules": [], "metadata": {"protocolName": "Illumina Nextera XT NGS Prep 3: Normalize Libraries", "author": "Opentrons <protocols@opentrons.com>", "source": "Protocol Library", "apiLevel": "2.0"}, "content": "metadata = {\n    'protocolName': 'Illumina Nextera XT NGS Prep 3: Normalize Libraries',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.0'\n    }\n\n\ndef run(protocol):\n    [pip_type, pip_mount, no_of_samps] = get_values(  # noqa: F821\n    'pip_type', 'pip_mount', 'no_of_samps')\n\n    # labware setup\n    mag_deck = protocol.load_module('magdeck', '4')\n    mag_plate = mag_deck.load_labware('biorad_96_wellplate_200ul_pcr')\n    in_plate = protocol.load_labware(\n        'biorad_96_wellplate_200ul_pcr', '5', 'Load Plate'\n    )\n    out_plate = protocol.load_labware(\n        'biorad_96_wellplate_200ul_pcr', '1', 'Final Plate (empty)'\n    )\n    trough = protocol.load_labware(\n        'usascientific_12_reservoir_22ml', '2', 'Reservoir, 12-channel'\n    )\n    # reagent setup\n    lna1 = trough['A1']  # Library Normalization Additives 1\n    lnb1 = trough['A2']  # Library Normalization Beads 1\n    lnw1 = trough['A3']  # Library Normalization Wash 1\n    lns1 = trough['A4']  # Library Normalization Storage Buffer\n    naoh = trough['A5']  # 0.1 N NaOH\n    liquid_trash = trough['A12'].top()\n\n    tip_no = no_of_samps * 4 + 3\n    no_racks = tip_no//96 + (1 if tip_no % 96 > 0 else 0)\n    tips = [\n        protocol.load_labware('opentrons_96_tiprack_300ul', str(slot))\n        for slot in range(6, 7+no_racks)\n    ]\n\n    pip = protocol.load_instrument(pip_type, pip_mount, tip_racks=tips)\n\n    if no_of_samps <= 24:\n        inputs = [well\n                  for col in in_plate.columns()[:6]\n                  for well in col[:4]][:no_of_samps]\n        mag = [well\n               for col in mag_plate.columns()[:6]\n               for well in col[:4]][:no_of_samps]\n        outputs = [well\n                   for col in out_plate.columns()[:6]\n                   for well in col[:4]][:no_of_samps]\n    else:\n        inputs = [well for well in in_plate.wells()][:no_of_samps]\n        mag = [well for well in mag_plate.wells()][:no_of_samps]\n        outputs = [well for well in out_plate.wells()][:no_of_samps]\n\n    # Transfer 20 uL supernatant to new plate\n    pip.transfer(20, inputs, mag, new_tip='always')\n\n    # Transfer 44 uL LNA1 per sample to trough\n    lna_vol = round(no_of_samps*1.05*44)\n    pip.transfer(lna_vol, lna1, trough['A6'])\n\n    # Transfer 8 uL LNB1 per sample to trough\n    lnb_vol = round(no_of_samps*1.05*8)\n    pip.pick_up_tip()\n    pip.mix(5, 50, lnb1)\n    pip.transfer(lnb_vol, lnb1, trough['A6'], new_tip='never')\n    pip.mix(10, 50, trough['A6'])\n    pip.drop_tip()\n\n    # Transfer 45 uL combined LNA1 and LNB1 to each library\n    pip.transfer(45, trough['A6'], [well.top() for well in mag])\n\n    protocol.pause(\"Shake at 1800 rpm for 30 minutes. Place the plate \\\n    back on the MagDeck in slot 4.\")\n\n    # Turn on MagDeck for 2 minutes\n    mag_deck.engage()\n    protocol.delay(minutes=2)\n\n    # Remove supernatant from each well\n    for well in mag:\n        pip.transfer(65, well, liquid_trash)\n\n    # Wash beads twice with LNW1\n    for cycle in range(2):\n        pip.transfer(45, lnw1, [well.top() for well in mag])\n        protocol.pause(\"Shake at 1800 rpm for 5 minutes. \\\n        Place the plate back on the MagDeck in slot 4.\")\n        protocol.delay(minutes=2)\n        for well in mag:\n            pip.transfer(50, well, liquid_trash)\n\n    # Add 30 uL NaOH to each well\n    mag_deck.disengage()\n    pip.distribute(30, naoh, [well.top() for well in mag])\n\n    protocol.pause(\"Shake at 1800 rpm for 5 minutes. Place the plate back on \\\n        the MagDeck in slot 4.\")\n\n    # Turn on MagDeck for 2 minutes\n    mag_deck.engage()\n    protocol.delay(minutes=2)\n\n    # Add 30 uL LNS1 to each well of a new plate\n    pip.distribute(30, lns1, [well.top() for well in outputs])\n\n    # Add supernatant to new plate\n    for well, dest in zip(mag, outputs):\n        pip.transfer(30, well, dest)\n\n    # Disengage MagDeck\n    mag_deck.disengage()\n", "custom_labware_defs": []}