{
    "content": "import math\nfrom opentrons import protocol_api\n\nmetadata = {\n    'protocolName': 'Nucleic Acid Purification',\n    'author': 'parrish.payne@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.13'\n}\n\n\ndef run(ctx):\n\n    [num_samp, m300_mount] = get_values(  # noqa: F821\n        \"num_samp\", \"m300_mount\")\n\n    if not 1 <= num_samp <= 96:\n        raise Exception(\"Enter a sample number between 1-96\")\n\n    # labware\n    mag_mod = ctx.load_module('magnetic module gen2', 6)\n    mag_plate = mag_mod.load_labware('nest_96_wellplate_2ml_deep')\n    dest_plate = ctx.load_labware(\n        'armadillo_96_wellplate_200ul_pcr_full_skirt', 3)\n\n    reag_res = ctx.load_labware('nest_12_reservoir_15ml', 8)\n    wash_buff_res = ctx.load_labware('nest_1_reservoir_195ml', 5)\n    waste_res = ctx.load_labware('nest_1_reservoir_195ml', 2)\n\n    tips = [ctx.load_labware('opentrons_96_filtertiprack_200ul', slot)\n            for slot in [1, 4, 7, 10, 11]]\n\n    # pipettes\n    m300 = ctx.load_instrument('p300_multi_gen2', m300_mount, tip_racks=tips)\n\n    # functions\n\n    # Helper Functions\n    def pick_up(pip):\n        \"\"\"Function that can be used instead of .pick_up_tip() that will pause\n        robot when robot runs out of tips, prompting user to replace tips\n        before resuming\"\"\"\n        try:\n            pip.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            pip.home()\n            ctx.pause(\"Replace the tip racks and empty the waste bin\")\n            pip.reset_tipracks()\n            pip.pick_up_tip()\n\n    def slow_tip_withdrawal(current_pipette, well_location, to_center=False):\n        if current_pipette.mount == 'right':\n            axis = 'A'\n        else:\n            axis = 'Z'\n        ctx.max_speeds[axis] = 10\n        if to_center is False:\n            current_pipette.move_to(well_location.top())\n        else:\n            current_pipette.move_to(well_location.center())\n        ctx.max_speeds[axis] = None\n\n    # variables\n    num_cols = math.ceil(num_samp/8)\n    samples = mag_plate.rows()[0][:num_cols]\n    wash_buff = wash_buff_res.wells()[0]\n    elution_buff = reag_res.wells()[0]  # A1 of wash buff res\n    trash = waste_res.wells()[0].top()  # A1 of waste res\n    destination = dest_plate.rows()[0][:num_cols]\n\n    # protocol\n    ctx.comment('\\n----------MIXING LYSATES, BIND & BEADS-----------\\n\\n')\n    mix_vol = 200\n    num_mix = 15\n    for col in samples:\n        pick_up(m300)\n\n        for i in range(num_mix):\n            m300.aspirate(mix_vol, col.bottom(5))\n            m300.dispense(mix_vol, col.bottom(10))\n\n        slow_tip_withdrawal(m300, col)\n        m300.drop_tip()\n\n    ctx.comment('\\n-------------INCUBATION ON MAGNET---------------\\n\\n')\n    mag_mod.engage(height_from_base=4.0)\n    ctx.delay(minutes=10)\n\n    ctx.comment('\\n----------------REMOVING SUPER------------------\\n\\n')\n    sup_vol = 1820   # as per Parker during onsite\n    for col in samples:\n        pick_up(m300)\n\n        tip_ref_vol = m300.tip_racks[0].wells()[0].max_volume\n        num_transfers = math.ceil(sup_vol/tip_ref_vol)\n        transfer_vol = sup_vol/num_transfers\n\n        for i in range(num_transfers):\n            m300.aspirate(transfer_vol, col.bottom(0.4), rate=0.1)\n            # m300.aspirate(20, col.bottom(0.4), rate=0.1)\n            slow_tip_withdrawal(m300, col)\n            m300.dispense(transfer_vol, trash)\n            m300.blow_out()\n\n        m300.drop_tip()\n\n    mag_mod.disengage()\n\n    ctx.pause(\"Empty liquid waste Reservoir\")\n\n    ctx.comment('\\n---------------WASH STEP----------------\\n\\n')\n\n    wash_vol = 500\n    num_buff_transfers = math.ceil(wash_vol/tip_ref_vol)\n    buff_transfer_vol = wash_vol/num_buff_transfers\n\n    for i in range(3):\n        for col in samples:\n            pick_up(m300)\n\n            for i in range(num_buff_transfers):\n                m300.aspirate(buff_transfer_vol, wash_buff)\n                m300.dispense(buff_transfer_vol, col.top())\n                m300.blow_out()\n\n            m300.mix(5, 200, col)\n            m300.drop_tip()\n\n        mag_mod.engage(height_from_base=4.0)\n        ctx.delay(minutes=5)\n\n        for col in samples:\n            pick_up(m300)\n\n            for i in range(num_buff_transfers):\n                m300.aspirate(buff_transfer_vol, col.bottom(0.4), rate=0.1)\n                slow_tip_withdrawal(m300, col)\n                m300.dispense(buff_transfer_vol, trash)\n                m300.blow_out()\n\n            m300.drop_tip()\n\n        mag_mod.disengage()\n\n    ctx.comment('\\n----------------AIR DRY BEADS------------------\\n\\n')\n    ctx.delay(minutes=5)\n\n    ctx.comment('\\n----------------ELUTION STEP------------------\\n\\n')\n\n    for col in samples:\n\n        pick_up(m300)\n        m300.aspirate(50, elution_buff)\n        m300.dispense(50, col)\n        m300.mix(15, 50, col)\n        m300.drop_tip()\n\n    mag_mod.engage(height_from_base=4.0)\n    ctx.delay(minutes=5)\n\n    for s, d in zip(samples, destination):\n        pick_up(m300)\n        m300.aspirate(50, s.bottom(0.4), rate=0.1)\n        m300.dispense(50, d)\n        m300.drop_tip()\n\n    mag_mod.disengage()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "Number of Samples",
            "name": "num_samp",
            "type": "int"
        },
        {
            "label": "P300 multi-channel pipette mount",
            "name": "m300_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Armadillo 96 Well Plate 200 \u00b5L PCR Full Skirt on 3",
            "share": false,
            "slot": "3",
            "type": "armadillo_96_wellplate_200ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 5",
            "share": false,
            "slot": "5",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on Magnetic Module GEN2 on 6",
            "share": false,
            "slot": "6",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 8",
            "share": false,
            "slot": "8",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.13",
        "author": "parrish.payne@opentrons.com>",
        "protocolName": "Nucleic Acid Purification",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "MagneticModuleContext at Magnetic Module GEN2 on 6 lw NEST 96 Deepwell Plate 2mL on Magnetic Module GEN2 on 6",
            "share": false,
            "slot": "6",
            "type": "magdeck"
        }
    ]
}