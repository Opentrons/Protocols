{
    "content": "import os\nimport csv\n\nmetadata = {\n    'protocolName': 'NCI Panel 1',\n    'author': 'Chaz <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.1'\n}\n\n\ndef run(protocol):\n    [num_samps, n_cor, cd4_dil, cd8_dil, fox_dil, pdl1_dil, ki_dil, pan_dil,\n    ds_520, ds_570, ds_540,\n    ds_620, ds_650, ds_690] = get_values(  # noqa: F821\n    'num_samps', 'n_cor', 'cd4_dil', 'cd8_dil', 'fox_dil', 'pdl1_dil',\n    'ki_dil', 'pan_dil', 'ds_520', 'ds_570', 'ds_540',\n    'ds_620', 'ds_650', 'ds_690')\n\n    init_cond_dict = {\n      '520': [0, 'A1'],\n      '540': [0, 'B1'],\n      '570': [0, 'C1'],\n      '620': [0, 'D1'],\n      '650': [0, 'E1'],\n      '690': [0, 'F1'],\n      'CD3': [0, 'A2'],\n      'CD4': [0, 'B2'],\n      'CD8': [0, 'C2'],\n      'CD20': [0, 'D2'],\n      'CD56': [0, 'E2'],\n      'CD68': [0, 'F2'],\n      'CD163': [0, 'G2'],\n      'PD1': [0, 'H2'],\n      'PDL1': [0, 'A3'],\n      'FOXP3': [0, 'B3'],\n      'PANCK': [0, 'C3'],\n      'KI67': [0, 'D3'],\n      '520_src': [75, 'A1'],\n      '540_src': [75, 'B1'],\n      '570_src': [75, 'C1'],\n      '620_src': [75, 'D1'],\n      '650_src': [75, 'A2'],\n      '690_src': [75, 'B2'],\n      'CD3_src': [1000, 'A3'],\n      'CD4_src': [100, 'B3'],\n      'CD8_src': [100, 'C3'],\n      'CD20_src': [250, 'D3'],\n      'CD56_src': [1000, 'A4'],\n      'CD68_src': [100, 'B4'],\n      'CD163_src': [100, 'C4'],\n      'PD1_src': [100, 'D4'],\n      'PDL1_src': [100, 'A5'],\n      'FOXP3_src': [500, 'B5'],\n      'PANCK_src': [1000, 'C5'],\n      'KI67_src1': [2000, 'D5'],\n      'KI67_src2': [2000, 'A6'],\n      'KI67_src3': [2000, 'B6'],\n      'KI67_src4': [2000, 'C6'],\n      'KI67_src5': [2000, 'D6'],\n      'ab_dil': [50000, '93'],\n      'amp_dil': [50000, '93'],\n      'p10tip': [0, 'tip'],\n      'p1ktip': [0, 'tip']\n      }\n    if not protocol.is_simulating():\n        file_path = '/data/csv/ReagentVols.csv'\n        file_dir = os.path.dirname(file_path)\n        # check for file directory\n        if not os.path.exists(file_dir):\n            os.makedirs(file_dir)\n        # check for file; if not there, create initial volumes csv\n        if not os.path.isfile(file_path):\n            with open(file_path, 'w') as outfile:\n                for key in init_cond_dict:\n                    outfile.write(\"%s,%s,%s\\n\" % (key, init_cond_dict[key][0],\n                                  init_cond_dict[key][1]))\n\n    # create volumes dictionary based on csv file\n    volumes_dict = {}\n    if protocol.is_simulating():\n        volumes_dict = init_cond_dict\n    else:\n        with open(file_path) as csv_file:\n            csv_reader = csv.reader(csv_file, delimiter=',')\n            for row in csv_reader:\n                volumes_dict[row[0]] = [float(row[1]), row[2]]\n\n    # create labware\n    tips10 = protocol.load_labware('opentrons_96_tiprack_10ul', '4')\n    tips1k = protocol.load_labware('opentrons_96_tiprack_1000ul', '1')\n\n    p10 = protocol.load_instrument('p10_single', 'right', tip_racks=[tips10])\n    p1k = protocol.load_instrument('p1000_single', 'left', tip_racks=[tips1k])\n\n    plate_als = protocol.load_labware(\n        'biorad_96_wellplate_200ul_pcr', '3', 'Aliquots Plate')\n    tube_rack = protocol.load_labware(\n        'opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap',\n        '6',\n        'Tube Rack for Reagents'\n        )\n    big_tubes = protocol.load_labware(\n        'opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical',\n        '5',\n        '15mL & 50mL Tubes'\n        )\n    ab_dilutent = big_tubes['A3']\n    amp_dilutent = big_tubes['A4']\n\n    tubes6 = protocol.load_labware('custom_tuberack_6ml', '2')\n\n    # constants definition\n    tip10count = volumes_dict['p10tip'][0]\n    tip1kcount = volumes_dict['p1ktip'][0]\n    ab_ht = float(volumes_dict['ab_dil'][1])\n    ab_vol = volumes_dict['ab_dil'][0]\n    amp_ht = float(volumes_dict['amp_dil'][1])\n    amp_vol = volumes_dict['amp_dil'][0]\n\n    def pick_up(pip):\n        nonlocal tip10count\n        nonlocal tip1kcount\n\n        pipp = p10 if pip == p10 else p1k\n        tipc = tip10count if pip == p10 else tip1kcount\n        tipr = tips10 if pip == p10 else tips1k\n\n        if tipc == 96:\n            pipp.home()\n            protocol.pause('Out of tips for respective pipette. Please replace \\\n            and click RESUME.')\n            tipr.reset()\n            tipc = 0\n\n        pipp.pick_up_tip()\n\n        if pip == p10:\n            tip10count += 1\n        else:\n            tip1kcount += 1\n\n    def ab_d_transfer(vol, dest):\n        nonlocal ab_ht\n        nonlocal ab_vol\n\n        if vol >= ab_vol:\n            protocol.pause('More antibody dilutent needed, please replace. \\\n            When replaced in A3, click RESUME.')\n            ab_vol = 50000\n            ab_ht = 93\n        pick_up(p1k)\n\n        while vol > 1000:\n            p1k.transfer(\n                1000, ab_dilutent.bottom(ab_ht),\n                dest.top(), new_tip='never')\n            p1k.blow_out(dest.top())\n            vol -= 1000\n\n        p1k.transfer(\n            vol, ab_dilutent.bottom(ab_ht), dest.top(), new_tip='never')\n        p1k.mix(8, 800, dest.bottom(25))\n        p1k.blow_out(dest.top())\n        p1k.drop_tip()\n\n        new_ht = 1.10 * (vol / (3.14*13.9)**2)\n\n        ab_ht -= new_ht\n        ab_vol -= vol\n\n        if ab_ht <= 4:\n            ab_ht = 1\n\n    def amp_transfer(vol, dest):\n        nonlocal amp_ht\n        nonlocal amp_vol\n\n        if vol >= amp_vol:\n            protocol.pause('More opal dilutent needed, please replace. \\\n            When replaced in A4, click RESUME.')\n            amp_vol = 50000\n            amp_ht = 93\n\n        pick_up(p1k)\n\n        while vol > 1000:\n            p1k.transfer(\n                1000, amp_dilutent.bottom(amp_ht),\n                dest.top(), new_tip='never')\n            p1k.blow_out(dest.top())\n            vol -= 1000\n\n        p1k.transfer(\n            vol, amp_dilutent.bottom(amp_ht), dest.top(), new_tip='never')\n        p1k.mix(8, 800, dest.bottom(25))\n        p1k.blow_out(dest.top())\n        p1k.drop_tip()\n\n        new_ht = 1.10 * (vol / (3.14*13.9)**2)\n\n        amp_ht -= new_ht\n        amp_vol -= vol\n\n        if amp_ht <= 4:\n            amp_ht = 1\n\n    def ab_transfer(vol, src, dest):\n        ab = volumes_dict[src]\n        ab_src = volumes_dict[src+'_src']\n\n        ab_vol = ab[0]\n        ab_well = plate_als[ab[1]]\n\n        ab_src_vol = ab_src[0]\n        ab_src_well = tube_rack[ab_src[1]]\n\n        pause_msg = 'Please add more '+src+' antibody to well '+ab_src[1]+' \\\n        in slot 6. When ready, click RESUME.'\n\n        if vol >= ab_vol:\n            if ab_src_vol <= 50:\n                protocol.pause(pause_msg)\n                ab_src[0] += init_cond_dict[src+'_src'][0]\n            p10.transfer(50, ab_src_well, ab_well, new_tip='never')\n            ab_src[0] -= 50\n            ab[0] += 50\n            p10.blow_out(ab_well.top())\n\n        p10.transfer(vol, ab_well, dest, new_tip='never')\n        p10.blow_out(dest.top())\n        ab[0] -= vol\n\n    def ki67_helper(vol, src, dest):\n        \"\"\"This is a helper function that will check the value of the volume \\\n        bening transferred and will do the appropriate transfer. Finally, \\\n        it will update the volume as a return value.\n        \"\"\"\n        src_vol = src[0]\n        src_well = src[1]\n\n        if vol > 0:\n            if vol > src_vol:\n                p1k.transfer(\n                    src_vol, tube_rack[src_well], dest, new_tip='never')\n                p1k.blow_out(dest.top())\n                src[0] = 0\n                vol -= src_vol\n            else:\n                p1k.transfer(\n                    vol, tube_rack[src_well], dest, new_tip='never')\n                p1k.blow_out(dest.top())\n                src[0] -= vol\n                vol = 0\n\n        return vol\n\n    def ki67_transfer(vol, dest):\n        \"\"\"This function that will use 'ki67_helper' (above) to make the the \\\n        source list based on the dictionary. This way, the dictionary will be \\\n        updated appropriately.\n        \"\"\"\n        srcs = [volumes_dict['KI67_src'+str(i)] for i in range(1, 6)]\n\n        x = vol\n        # Make the transfers from the appropriate tubes\n        for src in srcs:\n            x = ki67_helper(x, src, dest)\n        # Refills tube if there is still volume left after transfers\n        while x > 0:\n            protocol.pause('Please refill all KI67 source tubes. Tubes D3, E3, \\\n            F3, G3, and H3 should each have 2mL in them. After refilling, \\\n            please click RESUME.')\n            for src in srcs:\n                src[0] = 2000\n            for src in srcs:\n                x = ki67_helper(x, src, dest)\n\n    # Antibody amount calculations\n    ab_dilutions = [cd4_dil, cd8_dil, fox_dil, pdl1_dil, pan_dil, ki_dil]\n    ab_vol = 150*(num_samps+n_cor)\n    ab_needed = [ab_vol/dil for dil in ab_dilutions]\n    dil_needed = [ab_vol - ab_n for ab_n in ab_needed]\n\n    ab_tubes = tubes6.wells()[:len(ab_dilutions)]\n\n    # AB transfer\n    ab_list = ['CD4', 'CD8', 'FOXP3', 'PDL1', 'PANCK']\n\n    for ab, vol, well in zip(ab_list, ab_needed, ab_tubes):\n        pick_up(p10)\n        ab_transfer(vol, ab, well)\n        p10.drop_tip()\n\n    # KI67 transfer\n    pick_up(p1k)\n    ki67_transfer(ab_needed[5], ab_tubes[5])\n    p1k.drop_tip()\n\n    # AB dilutent transfer\n    for well, vol in zip(ab_tubes, dil_needed):\n        ab_d_transfer(vol, well)\n\n    # Antibodies done - now need to complete opals\n    # opal amount calculations\n    op_list = [ds_520, ds_570, ds_540, ds_620, ds_650, ds_690]\n    op_total = [ab_vol*i for i in op_list]\n    op_needed = [(num_samps+n_cor)*i for i in op_list]\n    op_dil = [b-a for b, a in zip(op_total, op_needed)]\n    # determine which tubes to use\n    big_dil = sum(i > 6000 for i in op_total)\n    if big_dil > 0:\n        op_tubes = [w for w in big_tubes.columns()[0]+big_tubes.columns()[1]]\n    else:\n        op_tubes = tubes6.wells()[len(ab_dilutions):]\n    # opal transfers\n    opals = ['520', '570', '540', '620', '650', '690']\n\n    for op, vol, well in zip(opals, op_needed, op_tubes):\n        pick_up(p10)\n        ab_transfer(vol, op, well)\n        p10.drop_tip()\n\n    # dilutent transfer\n    for well, vol in zip(op_tubes, op_dil):\n        amp_transfer(vol, well)\n\n    # update dictionary\n    volumes_dict['p10tip'][0] = tip10count\n    volumes_dict['p1ktip'][0] = tip1kcount\n    volumes_dict['ab_dil'][1] = str(ab_ht)\n    volumes_dict['ab_dil'][0] = ab_vol\n    volumes_dict['amp_dil'][1] = str(amp_ht)\n    volumes_dict['amp_dil'][0] = amp_vol\n\n    # write updated dictionary to CSV\n    if not protocol.is_simulating():\n        with open(file_path, 'w') as outfile:\n            for key in volumes_dict:\n                outfile.write(\"%s,%s,%s\\n\" % (key, volumes_dict[key][0],\n                              volumes_dict[key][1]))\n",
    "custom_labware_defs": [
        {
            "brand": {
                "brand": "Custom",
                "brandId": []
            },
            "cornerOffsetFromSlot": {
                "x": 0,
                "y": 0,
                "z": 0
            },
            "dimensions": {
                "xDimension": 127.76,
                "yDimension": 85.48,
                "zDimension": 89
            },
            "groups": [
                {
                    "brand": {
                        "brand": "Custom",
                        "brandId": []
                    },
                    "metadata": {
                        "displayCategory": "wellPlate",
                        "displayName": "Custom 6mL Tube Rack",
                        "wellBottomShape": "u"
                    },
                    "wells": [
                        "A1",
                        "B1",
                        "C1",
                        "D1",
                        "A2",
                        "B2",
                        "C2",
                        "D2",
                        "A3",
                        "B3",
                        "C3",
                        "D3",
                        "A4",
                        "B4",
                        "C4",
                        "D4",
                        "A5",
                        "B5",
                        "C5",
                        "D5",
                        "A6",
                        "B6",
                        "C6",
                        "D6"
                    ]
                }
            ],
            "metadata": {
                "displayCategory": "wellPlate",
                "displayName": "Custom 6mL Tube Rack",
                "displayVolumeUnits": "\u00b5L",
                "tags": []
            },
            "namespace": "custom_beta",
            "ordering": [
                [
                    "A1",
                    "B1",
                    "C1",
                    "D1"
                ],
                [
                    "A2",
                    "B2",
                    "C2",
                    "D2"
                ],
                [
                    "A3",
                    "B3",
                    "C3",
                    "D3"
                ],
                [
                    "A4",
                    "B4",
                    "C4",
                    "D4"
                ],
                [
                    "A5",
                    "B5",
                    "C5",
                    "D5"
                ],
                [
                    "A6",
                    "B6",
                    "C6",
                    "D6"
                ]
            ],
            "parameters": {
                "format": "irregular",
                "isMagneticModuleCompatible": false,
                "isTiprack": false,
                "loadName": "custom_tuberack_6ml",
                "quirks": []
            },
            "schemaVersion": 2,
            "version": 1,
            "wells": {
                "A1": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 11.38,
                    "y": 74.1,
                    "z": 9
                },
                "A2": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 32.38,
                    "y": 74.1,
                    "z": 9
                },
                "A3": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 53.38,
                    "y": 74.1,
                    "z": 9
                },
                "A4": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 74.38,
                    "y": 74.1,
                    "z": 9
                },
                "A5": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 95.38,
                    "y": 74.1,
                    "z": 9
                },
                "A6": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 116.38,
                    "y": 74.1,
                    "z": 9
                },
                "B1": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 11.38,
                    "y": 53.1,
                    "z": 9
                },
                "B2": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 32.38,
                    "y": 53.1,
                    "z": 9
                },
                "B3": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 53.38,
                    "y": 53.1,
                    "z": 9
                },
                "B4": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 74.38,
                    "y": 53.1,
                    "z": 9
                },
                "B5": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 95.38,
                    "y": 53.1,
                    "z": 9
                },
                "B6": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 116.38,
                    "y": 53.1,
                    "z": 9
                },
                "C1": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 11.38,
                    "y": 32.1,
                    "z": 9
                },
                "C2": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 32.38,
                    "y": 32.1,
                    "z": 9
                },
                "C3": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 53.38,
                    "y": 32.1,
                    "z": 9
                },
                "C4": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 74.38,
                    "y": 32.1,
                    "z": 9
                },
                "C5": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 95.38,
                    "y": 32.1,
                    "z": 9
                },
                "C6": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 116.38,
                    "y": 32.1,
                    "z": 9
                },
                "D1": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 11.38,
                    "y": 11.1,
                    "z": 9
                },
                "D2": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 32.38,
                    "y": 11.1,
                    "z": 9
                },
                "D3": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 53.38,
                    "y": 11.1,
                    "z": 9
                },
                "D4": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 74.38,
                    "y": 11.1,
                    "z": 9
                },
                "D5": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 95.38,
                    "y": 11.1,
                    "z": 9
                },
                "D6": {
                    "depth": 80,
                    "diameter": 10.45,
                    "shape": "circular",
                    "totalLiquidVolume": 6000,
                    "x": 116.38,
                    "y": 11.1,
                    "z": 9
                }
            }
        }
    ],
    "fields": [
        {
            "default": 20,
            "label": "Number of Samples (1 - 30)",
            "name": "num_samps",
            "type": "int"
        },
        {
            "default": 3,
            "label": "N correction",
            "name": "n_cor",
            "type": "int"
        },
        {
            "default": 1000,
            "label": "CD4 Dilution",
            "name": "cd4_dil",
            "type": "int"
        },
        {
            "default": 200,
            "label": "CD8 Dilution",
            "name": "cd8_dil",
            "type": "int"
        },
        {
            "default": 200,
            "label": "FOXP3 Dilution",
            "name": "fox_dil",
            "type": "int"
        },
        {
            "default": 300,
            "label": "PD-L1 EL13N Dilution",
            "name": "pdl1_dil",
            "type": "int"
        },
        {
            "default": 400,
            "label": "PAN CK Dilution",
            "name": "pan_dil",
            "type": "int"
        },
        {
            "default": 2,
            "label": "KI-67 Dilution",
            "name": "ki_dil",
            "type": "int"
        },
        {
            "default": 1,
            "label": "Opal 520 Dispense",
            "name": "ds_520",
            "type": "int"
        },
        {
            "default": 2,
            "label": "Opal 570 Dispense",
            "name": "ds_570",
            "type": "int"
        },
        {
            "default": 2,
            "label": "Opal 540 Dispense",
            "name": "ds_540",
            "type": "int"
        },
        {
            "default": 2,
            "label": "Opal 620 Dispense",
            "name": "ds_620",
            "type": "int"
        },
        {
            "default": 2,
            "label": "Opal 650 Dispense",
            "name": "ds_650",
            "type": "int"
        },
        {
            "default": 2,
            "label": "Opal 690 Dispense",
            "name": "ds_690",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single"
        },
        {
            "mount": "right",
            "name": "p10_single"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Custom 6mL Tube Rack on 2",
            "share": false,
            "slot": "2",
            "type": "custom_tuberack_6ml"
        },
        {
            "name": "Aliquots Plate on 3",
            "share": false,
            "slot": "3",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Tip Rack 10 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_10ul"
        },
        {
            "name": "15mL & 50mL Tubes on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Tube Rack for Reagents on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.1",
        "author": "Chaz <protocols@opentrons.com>",
        "protocolName": "NCI Panel 1",
        "source": "Custom Protocol Request"
    },
    "modules": []
}