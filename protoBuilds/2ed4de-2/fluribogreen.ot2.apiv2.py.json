{
    "content": "import math\nfrom opentrons.types import Point\n\n\nmetadata = {\n    'protocolName': 'FluRibogreen Assay',\n    'author': 'Nick <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n\n    [num_samples, reagent_labware, starting_conc, prepare_standard,\n     standard_type, p1000_mount, p300_mount] = get_values(  # noqa: F821\n        'num_samples', 'reagent_labware', 'starting_conc', 'prepare_standard',\n        'standard_type', 'p1000_mount', 'p300_mount')\n\n    final_transfer_vol = 100\n    sample_vol = 25\n    max_working_vol = 1000\n    mix_reps = 10\n    max_factor_1_dil = max_working_vol/sample_vol\n\n    # load labwarex\n    sample_rack = ctx.load_labware(\n        'opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', '11',\n        'sample tuberack')\n    deepplate = ctx.load_labware('nest_96_wellplate_2ml_deep', '5',\n                                 'standard preparation plate')\n    flatplate = ctx.load_labware('corning_96_wellplate_360ul_flat', '2',\n                                 'final plate')\n    reagent_labware = ctx.load_labware(reagent_labware, '8',\n                                       'standards and buffers')\n    tipracks1000 = ctx.load_labware('opentrons_96_filtertiprack_1000ul', '7')\n    tipracks200 = ctx.load_labware('opentrons_96_filtertiprack_200ul', '6')\n    tiprack200m = ctx.load_labware('opentrons_96_filtertiprack_200ul', '9')\n\n    # load pipettes\n    p1000 = ctx.load_instrument('p1000_single_gen2', p1000_mount,\n                                tip_racks=[tipracks1000])\n    p300 = ctx.load_instrument('p300_multi_gen2', p300_mount,\n                               tip_racks=[tiprack200m])\n\n    tip_data = {\n        'single': {\n            'count': 0,\n            'tips': [\n                well for col in tipracks200.columns()[::-1]\n                for well in col[::-1]]\n        },\n        'multi': {\n            'count': 0,\n            'tips': tipracks200.rows()[0]\n        }\n    }\n\n    def pickup_p300(mode='single'):\n        current = 0.1 if mode == 'single' else 0.5\n        ctx._hw_manager.hardware._attached_instruments[\n            p300._implementation.get_mount()].update_config_item(\n                'pick_up_current', current)\n\n        p300.pick_up_tip(tip_data[mode]['tips'][tip_data[mode]['count']])\n        tip_data[mode]['count'] += 1\n\n    side = 1\n\n    def drop(pip):\n        nonlocal side\n        center = ctx.loaded_labwares[12].wells()[0].top()\n        pip.drop_tip(center.move(Point(x=side*20)))\n        side = side * -1\n\n    working_standard_1 = reagent_labware.wells()[5]\n    assay_buffer_1 = reagent_labware.wells()[6:9]\n    starting_samples = sample_rack.wells()[:num_samples]\n    num_sets = math.ceil(num_samples/8)\n    all_samples = [\n        deepplate.columns()[i*3:(i+1)*3]\n        for i in range(1, 1+num_sets)]\n\n    def standard_prep(standard, buffer, column):\n        dilution_col = column[:7]\n        for vol, dest in zip([900, 700, 500, 300, 100], dilution_col[:5]):\n            p1000.pick_up_tip()\n            p1000.transfer(vol, standard, dest, new_tip='never')\n            drop(p1000)\n\n        for vol, dest in zip([100, 300, 500, 700, 900, 950, 1000],\n                             dilution_col):\n            p1000.pick_up_tip()\n            p1000.transfer(vol, buffer[0], dest, mix_after=(5, 800),\n                           new_tip='never')\n            drop(p1000)\n        pickup_p300('single')\n        p300.aspirate(50, standard.bottom(2))\n        p300.dispense(50, dilution_col[5].bottom(3))\n        p300.mix(1, 100, dilution_col[5].bottom(3))\n        drop(p300)\n        p1000.pick_up_tip()\n        p1000.mix(mix_reps, 800, dilution_col[5])\n        drop(p1000)\n\n    def dilute(final_conc, dil_sets, buffer):\n        dil_factor = starting_conc/final_conc\n        # find necessary dilution factor(s)\n        if dil_factor > max_factor_1_dil:\n            factors = [10, dil_factor/10]\n        else:\n            factors = [dil_factor]\n\n        # pre add diluent\n        for i, factor in enumerate(factors):\n            dil_vol = (factor-1)*sample_vol*(i+1)\n            print(dil_vol)\n            for j, set in enumerate(dil_sets):\n                for k, well in enumerate(set[i]):\n                    if j*k+k < num_samples:\n                        p1000.pick_up_tip()\n                        p1000.transfer(dil_vol,\n                                       buffer[1+int((j*8+k)//(num_samples/2))],\n                                       well, new_tip='never')\n                        drop(p1000)\n\n        p300.flow_rate.aspirate = 40\n        p300.flow_rate.dispense = 40\n        # transfer sample\n        for i, s in enumerate(starting_samples):\n            print(sample_vol)\n            pickup_p300('single')\n            well = dil_sets[i//8][0][i % 8]\n            p300.aspirate(sample_vol, s.bottom(2))\n            p300.dispense(sample_vol, well.bottom(3))\n            p300.mix(1, 20, well.bottom(3))\n            drop(p300)\n        p300.flow_rate.aspirate = 94\n        p300.flow_rate.dispense = 94\n\n        # perform dilution\n        for i, factor in enumerate(factors):\n            for set in dil_sets:\n                pickup_p300('multi')\n                total_vol = sample_vol*(i+1)*factor\n                mix_vol = total_vol*0.8 if total_vol*0.8 <= 175 else 175\n                if i == 0:\n                    p300.mix(mix_reps, mix_vol, set[i][0])\n                else:\n                    print(sample_vol*(i+1))\n                    p300.transfer(sample_vol*(i+1), set[i-1][0].bottom(3),\n                                  set[i][0].bottom(3),\n                                  mix_after=(5, mix_vol),\n                                  new_tip='never')\n                drop(p300)\n\n        return int(len(factors)-1)\n\n    \"\"\" PART 1 \"\"\"\n    if prepare_standard:\n\n        # standard preparation\n        standard_prep(working_standard_1, assay_buffer_1,\n                      deepplate.columns()[0])\n\n    \"\"\" PART 2 \"\"\"\n\n    # sample normalization (TE or TR)\n    sample_1_final_ind = dilute(standard_type, all_samples, assay_buffer_1)\n\n    \"\"\" PART 3 \"\"\"\n\n    # transfer to final black plate\n    sources = [deepplate.rows_by_name()['A'][0]] + [\n        set[sample_1_final_ind][0] for set in all_samples]\n    for i, source in enumerate(sources):\n        dest_set = flatplate.rows()[0][i*3:(i+1)*3]\n        for dest in dest_set:\n            p300.pick_up_tip()\n            p300.transfer(final_transfer_vol, source.bottom(3), dest.bottom(3),\n                          mix_before=(mix_reps, 0.8*final_transfer_vol),\n                          new_tip='never')\n            drop(p300)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 24,
            "label": "number of samples",
            "name": "num_samples",
            "type": "float"
        },
        {
            "label": "reagent labware",
            "name": "reagent_labware",
            "options": [
                {
                    "label": "NEST 12 Reservoir 15ml",
                    "value": "nest_12_reservoir_15ml"
                },
                {
                    "label": "Opentrons 6 Tube Rack with Falcon 50 mL Conical",
                    "value": "opentrons_6_tuberack_falcon_50ml_conical"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 60.0,
            "label": "starting sample concentration (mg/ml)",
            "name": "starting_conc",
            "type": "float"
        },
        {
            "label": "prepare standard",
            "name": "prepare_standard",
            "options": [
                {
                    "label": "yes",
                    "value": true
                },
                {
                    "label": "no",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "standard in use (if necessary)",
            "name": "standard_type",
            "options": [
                {
                    "label": "TR (0.5ug/ml dilution)",
                    "value": 0.5
                },
                {
                    "label": "TE (2.5ug/ml dilution)",
                    "value": 2.5
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P1000-single GEN2 mount",
            "name": "p1000_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P300-multi GEN2 mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "final plate on 2",
            "share": false,
            "slot": "2",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "standard preparation plate on 5",
            "share": false,
            "slot": "5",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 1000 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_1000ul"
        },
        {
            "name": "standards and buffers on 8",
            "share": false,
            "slot": "8",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "sample tuberack on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Nick <protocols@opentrons.com>",
        "protocolName": "FluRibogreen Assay",
        "source": "Custom Protocol Request"
    },
    "modules": []
}