{
    "content": "# flake8: noqa\n\nfrom opentrons import protocol_api\n\n# metadata\nmetadata = {\n    'protocolName': 'Amplex Red Hydrogen Peroxide Assay',\n    'author': 'Opentrons',\n    'description': 'Protocol to measure hydrogen peroxide levels from THP-1 cells using the OT-2',\n    'apiLevel': '2.12'\n}\n\n# protocol run function\ndef run(protocol: protocol_api.ProtocolContext):\n\n    [NUM_SAMPLES, p300_mount, p20_mount] = get_values(  # noqa: F821\n    \"NUM_SAMPLES\", \"p300_mount\", \"p20_mount\")\n\n    def custom_mix(no_of_mix, p300, vol, well, top_height=25):\n        for i in range(no_of_mix):\n            p300.aspirate(vol, well.bottom())\n            p300.dispense(vol, well.bottom(top_height))\n\n    # lab ware\n    tiprack = protocol.load_labware('opentrons_96_filtertiprack_20ul', 10)\n    tiprack1 = protocol.load_labware('opentrons_96_tiprack_300ul', 4)\n    falcontubes = protocol.load_labware('opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical', 11)\n    tubes1 = protocol.load_labware('opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', 7)\n    tubes2 = protocol.load_labware('opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', 5)\n    temperature_module = protocol.load_module('temperature module', 3)\n    plate = temperature_module.load_labware('corning_96_wellplate_360ul_flat')\n\n    # pipettes\n    p300 = protocol.load_instrument(\n        'p300_single_gen2', mount=p300_mount, tip_racks=[tiprack1])\n    p20 = protocol.load_instrument(\n        'p20_single_gen2', mount=p20_mount, tip_racks=[tiprack])\n\n    # commands\n\n    # Dilution of 5X Reaction Buffer\n    p300.pick_up_tip()\n    for i in range(10):\n        p300.aspirate(200, falcontubes['A1'])\n        p300.dispense(200, falcontubes['A3'])\n    custom_mix(3, p300, 200, falcontubes['A3'])\n    p300.mix(2, 200, falcontubes['A3'])\n    p300.drop_tip()\n\n    # Preparation of 20mM working stock of H2O2\n    p300.pick_up_tip()\n    for i in range(4):\n        p300.aspirate(200, falcontubes['A3'])\n        p300.dispense(200, tubes1['A1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(177, falcontubes['A3'])\n    p300.dispense(177, tubes1['A1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(22.7, tubes1['D3'])\n    p300.dispense(22.7, tubes1['A1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(2, p300, 200, tubes1['A1'])\n    p300.mix(2, 200, tubes1['A1'])\n    p300.drop_tip()\n\n    # Preparation of Standard concentrations of H2O2\n    reaction_buffer = [150, 148.5, 147, 145.5, 144, 142.5, 135, 120]\n    dilution_wells = ['A2', 'A3', 'A4', 'A5', 'A6', 'B1', 'B2', 'B3']\n    p300.pick_up_tip()\n    for v, w in zip(reaction_buffer, dilution_wells):\n        p300.aspirate(v, falcontubes['A3'])\n        p300.dispense(v, tubes1[w])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    for i in range(4):\n        p300.aspirate(200, falcontubes['A3'])\n        p300.dispense(200, tubes1['B4'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(150, falcontubes['A3'])\n    p300.dispense(150, tubes1['B4'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    for i in range(3):\n        p300.aspirate(150, falcontubes['A3'])\n        p300.dispense(150, tubes1['B5'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    for i in range(2):\n        p300.aspirate(200, falcontubes['A3'])\n        p300.dispense(200, tubes1['B6'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(50, tubes1['A1'])\n    p300.dispense(50, tubes1['B4'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(2, p300, 200, tubes1['B4'])\n    p300.mix(2, 200, tubes1['B4'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(50, tubes1['B4'])\n    p300.dispense(50, tubes1['B5'])\n    custom_mix(2, p300, 200, tubes1['B5'])\n    p300.mix(2, 200, tubes1['B5'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(100, tubes1['B5'])\n    p300.dispense(100, tubes1['B6'])\n    custom_mix(2, p300, 200, tubes1['B6'])\n    p300.mix(2, 200, tubes1['B6'])\n    p300.drop_tip()\n\n    working_h2o2 = [1.5, 3, 4.5, 6, 7.5, 15, 20, 10]\n    concentration_wells = ['A3', 'A4', 'A5', 'A6', 'B1', 'B2', 'B3', 'B3']\n    p20.pick_up_tip()\n    for a, b in zip(working_h2o2, concentration_wells):\n        p20.aspirate(a, tubes1['B6'])\n        p20.dispense(a, tubes1[b])\n    p20.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['A3'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['A4'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['A5'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['A6'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['B1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['B2'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.mix(3, 150, tubes1['B3'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    for i in range(9):\n        p300.aspirate(200, falcontubes['A3'])\n        p300.dispense(200, falcontubes['B1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(140, falcontubes['A3'])\n    p300.dispense(140, falcontubes['B1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(40, tubes1['D4'])\n    p300.dispense(40, falcontubes['B1'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(20, tubes1['D5'])\n    p300.dispense(20, falcontubes['B1'])\n    custom_mix(3, p300, 200, falcontubes['B1'])\n    p300.mix(3, 200, falcontubes['B1'])\n    p300.drop_tip()\n\n    # Addition of standard H2O2 concentrations in first and four wells of third row of the 96 well plate\n    vol_h2o2 = 50\n    dest_wells = [*plate.rows()[0], *plate.rows()[2][:4]]\n    src_wells = [*tubes1.rows()[0][1:], *tubes1.rows()[1][:3]]\n    count = 0\n    for src in src_wells:\n        p300.pick_up_tip()\n        p300.flow_rate.aspirate = 92\n        p300.flow_rate.dispense = 70\n        p300.flow_rate.blow_out = 70\n        for loop in range(2):\n            p300.aspirate(vol_h2o2,src)\n            protocol.delay(0.5)\n            p300.move_to(src.bottom(35), speed=5)\n            p300.dispense(vol_h2o2, dest_wells[count])\n            protocol.delay(0.5)\n            p300.blow_out(dest_wells[count])\n            protocol.delay(0.6)\n            count = count+1\n        p300.drop_tip()\n\n    # Dilution of PMA stock and preparation of working concentrations of PMA\n    volume_pma = [90, 90]\n    pma_tubes = ['A2', 'A3']\n    p300.pick_up_tip()\n    for vp, pt in zip(volume_pma, pma_tubes):\n        p300.aspirate(vp, falcontubes['A3'])\n        p300.dispense(vp, tubes2[pt])\n    p300.drop_tip()\n\n    p20.pick_up_tip()\n    p20.aspirate(10, tubes2['A1'])\n    p20.dispense(10, tubes2['A2'])\n    p20.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(2, p300, 100, tubes2['A2'])\n    p300.mix(2, 100, tubes2['A2'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    p300.aspirate(10, tubes2['A2'])\n    p300.dispense(10, tubes2['A3'])\n    custom_mix(2, p300, 100, tubes2['A3'])\n    p300.mix(2, 100, tubes2['A3'])\n    p300.drop_tip()\n\n    working_pma = [200, 198, 195, 191, 187, 183, 175]\n    pma_wells = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'D1']\n    p300.pick_up_tip()\n    for wp, pw in zip(working_pma, pma_wells):\n        p300.aspirate(wp, falcontubes['A3'])\n        p300.dispense(wp, tubes1[pw])\n    p300.drop_tip()\n\n    pma1 = [200, 200, 200, 200, 200, 200, 200]\n    pma_wells = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'D1']\n    p300.pick_up_tip()\n    for p1, pw in zip(pma1, pma_wells):\n        p300.aspirate(p1, falcontubes['A3'])\n        p300.dispense(p1, tubes1[pw])\n    p300.drop_tip()\n\n    pma2 = [100, 100.38, 100.95, 100.9, 100.85, 100.8, 100.7]\n    pma_wells = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'D1']\n    p300.pick_up_tip()\n    for p2, pw in zip(pma2, pma_wells):\n        p300.aspirate(p2, falcontubes['A3'])\n        p300.dispense(p2, tubes1[pw])\n    p300.drop_tip()\n\n    pma3 = [1.62, 4.05, 8.1, 12.15, 16.2, 20, 4.3]\n    pma_wells1 = ['C2', 'C3', 'C4', 'C5', 'C6', 'D1', 'D1']\n    p20.pick_up_tip()\n    for p3, pw3 in zip(pma3, pma_wells1):\n        p20.aspirate(p3, tubes2['A3'])\n        p20.dispense(p3, tubes1[pw3])\n    p20.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(3, p300, 200, tubes1['C2'])\n    p300.mix(2, 200, tubes1['C2'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(3, p300, 200, tubes1['C3'])\n    p300.mix(2, 200, tubes1['C3'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(3, p300, 200, tubes1['C4'])\n    p300.mix(2, 200, tubes1['C4'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(3, p300, 200, tubes1['C5'])\n    p300.mix(2, 200, tubes1['C5'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(3, p300, 200, tubes1['C6'])\n    p300.mix(2, 200, tubes1['C6'])\n    p300.drop_tip()\n\n    p300.pick_up_tip()\n    custom_mix(3, p300, 200, tubes1['D1'])\n    p300.mix(2, 200, tubes1['D1'])\n    p300.drop_tip()\n\n    # Addition of various concentrations of PMA to wells containing cells\n    vol_pma = 50\n    dest_pma_wells = list(map(list, zip(plate.rows()[4][:7], plate.rows()[5][:7], plate.rows()[6][:7])))\n    src_pma_wells = [*tubes1.rows()[2], *tubes1.rows()[3][:1]]\n    for src, dest_3 in zip(src_pma_wells, dest_pma_wells):\n        p300.pick_up_tip()\n        p300.flow_rate.aspirate = 92\n        p300.flow_rate.dispense = 70\n        p300.flow_rate.blow_out = 70\n        for dest in dest_3:\n            p300.aspirate(vol_pma, src)\n            protocol.delay(0.5)\n            p300.move_to(src.bottom(35), speed=5)\n            p300.dispense(vol_pma, dest)\n            protocol.delay(0.5)\n            p300.blow_out(dest)\n            protocol.delay(0.6)\n        p300.drop_tip()\n\n    # Addition of working Amplex Red reagent to standard and sample wells\n    volume_reagent = 50\n    wells_a = plate.rows()[0]\n    wells_c = plate.rows()[2][0:4]\n    wells_e = plate.rows()[4][0:7]\n    wells_f = plate.rows()[5][0:7]\n    wells_g = plate.rows()[6][0:7]\n    dest = [*wells_a, *wells_c, *wells_e, *wells_f, *wells_g]\n    p300.pick_up_tip()\n    for well in dest:\n        p300.flow_rate.aspirate = 92\n        p300.flow_rate.dispense = 70\n        p300.flow_rate.blow_out = 70\n        p300.aspirate(volume_reagent, falcontubes['B1'])\n        protocol.delay(0.5)\n        p300.move_to(falcontubes['B1'].bottom(35), speed=5)\n        p300.dispense(volume_reagent, well.top(5))\n        protocol.delay(0.5)\n        p300.blow_out(well)\n        protocol.delay(0.6)\n    p300.drop_tip()\n\n    temperature_module.set_temperature(37)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 7,
            "label": "Number of Samples (5-12)",
            "name": "NUM_SAMPLES",
            "type": "int"
        },
        {
            "label": "P300 Single-Channel Mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 Single-Channel Mount",
            "name": "p20_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Corning 96 Well Plate 360 \u00b5L Flat on Temperature Module GEN1 on 3",
            "share": false,
            "slot": "3",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 1.5 mL Safe-Lock Snapcap on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 1.5 mL Safe-Lock Snapcap on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 10 Tube Rack with Falcon 4x50 mL, 6x15 mL Conical on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.12",
        "author": "Opentrons",
        "description": "Protocol to measure hydrogen peroxide levels from THP-1 cells using the OT-2",
        "protocolName": "Amplex Red Hydrogen Peroxide Assay"
    },
    "modules": [
        {
            "name": "TemperatureModuleContext at Temperature Module GEN1 on 3 lw Corning 96 Well Plate 360 \u00b5L Flat on Temperature Module GEN1 on 3",
            "share": false,
            "slot": "3",
            "type": "tempdeck"
        }
    ]
}