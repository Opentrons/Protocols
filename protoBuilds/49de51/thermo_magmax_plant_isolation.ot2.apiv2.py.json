{
    "content": "import math\nfrom opentrons.types import Point\n\nmetadata = {\n        'apiLevel': '2.5',\n        'protocolName': 'ThermoFisher MagMAX Plant DNA Isolation',\n        'author': 'Chaz <chaz@opentrons.com>',\n        'source': 'Custom Protocol Request'\n        }\n\n\ndef run(ctx):\n\n    num_samples = get_values(  # noqa: F821\n            'num_samples')[0]\n    plate = ctx.load_labware(\n        'nest_96_wellplate_2ml_deep', '6')\n    num_cols = math.ceil(num_samples / 8)\n\n    reagents = ctx.load_labware(\n            'nest_12_reservoir_15ml', '3')\n    liquid_trash = ctx.load_labware(\n            'nest_1_reservoir_195ml', '9').wells()[0]\n\n    # Lysis\n    lysis_buffer_b = reagents.columns()[0]\n    rnase_a = reagents.columns()[1]\n    lysis_buffer_a_wash_1 = ctx.load_labware(\n        'nest_1_reservoir_195ml', '5').wells()[0]\n    # Precipitation\n    precipitation_solution = reagents.columns()[2]\n    # Initial wash\n    beads = reagents.columns()[3]\n    ethanol_wash_2 = ctx.load_labware(\n        'nest_1_reservoir_195ml', '2').columns()[0]\n    elution_buffer = reagents.columns()[4]\n\n    # Modules\n    magdeck = ctx.load_module('magnetic module gen2', '1')\n    magdeck.disengage()\n    mag_plate = magdeck.load_labware('nest_96_wellplate_2ml_deep',\n                                     'deepwell plate')\n    tempdeck = ctx.load_module('Temperature Module Gen2', '4')\n    temp_plate = tempdeck.load_labware('nest_96_wellplate_2ml_deep')\n\n    # tipracks\n    tip_racks = [\n        ctx.load_labware(\n            'opentrons_96_filtertiprack_200ul',\n            x) for x in [\n            '7',\n            '8',\n            '10',\n            '11']]\n\n    # pipette\n    p300m = ctx.load_instrument(\n        'p300_multi_gen2', \"right\", tip_racks=tip_racks)\n\n    # define tip pickups\n    tip_count = 0\n    tip_max = len(tip_racks * 96)\n\n    def pick_up():\n        nonlocal tip_count\n        nonlocal tip_max\n        if tip_count == tip_max:\n            ctx.pause('Please refill tipracks before resuming.')\n            p300m.reset_tipracks()\n            tip_count = 0\n        tip_count += 8\n\n    def pick_up_plate():\n        for _ in range(num_cols):\n            pick_up()\n\n    plate_cols = plate.rows()[0][:num_cols]\n    mag_plate_cols = mag_plate.rows()[0][:num_cols]\n    temp_plate_cols = temp_plate.rows()[0][:num_cols]\n\n    # Initial Lysis\n    ctx.home()\n    tempdeck.set_temperature(65)\n\n    def initial_lysis(plate):\n        pick_up_plate()\n        [p300m.transfer(500, lysis_buffer_a_wash_1, col) for col in plate_cols]\n        pick_up_plate()\n        [p300m.transfer(70, lysis_buffer_b, col) for col in plate_cols]\n        pick_up_plate()\n        [p300m.transfer(20, rnase_a, col) for col in plate_cols]\n        ctx.home()\n    initial_lysis(plate)\n\n    # Precipitation\n    ctx.pause('Homogenize samples, then return plate tempdeck on robot.')\n    ctx.delay(600)\n    pick_up_plate()\n    [p300m.transfer(130, precipitation_solution, col)\n     for col in temp_plate_cols]\n    ctx.home()\n\n    # Initial wash\n    def magdeck_remove_supernatant():\n        pick_up_plate()\n        for i, col in enumerate(mag_plate_cols):\n            side = -1 if i % 2 == 0 else 1\n            loc = col.bottom(0.5).move(Point(x=side * 2))\n            p300m.pick_up_tip()\n            for _ in range(2):\n                p300m.move_to(col.center())\n                p300m.transfer(200, loc, liquid_trash, new_tip='never')\n                p300m.blow_out(liquid_trash)\n            p300m.drop_tip()\n\n    ctx.pause(\"\"\"Incubate on ice for 5 minutes, then return plate to deck.\n            Replace lysis buffer A with wash buffer 1.\"\"\")\n\n    def initial_wash(plate):\n        pick_up_plate()\n        [p300m.transfer(400, plate_cols[x], mag_plate_cols[x])\n         for x in range(0, 12)]\n        pick_up_plate()\n        [p300m.transfer(25, beads, col, mix_before=(3, 100))\n         for col in mag_plate_cols]\n        pick_up_plate()\n        [p300m.transfer(400, ethanol_wash_2, col, mix_after=(3, 200))\n         for col in mag_plate_cols]\n        magdeck.engage()\n        ctx.delay(300)\n        magdeck_remove_supernatant()\n        magdeck.disengage()\n        pick_up_plate()\n        [p300m.transfer(400, lysis_buffer_a_wash_1, col)\n         for col in mag_plate_cols]\n    initial_wash(plate)\n\n    # Final wash\n    ctx.pause(\"\"\"Vortex plate for 1 minute at 750 RPM,\n         then replace onto magdeck. Replace ethanol with wash buffer 2.\"\"\")\n    magdeck.engage()\n\n    def wash_2_function():\n        ctx.delay(120)\n        pick_up_plate()\n        [p300m.transfer(400, col, liquid_trash) for col in mag_plate_cols]\n        magdeck.disengage()\n        pick_up_plate()\n        [p300m.transfer(400, ethanol_wash_2, col) for col in mag_plate_cols]\n        # mix?\n        magdeck.engage()\n        ctx.delay(120)\n        magdeck_remove_supernatant()\n    wash_2_function()\n    wash_2_function()\n    ctx.delay(300)\n    magdeck.disengage()\n    pick_up_plate()\n    [p300m.transfer(150, elution_buffer, col) for col in mag_plate_cols]\n    ctx.home()\n\n    # Heat plate\n    tempdeck.set_temperature(70)\n    ctx.pause('Vortex plate, then return to tempdeck on robot')\n    ctx.delay(300)\n    # Elution\n    ctx.pause(\"\"\"Return plate to magdeck. Replace original\n             plate at position 6 with a new skirted plate\"\"\")\n\n    def elute(plate):\n        magdeck.engage()\n        ctx.delay(300)\n        pick_up_plate()\n        [p300m.transfer(400, temp_plate_cols[x], plate_cols[x])\n         for x in range(0, 12)]\n        ctx.home()\n    elute(plate)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "Number of Samples (1-96)",
            "name": "num_samples",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "deepwell plate on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 3",
            "share": false,
            "slot": "3",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on Temperature Module GEN2 on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 5",
            "share": false,
            "slot": "5",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on 6",
            "share": false,
            "slot": "6",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 9",
            "share": false,
            "slot": "9",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.5",
        "author": "Chaz <chaz@opentrons.com>",
        "protocolName": "ThermoFisher MagMAX Plant DNA Isolation",
        "source": "Custom Protocol Request"
    },
    "modules": []
}