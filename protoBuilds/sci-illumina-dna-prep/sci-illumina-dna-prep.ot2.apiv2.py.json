{
    "content": "from opentrons import protocol_api\nfrom opentrons import types\nimport inspect\n\nmetadata = {\n    'protocolName': 'Illumina DNA Prep 24x',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.9'\n    }\n\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{\n                                  \"n_samples\":24\n                                  }\n                                  \"\"\")\n    return [_all_values[n] for n in names]\n\n\ndef run(protocol: protocol_api.ProtocolContext):\n\n    [n_samples] = get_values(  # noqa: F821\n     \"n_samples\")\n\n    # labware\n    mag_block = protocol.load_module('magnetic module gen2', '1')\n    # Actually an Eppendorf 96 well, same dimensions\n    sample_plate_mag =\\\n        mag_block.load_labware('nest_96_wellplate_100ul_pcr_full_skirt')\n    deepwell = protocol.load_labware('nest_96_wellplate_2ml_deep', '2')\n    temp_block = protocol.load_module('temperature module gen2', '3')\n    reagent_plate = temp_block.load_labware(\n        'opentrons_96_aluminumblock_biorad_wellplate_200ul')\n    tiprack_20 = protocol.load_labware('opentrons_96_filtertiprack_20ul',  '4')\n    tiprack_200_1 = protocol.load_labware(\n        'opentrons_96_filtertiprack_200ul', '5')\n    tiprack_200_2 = protocol.load_labware(\n        'opentrons_96_filtertiprack_200ul', '6')\n    thermocycler = protocol.load_module('thermocycler module')\n    sample_plate_thermo = thermocycler.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt')\n    tiprack_200_3 = protocol.load_labware(\n        'opentrons_96_filtertiprack_200ul', '9')\n\n    # reagent - plate\n    Master_Tube_Tag = reagent_plate.wells_by_name()['A1']\n    TSB = reagent_plate.wells_by_name()['A2']\n    Master_Tube_PCR_1 = reagent_plate.wells_by_name()['A3']\n    Barcodes1 = reagent_plate.wells_by_name()['A7']\n    Barcodes2 = reagent_plate.wells_by_name()['A8']\n    Barcodes3 = reagent_plate.wells_by_name()['A9']\n\n    # reagent - Deepwell\n    AMPure = deepwell['A1']\n    EtOH_1 = deepwell['A2']\n    EtOH_2 = deepwell['A3']\n    EtOH_3 = deepwell['A4']\n    # RSB = deepwell['A6'] - unused\n    TWB_1 = deepwell['A8']\n    TWB_2 = deepwell['A9']\n    TWB_3 = deepwell['A10']\n    # Liquid_trash_2 = deepwell['A11'] - unused\n    Liquid_trash_1 = deepwell['A12']\n\n    # pipette\n    p300 = protocol.load_instrument(\n        'p300_multi_gen2', 'left',\n        tip_racks=[tiprack_200_1, tiprack_200_2, tiprack_200_3])\n    p20 = protocol.load_instrument(\n        'p20_multi_gen2', 'right', tip_racks=[tiprack_20])\n\n    # samples\n    src_file_path = inspect.getfile(lambda: None)\n    protocol.comment(src_file_path)\n    if n_samples == 8:\n        protocol.comment(\"There are 8 Samples\")\n        samplecolumns = 1\n        TWB_washtip_1 = tiprack_200_1['A3']\n        TWB_removetip_1 = tiprack_200_1['A4']\n        ETOH_washtip_1 = tiprack_200_1['A9']\n        ETOH_removetip_1 = tiprack_200_1['A10']\n    elif n_samples == 16:\n        protocol.comment(\"There are 16 Samples\")\n        samplecolumns = 2\n        TWB_washtip_1 = tiprack_200_1['A5']\n        TWB_washtip_2 = tiprack_200_1['A6']\n        TWB_removetip_1 = tiprack_200_1['A7']\n        TWB_removetip_2 = tiprack_200_1['A8']\n        ETOH_washtip_1 = tiprack_200_2['A5']\n        ETOH_washtip_2 = tiprack_200_2['A6']\n        ETOH_removetip_1 = tiprack_200_2['A7']\n        ETOH_removetip_2 = tiprack_200_2['A8']\n    elif n_samples == 24:\n        protocol.comment(\"There are 24 Samples\")\n        samplecolumns = 3\n        TWB_washtip_1 = tiprack_200_1['A7']\n        TWB_washtip_2 = tiprack_200_1['A8']\n        TWB_washtip_3 = tiprack_200_1['A9']\n        TWB_removetip_1 = tiprack_200_1['A10']\n        TWB_removetip_2 = tiprack_200_1['A11']\n        TWB_removetip_3 = tiprack_200_1['A12']\n        ETOH_washtip_1 = tiprack_200_3['A7']\n        ETOH_washtip_2 = tiprack_200_3['A8']\n        ETOH_washtip_3 = tiprack_200_3['A9']\n        ETOH_removetip_1 = tiprack_200_3['A10']\n        ETOH_removetip_2 = tiprack_200_3['A11']\n        ETOH_removetip_3 = tiprack_200_3['A12']\n    else:\n        protocol.pause(\"ERROR?\")\n\n    # offset\n    p300_offset_Res = 2\n    p300_offset_Thermo = 1\n    p300_offset_Mag = 0.70\n    p300_offset_Temp = 0.65\n\n    p20_offset_Thermo = 1\n    p20_offset_Mag = 0.75\n    p20_offset_Temp = 0.85\n\n    # positions\n    # UNUSED VARIABLES COMMENTED OUT\n    ###########################################################################\n    #  sample_plate_thermo on the Thermocycler\n    # A1_p20_bead_side = sample_plate_thermo['A1'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Thermo-5))  # Beads to the Right\n    # A1_p20_bead_top = sample_plate_thermo['A1'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Thermo+2))  # Beads to the Right\n    # A1_p20_bead_mid = sample_plate_thermo['A1'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Thermo-2))  # Beads to the Right\n    A1_p300_bead_side = sample_plate_thermo['A1'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Thermo-7.2))  # Beads to the Right\n    A1_p300_bead_top = sample_plate_thermo['A1'].center().move(types.Point(\n        x=1.30, y=0, z=p300_offset_Thermo-1))  # Beads to the Right\n    A1_p300_bead_mid = sample_plate_thermo['A1'].center().move(types.Point(\n        x=0.80, y=0, z=p300_offset_Thermo-4))  # Beads to the Right\n    A1_p300_loc1 = sample_plate_thermo['A1'].center().move(types.Point(\n        x=1.3*0.8, y=1.3*0.8, z=p300_offset_Thermo-4))  # Beads to the Right\n    A1_p300_loc2 = sample_plate_thermo['A1'].center().move(types.Point(\n        x=1.3, y=0, z=p300_offset_Thermo-4))  # Beads to the Right\n    A1_p300_loc3 = sample_plate_thermo['A1'].center().move(types.Point(\n        x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Thermo-4))  # Beads to the Right\n    # A3_p20_bead_side = sample_plate_thermo['A3'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Thermo-5))  # Beads to the Right\n    # A3_p20_bead_top = sample_plate_thermo['A3'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Thermo+2))  # Beads to the Right\n    # A3_p20_bead_mid = sample_plate_thermo['A3'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Thermo-2))  # Beads to the Right\n    A3_p300_bead_side = sample_plate_thermo['A3'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Thermo-7.2))  # Beads to the Right\n    A3_p300_bead_top = sample_plate_thermo['A3'].center().move(types.Point(\n        x=1.30, y=0, z=p300_offset_Thermo-1))  # Beads to the Right\n    A3_p300_bead_mid = sample_plate_thermo['A3'].center().move(types.Point(\n        x=0.80, y=0, z=p300_offset_Thermo-4))  # Beads to the Right\n    A3_p300_loc1 = sample_plate_thermo['A3'].center().move(types.Point(\n        x=1.3*0.8, y=1.3*0.8, z=p300_offset_Thermo-4))  # Beads to the Right\n    A3_p300_loc2 = sample_plate_thermo['A3'].center().move(types.Point(\n        x=1.3, y=0, z=p300_offset_Thermo-4))  # Beads to the Right\n    A3_p300_loc3 = sample_plate_thermo['A3'].center().move(types.Point(\n        x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Thermo-4))  # Beads to the Right\n    # A5_p20_bead_side = sample_plate_thermo['A5'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Thermo-5))  # Beads to the Right\n    # A5_p20_bead_top = sample_plate_thermo['A5'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Thermo+2))  # Beads to the Right\n    # A5_p20_bead_mid = sample_plate_thermo['A5'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Thermo-2))  # Beads to the Right\n    A5_p300_bead_side = sample_plate_thermo['A5'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Thermo-7.2))  # Beads to the Right\n    A5_p300_bead_top = sample_plate_thermo['A5'].center().move(types.Point(\n        x=1.30, y=0, z=p300_offset_Thermo-1))  # Beads to the Right\n    A5_p300_bead_mid = sample_plate_thermo['A5'].center().move(types.Point(\n        x=0.80, y=0, z=p300_offset_Thermo-4))  # Beads to the Right\n    A5_p300_loc1 = sample_plate_thermo['A5'].center().move(types.Point(\n        x=1.3*0.8, y=1.3*0.8, z=p300_offset_Thermo-4))  # Beads to the Right\n    A5_p300_loc2 = sample_plate_thermo['A5'].center().move(types.Point(\n        x=1.3, y=0, z=p300_offset_Thermo-4))  # Beads to the Right\n    A5_p300_loc3 = sample_plate_thermo['A5'].center().move(types.Point(\n        x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Thermo-4))  # Beads to the Right\n    ###########################################################################\n    bypass = protocol.deck.position_for('11').move(\n        types.Point(x=70, y=80, z=130))\n\n    # commands\n    protocol.comment(\"SETTING THERMO and TEMP BLOCK Temperature\")\n    thermocycler.set_block_temperature(4)\n    thermocycler.set_lid_temperature(100)\n    temp_block.set_temperature(4)\n\n    thermocycler.open_lid()\n    protocol.pause(\"Ready\")\n\n    protocol.comment('==============================================')\n    protocol.comment('--> TAGMENTATION')\n    protocol.comment('==============================================')\n\n    protocol.comment('--> Adding Tagmentation Mix ')\n    TagVol = 20\n    TagMixRep = 10\n    TagMixVol = 40\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A1'\n        p300.pick_up_tip()\n        p300.aspirate(TagVol, Master_Tube_Tag.bottom(\n            z=p300_offset_Temp), rate=0.25)\n        p300.dispense(TagVol, sample_plate_thermo[X].bottom(\n            z=p300_offset_Thermo), rate=0.25)\n        p300.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n        p300.mix(TagMixRep, TagMixVol)\n        p300.blow_out(sample_plate_thermo[X].top(z=-5))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        p300.pick_up_tip()\n        p300.aspirate(TagVol, Master_Tube_Tag.bottom(\n            z=p300_offset_Temp), rate=0.25)\n        p300.dispense(TagVol, sample_plate_thermo[X].bottom(\n            z=p300_offset_Thermo), rate=0.25)\n        p300.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n        p300.mix(TagMixRep, TagMixVol)\n        p300.blow_out(sample_plate_thermo[X].top(z=-5))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        p300.pick_up_tip()\n        p300.aspirate(TagVol, Master_Tube_Tag.bottom(\n            z=p300_offset_Temp), rate=0.25)\n        p300.dispense(TagVol, sample_plate_thermo[X].bottom(\n            z=p300_offset_Thermo), rate=0.25)\n        p300.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n        p300.mix(TagMixRep, TagMixVol)\n        p300.blow_out(sample_plate_thermo[X].top(z=-5))\n        p300.move_to(bypass)\n        p300.drop_tip()\n\n    ###########################################################################\n    protocol.pause('Seal, Run TAG (15min)')\n\n    thermocycler.close_lid()\n    profile_TAG = [\n        {'temperature': 55, 'hold_time_minutes': 15}\n        ]\n    thermocycler.execute_profile(\n        steps=profile_TAG, repetitions=1, block_max_volume=50)\n    thermocycler.set_block_temperature(10)\n    ###########################################################################\n    thermocycler.open_lid()\n    protocol.pause(\"Remove Seal\")\n\n    protocol.comment('--> Adding Tagmentation Stop Buffer')\n    TSBVol = 20\n    TSBMixRep = 10\n    TSBMixVol = 20\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A1'\n        p20.pick_up_tip()\n        p20.aspirate(TSBVol, TSB.bottom(z=p20_offset_Temp))\n        p20.dispense(TSBVol, sample_plate_thermo[X].bottom(\n            z=p20_offset_Thermo))\n        p20.mix(TSBMixRep, TSBMixVol)\n        p20.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        p20.pick_up_tip()\n        p20.aspirate(TSBVol, TSB.bottom(z=p20_offset_Temp))\n        p20.dispense(TSBVol, sample_plate_thermo[X].bottom(\n            z=p20_offset_Thermo))\n        p20.mix(TSBMixRep, TSBMixVol)\n        p20.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        p20.pick_up_tip()\n        p20.aspirate(TSBVol, TSB.bottom(z=p20_offset_Temp))\n        p20.dispense(TSBVol, sample_plate_thermo[X].bottom(\n            z=p20_offset_Thermo))\n        p20.mix(TSBMixRep, TSBMixVol)\n        p20.drop_tip()\n\n    ###########################################################################\n    protocol.pause('Seal, Run PTC (15min)')\n\n    thermocycler.close_lid()\n    profile_PTC = [\n        {'temperature': 37, 'hold_time_minutes': 15}\n        ]\n    thermocycler.execute_profile(\n        steps=profile_PTC, repetitions=1, block_max_volume=60)\n    thermocycler.set_block_temperature(10)\n    ###########################################################################\n    thermocycler.open_lid()\n    protocol.pause(\"Remove Seal\")\n\n    protocol.comment('==============================================')\n    protocol.comment('--> TAGMENTATION WASH')\n    protocol.comment('==============================================')\n\n    protocol.pause(\"PLACE sample_plate on MAGNET\")\n\n    # positions\n    # UNUSED VARIABLES COMMENTED OUT\n    ###########################################################################\n    #  sample_plate_mag on the Mag Block\n    # A1_p20_bead_top, side and mid are unused variables\n    # A1_p20_bead_side = sample_plate_mag['A1'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Mag-5)) #Beads to the Right\n    # A1_p20_bead_top = sample_plate_mag['A1'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Mag+2)) #Beads to the Right\n    # A1_p20_bead_mid = sample_plate_mag['A1'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Mag-2)) #Beads to the Right\n    A1_p300_bead_side = sample_plate_mag['A1'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Mag-7.2))  # Beads to the Right\n    A1_p300_bead_top = sample_plate_mag['A1'].center().move(types.Point(\n        x=1.30, y=0, z=p300_offset_Mag-1))  # Beads to the Right\n    A1_p300_bead_mid = sample_plate_mag['A1'].center().move(types.Point(\n        x=0.80, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    A1_p300_loc1 = sample_plate_mag['A1'].center().move(types.Point(\n        x=1.3*0.8, y=1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    A1_p300_loc2 = sample_plate_mag['A1'].center().move(types.Point(\n        x=1.3, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    A1_p300_loc3 = sample_plate_mag['A1'].center().move(types.Point(\n        x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A3_p20_bead_side = sample_plate_mag['A3'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Mag-5)) #Beads to the Right\n    # A3_p20_bead_top = sample_plate_mag['A3'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Mag+2)) #Beads to the Right\n    # A3_p20_bead_mid = sample_plate_mag['A3'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Mag-2)) #Beads to the Right\n    A3_p300_bead_side = sample_plate_mag['A3'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Mag-7.2))  # Beads to the Right\n    A3_p300_bead_top = sample_plate_mag['A3'].center().move(types.Point(\n        x=1.30, y=0, z=p300_offset_Mag-1))  # Beads to the Right\n    A3_p300_bead_mid = sample_plate_mag['A3'].center().move(types.Point(\n        x=0.80, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    A3_p300_loc1 = sample_plate_mag['A3'].center().move(types.Point(\n        x=1.3*0.8, y=1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    A3_p300_loc2 = sample_plate_mag['A3'].center().move(types.Point(\n        x=1.3, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    A3_p300_loc3 = sample_plate_mag['A3'].center().move(types.Point(\n        x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A5_p20_bead_side = sample_plate_mag['A5'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Mag-5))  # Beads to the Right\n    # A5_p20_bead_top = sample_plate_mag['A5'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Mag+2))  # Beads to the Right\n    # A5_p20_bead_mid = sample_plate_mag['A5'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Mag-2))  # Beads to the Right\n    A5_p300_bead_side = sample_plate_mag['A5'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Mag-7.2))  # Beads to the Right\n    A5_p300_bead_top = sample_plate_mag['A5'].center().move(types.Point(\n        x=1.30, y=0, z=p300_offset_Mag-1))  # Beads to the Right\n    A5_p300_bead_mid = sample_plate_mag['A5'].center().move(types.Point(\n        x=0.80, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    A5_p300_loc1 = sample_plate_mag['A5'].center().move(types.Point(\n        x=1.3*0.8, y=1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    A5_p300_loc2 = sample_plate_mag['A5'].center().move(types.Point(\n        x=1.3, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    A5_p300_loc3 = sample_plate_mag['A5'].center().move(types.Point(\n        x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A7_p20_bead_side = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Mag-5))  # Beads to the Right\n    # A7_p20_bead_top = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Mag+2))  # Beads to the Right\n    # A7_p20_bead_mid = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Mag-2))  # Beads to the Right\n    A7_p300_bead_side = sample_plate_mag['A7'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Mag-7.2))  # Beads to the Right\n    # A7_p300_bead_top = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=1.30, y=0, z=p300_offset_Mag-1))  # Beads to the Right\n    # A7_p300_bead_mid = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=0.80, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    # A7_p300_loc1 = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=1.3*0.8, y=1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A7_p300_loc2 = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=1.3, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    # A7_p300_loc3 = sample_plate_mag['A7'].center().move(types.Point(\n    #    x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A9_p20_bead_side = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Mag-5))  # Beads to the Right\n    # A9_p20_bead_top = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Mag+2))  # Beads to the Right\n    #     A9_p20_bead_mid = sample_plate_mag['A9'].center().move(types.Point(\n    #        x=1, y=0, z=p20_offset_Mag-2))  # Beads to the Right\n    A9_p300_bead_side = sample_plate_mag['A9'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Mag-7.2))  # Beads to the Right\n    # A9_p300_bead_top = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=1.30, y=0, z=p300_offset_Mag-1))  # Beads to the Right\n    # A9_p300_bead_mid = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=0.80, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    # A9_p300_loc1 = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=1.3*0.8, y=1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A9_p300_loc2 = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=1.3, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    # A9_p300_loc3 = sample_plate_mag['A9'].center().move(types.Point(\n    #    x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A11_p20_bead_side = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=-1.8*0.50, y=0, z=p20_offset_Mag-5))  # Beads to the Right\n    # A11_p20_bead_top = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=1.5, y=0, z=p20_offset_Mag+2))  # Beads to the Right\n    # A11_p20_bead_mid = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=1, y=0, z=p20_offset_Mag-2))  # Beads to the Right\n    A11_p300_bead_side = sample_plate_mag['A11'].center().move(types.Point(\n        x=-0.50, y=0, z=p300_offset_Mag-7.2))  # Beads to the Right\n    # A11_p300_bead_top = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=1.30, y=0, z=p300_offset_Mag-1))  # Beads to the Right\n    # A11_p300_bead_mid = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=0.80, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    # A11_p300_loc1 = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=1.3*0.8, y=1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    # A11_p300_loc2 = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=1.3, y=0, z=p300_offset_Mag-4))  # Beads to the Right\n    # A11_p300_loc3 = sample_plate_mag['A11'].center().move(types.Point(\n    #    x=1.3*0.8, y=-1.3*0.8, z=p300_offset_Mag-4))  # Beads to the Right\n    ###########################################################################\n    protocol.comment('MAGNET ENGAGE')\n    mag_block.engage(height_from_base=17)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=14)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=10)\n    protocol.delay(minutes=1)\n\n    protocol.comment('--> Removing Supernatant')\n    RemoveSup = 75\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A1'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(RemoveSup-20, rate=0.25)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_bead_side)\n        if X == 'A3':\n            p300.move_to(A3_p300_bead_side)\n        if X == 'A5':\n            p300.move_to(A5_p300_bead_side)\n        protocol.delay(minutes=0.1)\n        p300.aspirate(20, rate=0.2)\n        p300.move_to(sample_plate_mag[X].top(z=2))\n        p300.default_speed = 400\n        p300.dispense(200, Liquid_trash_1)\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(RemoveSup-20, rate=0.25)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_bead_side)\n        if X == 'A3':\n            p300.move_to(A3_p300_bead_side)\n        if X == 'A5':\n            p300.move_to(A5_p300_bead_side)\n        protocol.delay(minutes=0.1)\n        p300.aspirate(20, rate=0.2)\n        p300.move_to(sample_plate_mag[X].top(z=2))\n        p300.default_speed = 400\n        p300.dispense(200, Liquid_trash_1)\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(RemoveSup-20, rate=0.25)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_bead_side)\n        if X == 'A3':\n            p300.move_to(A3_p300_bead_side)\n        if X == 'A5':\n            p300.move_to(A5_p300_bead_side)\n        protocol.delay(minutes=0.1)\n        p300.aspirate(20, rate=0.2)\n        p300.move_to(sample_plate_mag[X].top(z=2))\n        p300.default_speed = 400\n        p300.dispense(200, Liquid_trash_1)\n        p300.move_to(bypass)\n        p300.drop_tip()\n\n    protocol.comment('MAGNET DISENGAGE')\n    mag_block.disengage()\n\n    protocol.comment('--> Repeating 3 washes')\n    washreps = 3\n    for wash in range(washreps):\n        protocol.comment('--> TWB Wash #'+str(wash+1))\n        TWBMixRep = 15\n        TWBMixVol = 70\n        if samplecolumns >= 1:  # -----------------------------------------\n            X = 'A1'\n            p300.pick_up_tip(TWB_washtip_1)\n            p300.aspirate(100, TWB_1.bottom(z=p300_offset_Res))\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(100, rate=0.75)\n            p300.default_speed = 5\n            reps = 4\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(100)\n                if X == 'A1':\n                    p300.move_to(A1_p300_bead_top)\n                if X == 'A3':\n                    p300.move_to(A3_p300_bead_top)\n                if X == 'A5':\n                    p300.move_to(A5_p300_bead_top)\n                p300.dispense(100, rate=0.75)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_mid)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_mid)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_mid)\n            p300.mix(TWBMixRep, TWBMixVol)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(TWBMixRep, TWBMixVol)\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            protocol.pause(\"TIP CHECK - once per wash\")\n            p300.return_tip()\n        if samplecolumns >= 2:  # --------------------------------------------\n            X = 'A3'\n            p300.pick_up_tip(TWB_washtip_2)\n            p300.aspirate(100, TWB_2.bottom(z=p300_offset_Res))\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(100, rate=0.75)\n            p300.default_speed = 5\n            reps = 4\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(100)\n                if X == 'A1':\n                    p300.move_to(A1_p300_bead_top)\n                if X == 'A3':\n                    p300.move_to(A3_p300_bead_top)\n                if X == 'A5':\n                    p300.move_to(A5_p300_bead_top)\n                p300.dispense(100, rate=0.75)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_mid)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_mid)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_mid)\n            p300.mix(TWBMixRep, TWBMixVol)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(TWBMixRep, TWBMixVol)\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            p300.return_tip()\n        if samplecolumns >= 3:  # ---------------------------------------------\n            X = 'A5'\n            p300.pick_up_tip(TWB_washtip_3)\n            p300.aspirate(100, TWB_3.bottom(z=p300_offset_Res))\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(100, rate=0.75)\n            p300.default_speed = 5\n            reps = 4\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(100)\n                if X == 'A1':\n                    p300.move_to(A1_p300_bead_top)\n                if X == 'A3':\n                    p300.move_to(A3_p300_bead_top)\n                if X == 'A5':\n                    p300.move_to(A5_p300_bead_top)\n                p300.dispense(100, rate=0.75)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_mid)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_mid)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_mid)\n            p300.mix(TWBMixRep, TWBMixVol)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(TWBMixRep, TWBMixVol)\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            p300.return_tip()\n\n        protocol.comment('MAGNET ENGAGE')\n        mag_block.engage(height_from_base=17)\n        protocol.delay(minutes=1)\n        mag_block.engage(height_from_base=14)\n        protocol.delay(minutes=1)\n        mag_block.engage(height_from_base=10)\n        protocol.delay(minutes=1)\n\n        protocol.comment('--> Remove TWB Wash #'+str(wash+1))\n        if samplecolumns >= 1:  # --------------------------------------------\n            X = 'A1'\n            p300.pick_up_tip(TWB_removetip_1)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(75, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_side)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_side)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash_1)\n            p300.move_to(bypass)\n            protocol.pause(\"TIP CHECK - once per wash\")\n            p300.return_tip()\n        if samplecolumns >= 2:  # --------------------------------------------\n            X = 'A3'\n            p300.pick_up_tip(TWB_removetip_2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(75, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_side)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_side)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash_1)\n            p300.move_to(bypass)\n            p300.return_tip()\n        if samplecolumns >= 3:  # --------------------------------------------\n            X = 'A5'\n            p300.pick_up_tip(TWB_removetip_3)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(75, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_side)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_side)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash_1)\n            p300.move_to(bypass)\n            p300.return_tip()\n\n        protocol.comment('MAGNET DISENGAGE')\n        mag_block.disengage()\n        wash += 1\n\n    protocol.comment('MAGNET ENGAGE')\n    mag_block.engage(height_from_base=10)\n\n    protocol.comment('==============================================')\n    protocol.comment('--> AMPLIFICATION')\n    protocol.comment('==============================================')\n\n    protocol.comment('--> Removing Residual Supernatant')\n    if samplecolumns >= 1:  # ------------------------------------------------\n        X = 'A1'\n        p20.pick_up_tip()\n        p20.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p20.aspirate(20, rate=0.25)\n        p20.move_to(bypass)\n        p20.drop_tip()\n    if samplecolumns >= 2:  # ------------------------------------------------\n        X = 'A3'\n        p20.pick_up_tip()\n        p20.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p20.aspirate(20, rate=0.25)\n        p20.move_to(bypass)\n        p20.drop_tip()\n    if samplecolumns >= 3:  # ------------------------------------------------\n        X = 'A5'\n        p20.pick_up_tip()\n        p20.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p20.aspirate(20, rate=0.25)\n        p20.move_to(bypass)\n        p20.drop_tip()\n\n    mag_block.engage(height_from_base=6)\n    protocol.delay(minutes=0.5)\n\n    protocol.comment('MAGNET DISENGAGE')\n    mag_block.disengage()\n\n    protocol.comment('ADDING Master_Tube_PCR')\n    PCRVol = 40\n    PCRMixRep = 5\n    PCRMixVol = 30\n    if samplecolumns >= 1:  # ------------------------------------------------\n        X = 'A1'\n        p300.pick_up_tip()\n        p300.aspirate(PCRVol, Master_Tube_PCR_1.bottom(p300_offset_Temp))\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc3)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc3)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc3)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        reps = 5\n        for x in range(reps):\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(PCRVol, rate=0.5)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(PCRVol, rate=1)\n        reps = 3\n        for x in range(reps):\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc1)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc1)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc1)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc3)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc3)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc3)\n            p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n        p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag[X].top())\n        protocol.delay(seconds=0.5)\n        p300.move_to(sample_plate_mag[X].center())\n        p300.default_speed = 400\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        p300.pick_up_tip()\n        p300.aspirate(PCRVol, Master_Tube_PCR_1.bottom(p300_offset_Temp))\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc3)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc3)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc3)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        reps = 5\n        for x in range(reps):\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(PCRVol, rate=0.5)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(PCRVol, rate=1)\n        reps = 3\n        for x in range(reps):\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc1)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc1)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc1)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc3)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc3)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc3)\n            p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n        p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag[X].top())\n        protocol.delay(seconds=0.5)\n        p300.move_to(sample_plate_mag[X].center())\n        p300.default_speed = 400\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        p300.pick_up_tip()\n        p300.aspirate(PCRVol, Master_Tube_PCR_1.bottom(p300_offset_Temp))\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc3)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc3)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc3)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        reps = 5\n        for x in range(reps):\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(PCRVol, rate=0.5)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(PCRVol, rate=1)\n        reps = 3\n        for x in range(reps):\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc1)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc1)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc1)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc3)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc3)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc3)\n            p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n        p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag[X].top())\n        protocol.delay(seconds=0.5)\n        p300.move_to(sample_plate_mag[X].center())\n        p300.default_speed = 400\n        p300.drop_tip()\n\n    protocol.comment('--> Adding Barcodes')\n    BarcodeVol = 10\n    BarcodeMixRep = 10\n    BarcodeMixVol = 10\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A1'\n        p20.pick_up_tip()\n        p20.aspirate(BarcodeVol, Barcodes1)\n        p20.dispense(BarcodeVol, sample_plate_mag[X].bottom(z=p20_offset_Mag))\n        p20.mix(BarcodeMixRep, BarcodeMixVol)\n        p20.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        p20.pick_up_tip()\n        p20.aspirate(BarcodeVol, Barcodes2)\n        p20.dispense(BarcodeVol, sample_plate_mag[X].bottom(z=p20_offset_Mag))\n        p20.mix(BarcodeMixRep, BarcodeMixVol)\n        p20.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        p20.pick_up_tip()\n        p20.aspirate(BarcodeVol, Barcodes3)\n        p20.dispense(BarcodeVol, sample_plate_mag[X].bottom(z=p20_offset_Mag))\n        p20.mix(BarcodeMixRep, BarcodeMixVol)\n        p20.drop_tip()\n\n    protocol.pause(\"PLACE sample_plate on THERMO\")\n\n    ###########################################################################\n    protocol.pause('Seal, Run PCR (25min)')\n\n    thermocycler.close_lid()\n    profile_PCR_1 = [\n        {'temperature': 68, 'hold_time_minutes': 3},\n        {'temperature': 98, 'hold_time_minutes': 3}\n        ]\n    thermocycler.execute_profile(\n        steps=profile_PCR_1, repetitions=1, block_max_volume=50)\n    profile_PCR_2 = [\n        {'temperature': 98, 'hold_time_seconds': 45},\n        {'temperature': 62, 'hold_time_seconds': 30},\n        {'temperature': 68, 'hold_time_minutes': 2}\n        ]\n    thermocycler.execute_profile(\n        steps=profile_PCR_2, repetitions=5, block_max_volume=50)\n    profile_PCR_3 = [\n        {'temperature': 68, 'hold_time_minutes': 1}\n        ]\n    thermocycler.execute_profile(\n        steps=profile_PCR_3, repetitions=1, block_max_volume=50)\n    thermocycler.set_block_temperature(4)\n    ###########################################################################\n    thermocycler.open_lid()\n    protocol.pause(\"Remove Seal\")\n\n    protocol.comment('==============================================')\n    protocol.comment('--> CLEANUP')\n    protocol.comment('==============================================')\n\n    protocol.pause(\"PLACE sample_plate on MAGNET\")\n\n    protocol.comment('MAGNET ENGAGE')\n    mag_block.engage(height_from_base=17)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=14)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=10)\n    protocol.delay(minutes=1)\n\n    protocol.comment('--> Transferring Supernatant')\n    TransferSup = 45\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A1'\n        Y = 'A7'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(TransferSup, rate=0.25)\n        p300.dispense(\n            TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        Y = 'A9'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(TransferSup, rate=0.25)\n        p300.dispense(\n            TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        Y = 'A11'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(TransferSup, rate=0.25)\n        p300.dispense(\n            TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n        p300.move_to(bypass)\n        p300.drop_tip()\n\n    protocol.comment('MAGNET DISENGAGE')\n    mag_block.disengage()\n\n    protocol.comment('--> ADDING AMPure')\n    AMPureVol = 81\n    AMPureMixRep = 50\n    AMPureMixVol = 126\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A7'\n        p300.pick_up_tip()\n        p300.mix(10, AMPureVol+10, AMPure)\n        p300.aspirate(81, AMPure, rate=0.25)\n        p300.dispense(\n            81, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n        p300.mix(AMPureMixRep, AMPureMixVol)\n        p300.blow_out(sample_plate_mag[X].top(z=-5))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A9'\n        p300.pick_up_tip()\n        p300.mix(3, AMPureVol+10, AMPure)\n        p300.aspirate(81, AMPure, rate=0.25)\n        p300.dispense(\n            81, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n        p300.mix(AMPureMixRep, AMPureMixVol)\n        p300.blow_out(sample_plate_mag[X].top(z=-5))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A11'\n        p300.pick_up_tip()\n        p300.mix(3, AMPureVol+10, AMPure)\n        p300.aspirate(81, AMPure, rate=0.25)\n        p300.dispense(\n            81, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n        p300.mix(AMPureMixRep, AMPureMixVol)\n        p300.blow_out(sample_plate_mag[X].top(z=-5))\n        p300.move_to(bypass)\n        p300.drop_tip()\n\n    protocol.delay(minutes=5)\n\n    protocol.comment('MAGNET ENGAGE')\n    mag_block.engage(height_from_base=17)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=15)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=14)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=12)\n    protocol.delay(minutes=1)\n    mag_block.engage(height_from_base=10)\n    protocol.delay(minutes=1)\n\n    protocol.comment('--> Removing Supernatant')\n    RemoveSup = 120\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A7'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(RemoveSup-20, rate=0.25)\n        p300.default_speed = 5\n        if X == 'A7':\n            p300.move_to(A7_p300_bead_side)\n        if X == 'A9':\n            p300.move_to(A9_p300_bead_side)\n        if X == 'A11':\n            p300.move_to(A11_p300_bead_side)\n        protocol.delay(minutes=0.1)\n        p300.aspirate(20, rate=0.2)\n        p300.move_to(sample_plate_mag[X].top(z=2))\n        p300.default_speed = 400\n        p300.dispense(200, Liquid_trash_1)\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A9'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(RemoveSup-20, rate=0.25)\n        p300.default_speed = 5\n        if X == 'A7':\n            p300.move_to(A7_p300_bead_side)\n        if X == 'A9':\n            p300.move_to(A9_p300_bead_side)\n        if X == 'A11':\n            p300.move_to(A11_p300_bead_side)\n        protocol.delay(minutes=0.1)\n        p300.aspirate(20, rate=0.2)\n        p300.move_to(sample_plate_mag[X].top(z=2))\n        p300.default_speed = 400\n        p300.dispense(200, Liquid_trash_1)\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A11'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(RemoveSup-20, rate=0.25)\n        p300.default_speed = 5\n        if X == 'A7':\n            p300.move_to(A7_p300_bead_side)\n        if X == 'A9':\n            p300.move_to(A9_p300_bead_side)\n        if X == 'A11':\n            p300.move_to(A11_p300_bead_side)\n        protocol.delay(minutes=0.1)\n        p300.aspirate(20, rate=0.2)\n        p300.move_to(sample_plate_mag[X].top(z=2))\n        p300.default_speed = 400\n        p300.dispense(200, Liquid_trash_1)\n        p300.move_to(bypass)\n        p300.drop_tip()\n\n    protocol.comment('--> Repeating 2 washes')\n    washreps = 2\n    for wash in range(washreps):\n        protocol.comment('--> ETOH Wash #'+str(wash+1))\n        ETOHMaxVol = 150\n        if samplecolumns >= 1:  # --------------------------------------------\n            X = 'A1'\n            p300.pick_up_tip(ETOH_washtip_1)\n            p300.aspirate(ETOHMaxVol, EtOH_1)\n            if X == 'A7':\n                p300.move_to(A7_p300_bead_side)\n            if X == 'A9':\n                p300.move_to(A9_p300_bead_side)\n            if X == 'A11':\n                p300.move_to(A11_p300_bead_side)\n            p300.dispense(ETOHMaxVol-50, rate=0.5)\n            p300.move_to(sample_plate_mag[X].center())\n            p300.dispense(50, rate=0.5)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 5\n            p300.move_to(sample_plate_mag[X].top(z=-2))\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            protocol.pause(\"TIP CHECK - once per wash\")\n            p300.return_tip()\n        if samplecolumns >= 2:  # --------------------------------------------\n            X = 'A9'\n            p300.pick_up_tip(ETOH_washtip_2)\n            p300.aspirate(ETOHMaxVol, EtOH_2)\n            if X == 'A7':\n                p300.move_to(A7_p300_bead_side)\n            if X == 'A9':\n                p300.move_to(A9_p300_bead_side)\n            if X == 'A11':\n                p300.move_to(A11_p300_bead_side)\n            p300.dispense(ETOHMaxVol-50, rate=0.5)\n            p300.move_to(sample_plate_mag[X].center())\n            p300.dispense(50, rate=0.5)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 5\n            p300.move_to(sample_plate_mag[X].top(z=-2))\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            p300.return_tip()\n        if samplecolumns >= 3:  # ---------------------------------------------\n            X = 'A11'\n            p300.pick_up_tip(ETOH_washtip_3)\n            p300.aspirate(ETOHMaxVol, EtOH_3)\n            if X == 'A7':\n                p300.move_to(A7_p300_bead_side)\n            if X == 'A9':\n                p300.move_to(A9_p300_bead_side)\n            if X == 'A11':\n                p300.move_to(A11_p300_bead_side)\n            p300.dispense(ETOHMaxVol-50, rate=0.5)\n            p300.move_to(sample_plate_mag[X].center())\n            p300.dispense(50, rate=0.5)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 5\n            p300.move_to(sample_plate_mag[X].top(z=-2))\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            p300.return_tip()\n\n        protocol.delay(minutes=0.5)\n\n        protocol.comment('--> Remove ETOH Wash #'+str(wash+1))\n        if samplecolumns >= 1:  # ---------------------------------------------\n            X = 'A7'\n            p300.pick_up_tip(ETOH_removetip_1)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(ETOHMaxVol, rate=0.25)\n            p300.dispense(ETOHMaxVol, Liquid_trash_1)\n            protocol.pause(\"TIP CHECK - once per wash\")\n            p300.move_to(bypass)\n            p300.return_tip()\n        if samplecolumns >= 2:  # ---------------------------------------------\n            X = 'A9'\n            p300.pick_up_tip(ETOH_removetip_2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(ETOHMaxVol, rate=0.25)\n            p300.dispense(ETOHMaxVol, Liquid_trash_1)\n            p300.move_to(bypass)\n            p300.return_tip()\n        if samplecolumns >= 3:  # ---------------------------------------------\n            X = 'A11'\n            p300.pick_up_tip(ETOH_removetip_3)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(ETOHMaxVol, rate=0.25)\n            p300.dispense(ETOHMaxVol, Liquid_trash_1)\n            p300.move_to(bypass)\n            p300.return_tip()\n        wash += 1\n\n    protocol.comment('--> Removing Residual ETOH')\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A7'\n        p20.pick_up_tip()\n        p20.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p20.aspirate(20, rate=0.25)\n        p20.move_to(bypass)\n        p20.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A9'\n        p20.pick_up_tip()\n        p20.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p20.aspirate(20, rate=0.25)\n        p20.move_to(bypass)\n        p20.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A11'\n        p20.pick_up_tip()\n        p20.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p20.aspirate(20, rate=0.25)\n        p20.move_to(bypass)\n        p20.drop_tip()\n\n    mag_block.engage(height_from_base=6)\n    protocol.comment('AIR DRY')\n    protocol.delay(minutes=0.5)\n\n    protocol.comment('MAGNET DISENGAGE')\n    mag_block.disengage()\n\n    protocol.comment('Adding RSB')\n    PCRVol = 32\n    PCRMixRep = 5\n    PCRMixVol = 25\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A1'\n        p300.pick_up_tip()\n        p300.aspirate(PCRVol, Master_Tube_PCR_1.bottom(p300_offset_Temp))\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc3)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc3)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc3)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        reps = 5\n        for x in range(reps):\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(PCRVol, rate=0.5)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(PCRVol, rate=1)\n        reps = 3\n        for x in range(reps):\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc1)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc1)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc1)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc3)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc3)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc3)\n            p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(\n            sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n        p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n        protocol.delay(seconds=0.5)\n        p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n        p300.default_speed = 400\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A3'\n        p300.pick_up_tip()\n        p300.aspirate(PCRVol, Master_Tube_PCR_1.bottom(p300_offset_Temp))\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc3)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc3)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc3)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        reps = 5\n        for x in range(reps):\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(PCRVol, rate=0.5)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(PCRVol, rate=1)\n        reps = 3\n        for x in range(reps):\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc1)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc1)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc1)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc3)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc3)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc3)\n            p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(\n            sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n        p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n        protocol.delay(seconds=0.5)\n        p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n        p300.default_speed = 400\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A5'\n        p300.pick_up_tip()\n        p300.aspirate(PCRVol, Master_Tube_PCR_1.bottom(p300_offset_Temp))\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        p300.default_speed = 5\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc3)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc3)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc3)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc2)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc2)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc2)\n        p300.dispense(PCRVol/5, rate=0.75)\n        if X == 'A1':\n            p300.move_to(A1_p300_loc1)\n        if X == 'A3':\n            p300.move_to(A3_p300_loc1)\n        if X == 'A5':\n            p300.move_to(A5_p300_loc1)\n        p300.dispense(PCRVol/5, rate=0.75)\n        reps = 5\n        for x in range(reps):\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(PCRVol, rate=0.5)\n            if X == 'A1':\n                p300.move_to(A1_p300_bead_top)\n            if X == 'A3':\n                p300.move_to(A3_p300_bead_top)\n            if X == 'A5':\n                p300.move_to(A5_p300_bead_top)\n            p300.dispense(PCRVol, rate=1)\n        reps = 3\n        for x in range(reps):\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc1)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc1)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc1)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc2)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc2)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc2)\n            p300.mix(PCRMixRep, PCRMixVol)\n            if X == 'A1':\n                p300.move_to(A1_p300_loc3)\n            if X == 'A3':\n                p300.move_to(A3_p300_loc3)\n            if X == 'A5':\n                p300.move_to(A5_p300_loc3)\n            p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(\n            sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n        p300.mix(PCRMixRep, PCRMixVol)\n        p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n        protocol.delay(seconds=0.5)\n        p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n        p300.default_speed = 400\n        p300.drop_tip()\n\n    protocol.delay(minutes=2)\n\n    protocol.comment('MAGNET ENGAGE')\n    mag_block.engage(height_from_base=10)\n\n    protocol.delay(minutes=4)\n\n    protocol.comment('--> Transferring Supernatant')\n    TransferSup = 30\n    if samplecolumns >= 1:  # -------------------------------------------------\n        X = 'A7'\n        Y = 'A8'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(TransferSup, rate=0.25)\n        p300.dispense(\n            TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 2:  # -------------------------------------------------\n        X = 'A9'\n        Y = 'A10'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(TransferSup, rate=0.25)\n        p300.dispense(\n            TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n        p300.move_to(bypass)\n        p300.drop_tip()\n    if samplecolumns >= 3:  # -------------------------------------------------\n        X = 'A11'\n        Y = 'A12'\n        p300.pick_up_tip()\n        p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n        p300.aspirate(TransferSup, rate=0.25)\n        p300.dispense(\n            TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n        p300.move_to(bypass)\n        p300.drop_tip()\n\n    protocol.comment('MAGNET DISENGAGE')\n    mag_block.disengage()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "Number of samples",
            "name": "n_samples",
            "options": [
                {
                    "label": "24 samples",
                    "value": 24
                },
                {
                    "label": "16 samples",
                    "value": 16
                },
                {
                    "label": "8 samples",
                    "value": 8
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with Bio-Rad Well Plate 200 \u00b5L on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_aluminumblock_biorad_wellplate_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Illumina DNA Prep 24x",
        "source": "Protocol Library"
    },
    "modules": []
}