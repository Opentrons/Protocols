{
    "content": "\"\"\"OPENTRONS.\"\"\"\nfrom opentrons import protocol_api\n\nmetadata = {\n    'protocolName': 'Day 2',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'   # CHECK IF YOUR API LEVEL HERE IS UP TO DATE\n                         # IN SECTION 5.2 OF THE APIV2 \"VERSIONING\"\n}\n\n\ndef run(ctx: protocol_api.ProtocolContext):\n    \"\"\"PROTOCOL.\"\"\"\n    [\n     num_samples,\n     vol_trans,\n     p300_mount\n    ] = get_values(  # noqa: F821 (<--- DO NOT REMOVE!)\n        \"num_samples\",\n        \"vol_trans\",\n        \"p300_mount\")\n\n    # define all custom variables above here with descriptions:\n    if p300_mount == 'left':\n        p20_mount = 'right'\n    else:\n        p20_mount = 'left'\n\n    # load modules\n\n    # load labware\n    reagent_resv = ctx.load_labware('nest_12_reservoir_15ml', '1')\n    std_plate = ctx.load_labware('opentrons_24_tuberack_generic_2ml_screwcap',\n                                 '2')\n    final_plate = ctx.load_labware('nest_96_wellplate_2ml_deep', '3')\n    sample_plate = ctx.load_labware('opentrons_24_tuberack_generic_'\n                                    '2ml_screwcap', '6')\n\n    # load tipracks\n    tiprack_300 = [ctx.load_labware('opentrons_96_tiprack_300ul', slot)\n                   for slot in ['8', '11']]\n    tiprack_20 = [ctx.load_labware('opentrons_96_tiprack_20ul', slot)\n                  for slot in ['7', '10']]\n\n    # load instrument\n    p300 = ctx.load_instrument('p300_single_gen2', p300_mount,\n                               tip_racks=tiprack_300)\n    p20 = ctx.load_instrument('p20_single_gen2', p20_mount,\n                              tip_racks=tiprack_20)\n    # chunking\n\n    def div_chunks(len, n):\n\n        for i in range(0, num_samples, n):\n            yield len[i:i + n]\n\n    wells_reorder = []\n    for sublist in final_plate.rows():\n        for item in sublist:\n            wells_reorder.append(item)\n    # reagents\n    std_dest_wells = wells_reorder[num_samples*3:num_samples*3+21]\n    dest_list = list(div_chunks(wells_reorder, 3))\n    dest_list_std = list(div_chunks(std_dest_wells,\n                                    3))\n    total_dest = wells_reorder[:num_samples+21]\n    std_wells = std_plate.wells()[:7]\n    reag_a = std_plate.rows()[3][0]\n    reag_b = std_plate.rows()[3][1]\n    reag_c = std_plate.rows()[3][2]\n    water = reagent_resv.wells()[0]\n    sample_list = sample_plate.wells()[:num_samples]\n    '''\n    Define where all reagents are on the deck using the labware defined above.\n\n    e.g.\n\n    water = reservoir12.wells()[-1]\n    waste = reservoir.wells()[0]\n    samples = plate.rows()[0][0]\n    dnase = tuberack.wells_by_name()['A4']\n\n    '''\n\n    # plate, tube rack maps\n\n    '''\n    Define any plate or tube maps here.\n\n    e.g.\n\n    plate_wells_by_row = [well for row in plate.rows() for well in row]\n\n    '''\n\n    # BEGIN PROTOCOL\n\n    # Transfer X uL from starting vials slot 6 to slot 3 in triplicate\n    \"\"\"    for i, start in enumerate(sample_list):\n        if vol_trans > 20:\n            pip = p300\n        else:\n            pip = p20\n        pip.pick_up_tip()\n        for dest in dest_list[i]:\n            if vol_trans > 20:\n                pip = p300\n            else:\n                pip = p20\n            pip.aspirate(vol_trans, start, rate=0.5)\n            pip.dispense(vol_trans, dest, rate=0.5)\n        pip.drop_tip()\"\"\"\n    # Transfer 36 uL DI from slot 1 well 1 to all 7 standards in triplicate\n    p300.pick_up_tip()\n    for dest in std_dest_wells:\n        p300.aspirate(36, water)\n        p300.dispense(36, dest)\n    p300.drop_tip()\n    # Same as samples but for standards\n    \"\"\"    for i, src in enumerate(std_wells):\n        if vol_trans > 20:\n            pip = p300\n        else:\n            pip = p20\n        pip.pick_up_tip()\n        for dest in dest_list_std[i]:\n            pip.aspirate(vol_trans, src, rate=0.5)\n            pip.dispense(vol_trans, dest, rate=0.5)\n            pip.mix(1, vol_trans, dest)\n        pip.drop_tip()\"\"\"\n\n    # Wait 1 hour\n    ctx.delay(minutes=60)\n\n    # Add 46 uL to samples\n    for dest in sample_list:\n        p300.pick_up_tip()\n        p300.aspirate(46, water)\n        p300.dispense(46, dest)\n        p300.mix(1, 46, dest)\n        p300.drop_tip()\n    # Reagent A, add 30 uL to all samples and standards\n    for dest in total_dest:\n        p300.pick_up_tip()\n        p300.aspirate(30, reag_a)\n        p300.dispense(30, dest)\n        p300.mix(1, 30, dest)\n        p300.drop_tip()\n    # Turn off temp module\n\n    # 1 hour wait\n    ctx.delay(minutes=60)\n    # 49 uL Reagent B added to all samples/standards\n    for dest in total_dest:\n        p300.pick_up_tip()\n        p300.aspirate(49, reag_b)\n        p300.dispense(49, dest)\n        p300.mix(1, 49, dest)\n        p300.drop_tip()\n    # 75 uL Reagent C added to all samples/standards\n    for dest in total_dest:\n        p300.pick_up_tip()\n        p300.aspirate(75, reag_c)\n        p300.dispense(75, dest)\n        p300.mix(1, 75, dest)\n        p300.drop_tip()\n\n    for c in ctx.commands():\n        print(c)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 12,
            "label": "Number of Samples (1-24)",
            "name": "num_samples",
            "type": "int"
        },
        {
            "default": 10,
            "label": "Sample Transfer Volume",
            "name": "vol_trans",
            "type": "int"
        },
        {
            "label": "P300 Mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 12 Well Reservoir 15 mL on 1",
            "share": false,
            "slot": "1",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 24 Tube Rack with Generic 2 mL Screwcap on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_24_tuberack_generic_2ml_screwcap"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on 3",
            "share": false,
            "slot": "3",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 24 Tube Rack with Generic 2 mL Screwcap on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_24_tuberack_generic_2ml_screwcap"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Day 2",
        "source": "Custom Protocol Request"
    },
    "modules": []
}