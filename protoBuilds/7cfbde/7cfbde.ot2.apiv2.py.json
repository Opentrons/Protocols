{
    "content": "from opentrons import types, protocol_api\nimport math\n\nmetadata = {\n    'protocolName': '3D Black Bio RNA Extraction',\n    'author': 'Chaz <chaz@opentrons.com>',\n    'apiLevel': '2.9'\n}\n\n\ndef run(protocol: protocol_api.ProtocolContext):\n    [mnt300, num_samples] = get_values(  # noqa: F821\n     'mnt300', 'num_samples')\n\n    # load labware\n    magdeck = protocol.load_module('magnetic module gen2', '7')\n    magPlate = magdeck.load_labware('nest_96_wellplate_2ml_deep')\n    waste1 = protocol.load_labware(\n        'nest_1_reservoir_195ml', '10').wells()[0].top(-2)\n    waste2 = protocol.load_labware(\n        'nest_1_reservoir_195ml', '11').wells()[0].top(-2)\n    res12 = protocol.load_labware('nest_12_reservoir_15ml', '5')\n    res1 = protocol.load_labware('nest_1_reservoir_195ml', '2')\n    alBlock = protocol.load_labware(\n        'opentrons_96_aluminumblock_generic_pcr_strip_200ul', '4')\n    sampPlate = protocol.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', '1')\n\n    tips200 = [\n        protocol.load_labware(\n            'opentrons_96_tiprack_300ul', s) for s in ['8', '9', '6', '3']\n        ]\n    all_tips = [tr['A'+str(i)] for tr in tips200 for i in range(1, 13)]\n    park_tips = all_tips[:12]\n\n    m300 = protocol.load_instrument(\n        'p300_multi_gen2', mnt300, tip_racks=tips200[1:])\n\n    # create reagent locations as variables\n    num_cols = math.ceil(num_samples/8)\n    pk = alBlock['A1']\n    magBeads = [alBlock[x] for x in ['A3', 'A4'] for _ in range(6)][:num_cols]\n    lysis = [well for well in res12.wells()[:6] for _ in range(2)][:num_cols]\n    wash1 = [well for well in res12.wells()[6:] for _ in range(2)][:num_cols]\n    wash2 = [res1['A1'] for _ in range(12)]\n    eBuff = [w for w in alBlock.rows()[0][6:] for _ in range(2)][:num_cols]\n\n    magSamps = magPlate.rows()[0][:num_cols]\n    pSamps = sampPlate.rows()[0][:num_cols]\n\n    m300.flow_rate.aspirate = 50\n    m300.flow_rate.dispense = 150\n    m300.flow_rate.blow_out = 300\n\n    tip_ctr = 12\n\n    def pick_up():\n        nonlocal tip_ctr\n        \"\"\"Function that can be used instead of .pick_up_tip() that will pause\n        robot when robot runs out of tips, prompting user to replace tips\n        before resuming\"\"\"\n        try:\n            m300.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            m300.home()\n            for _ in range(6):\n                protocol.set_rail_lights(not protocol.rail_lights_on)\n                protocol.delay(seconds=1)\n            protocol.pause(\"\\nReplace the tips in slots 9, 6, and 3. \\\n            Move empty rack to slot 8\")\n            m300.reset_tipracks()\n            m300.pick_up_tip()\n            tip_ctr = 0\n\n    def tip_return():\n        nonlocal tip_ctr\n        m300.drop_tip(all_tips[tip_ctr])\n        tip_ctr += 1\n\n    def well_mix(reps, v, loc, side):\n        loc1 = loc.bottom().move(types.Point(x=side, y=0, z=3))\n        loc2 = loc.bottom().move(types.Point(x=side*-1, y=0, z=0.6))\n        m300.aspirate(20, loc1)\n        mvol = v-20\n        for _ in range(reps):\n            m300.aspirate(mvol, loc1)\n            m300.dispense(mvol, loc2)\n        m300.dispense(20, loc2)\n\n    def remove_supernatant(vol, src, dest, side):\n        m300.flow_rate.aspirate = 20\n        m300.aspirate(10, src.top())\n        while vol > 200:\n            m300.aspirate(\n                200, src.bottom().move(types.Point(x=side, y=0, z=0.5)))\n            m300.dispense(200, dest)\n            m300.aspirate(10, dest)\n            vol -= 200\n        m300.aspirate(vol, src.bottom().move(types.Point(x=side, y=0, z=0.5)))\n        m300.dispense(vol, dest)\n        m300.dispense(10, dest)\n        m300.flow_rate.aspirate = 50\n\n    def mag_removal(vol, waste):\n        magdeck.engage()\n        protocol.comment('Incubating for 3 minutes')\n        protocol.delay(minutes=3)\n\n        for well, tip, s in zip(magSamps, park_tips, sides):\n            m300.pick_up_tip(tip)\n            remove_supernatant(vol, well, waste, side)\n            m300.drop_tip(tip)\n\n        magdeck.disengage()\n\n    def wash_step(srcs, vol, mix, w):\n        \"\"\" This is a versatile function that does a lot of the repetive tasks\n            src = source wells for reagent\n            vol = volume of reagent added (and supernatant removed)*\n            mix = the number of times to mix\n            w = waste location\n            \"\"\"\n        for well, src, side in zip(magSamps, srcs, sides):\n            pick_up()\n            add_vol = vol\n            e_vol = 0\n            while add_vol > 200:\n                m300.aspirate(200, src)\n                m300.dispense(200, well.top(-3))\n                m300.aspirate(10, well.top(-3))\n                add_vol -= 200\n                e_vol += 10\n            m300.aspirate(add_vol, src)\n            total_vol = add_vol + e_vol\n            m300.dispense(total_vol, well)\n\n            well_mix(mix, 200, well, side)\n\n            m300.blow_out()\n\n            tip_return()\n\n        mag_removal(vol, w)\n\n    sides = [-1, 1]*6\n\n    # Step 1: Add 10uL Proteinase K, 804uL Lysis-Binding Mix, 200uL sample\n    protocol.comment('Adding 10uL of Proteinase K')\n    m300.pick_up_tip(park_tips[0])\n    m300.aspirate(12*num_cols, pk)\n    for well in magSamps:\n        m300.dispense(10, well)\n    m300.dispense(2*num_cols, pk)\n    m300.blow_out()\n\n    protocol.comment('\\nAdding 804uL of Lysis-Binding Mix + 200uL of Sample')\n    for well, l, samp, t, s in zip(magSamps, lysis, pSamps, park_tips, sides):\n        if not m300.has_tip:\n            m300.pick_up_tip(t)\n        for _ in range(4):\n            m300.transfer(201, l, well.top(-2), new_tip='never')\n        m300.blow_out(well.top(-3))\n        m300.transfer(200, samp, well, new_tip='never')\n        well_mix(20, 200, well, s)\n        m300.blow_out()\n        m300.drop_tip()\n\n    # Step 2: Add 20uL of Magnetic Beads\n    for well, mb, tr, side in zip(magSamps, magBeads, park_tips, sides):\n        pick_up()\n        m300.transfer(20, mb, well, new_tip='never')\n        well_mix(15, 200, well, side)\n        m300.blow_out()\n        m300.drop_tip(tr)\n\n    mag_removal(1050, waste1)\n\n    # Step 4: Wash 1, 750uL\n    protocol.comment('\\nPerforming Wash 1...')\n    wash_step(wash1, 750, 15, waste1)\n\n    # Step 5: Wash 2-1, 800uL\n    protocol.comment('\\nPerforming Wash 2-1...')\n    wash_step(wash2, 800, 15, waste2)\n\n    # Step 6: Wash 2-2, 800uL\n    protocol.comment('\\nPerforming Wash 2-2...')\n    wash_step(wash2, 800, 15, waste2)\n\n    protocol.comment('\\nRemoving any excess ethanol...')\n    m300.flow_rate.aspirate = 25\n    for well, tip in zip(magSamps, park_tips):\n        m300.pick_up_tip(tip)\n        m300.aspirate(60, well)\n        m300.dispense(60, waste2)\n        m300.aspirate(10, waste2)\n        m300.drop_tip(tip)\n\n    m300.flow_rate.aspirate = 50\n    magdeck.disengage()\n    protocol.comment('\\nLetting air dry for 10 minutes...')\n    protocol.comment('Please replace 96-Well Plate containing Samples \\\n    with clean plate for elutions')\n    protocol.delay(minutes=10)\n\n    protocol.comment('\\nAdding 60uL of elution buffer to samples...')\n    for well, buffer, side in zip(magSamps, eBuff, sides):\n        loc1 = well.bottom().move(types.Point(x=side, y=0, z=2))\n        loc2 = well.bottom().move(types.Point(x=side*-1, y=0, z=0.6))\n        pick_up()\n        m300.aspirate(60, buffer)\n        m300.dispense(60, loc2)\n        for _ in range(10):\n            m300.aspirate(50, loc1)\n            m300.dispense(50, loc2)\n        m300.blow_out()\n        tip_return()\n\n    protocol.comment('\\nIncubating at room temp for 10 minutes.')\n    protocol.delay(minutes=10)\n\n    magdeck.engage()\n    protocol.comment('Incubating on MagDeck for 2 minutes.')\n    protocol.delay(minutes=2)\n\n    protocol.comment('\\nTransferring elution to final plate...')\n    m300.flow_rate.aspirate = 20\n    for src, dest, s in zip(magSamps, pSamps, sides):\n        pick_up()\n        m300.aspirate(60, src.bottom().move(types.Point(x=s, y=0, z=0.6)))\n        m300.dispense(60, dest)\n        tip_return()\n\n    magdeck.disengage()\n    protocol.comment('\\nCongratulations! The protocol is complete!')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "P300-Multi Mount",
            "name": "mnt300",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 96,
            "label": "Number of Samples (1-96)",
            "name": "num_samples",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with Generic PCR Strip 200 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 5",
            "share": false,
            "slot": "5",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on Magnetic Module GEN2 on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 10",
            "share": false,
            "slot": "10",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 11",
            "share": false,
            "slot": "11",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Chaz <chaz@opentrons.com>",
        "protocolName": "3D Black Bio RNA Extraction"
    },
    "modules": []
}