{
    "content": "from opentrons import protocol_api\nimport threading\nfrom time import sleep\n\n\nmetadata = {\n    'protocolName': 'Normalization and Barcode Addition',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\nclass CancellationToken:\n    \"\"\"FLASH SETUP.\"\"\"\n\n    def __init__(self):\n        \"\"\"FLASH SETUP.\"\"\"\n        self.is_continued = False\n\n    def set_true(self):\n        \"\"\"FLASH SETUP.\"\"\"\n        self.is_continued = True\n\n    def set_false(self):\n        \"\"\"FLASH SETUP.\"\"\"\n        self.is_continued = False\n\n\ndef turn_on_blinking_notification(hardware, pause):\n    \"\"\"FLASH SETUP\"\"\"\n    while pause.is_continued:\n        hardware.set_lights(rails=True)\n        sleep(1)\n        hardware.set_lights(rails=False)\n        sleep(1)\n\n\ndef create_thread(ctx, cancel_token):\n    \"\"\"FLASH SETUP.\"\"\"\n    t1 = threading.Thread(target=turn_on_blinking_notification,\n                          args=(ctx._hw_manager.hardware, cancel_token))\n    t1.start()\n    return t1\n\n\ndef run(ctx):\n    cancellationToken = CancellationToken()\n\n    [csv_samp, dna_plate_type, if_48,\n        p20_mount, m20_mount] = get_values(  # noqa: F821\n            \"csv_samp\", \"dna_plate_type\", \"if_48\", \"p20_mount\", \"m20_mount\")\n\n    flash = True\n\n    # labware\n    reservoir = ctx.load_labware('nest_12_reservoir_15ml', 1)\n    barcode_plate = ctx.load_labware('biorad_96_wellplate_200ul_pcr',\n                                     5)\n    buffer_plate = ctx.load_labware('nest_96_wellplate_100ul_pcr_full_skirt',\n                                    6)\n\n    dna_plate = ctx.load_labware(dna_plate_type, 2)\n\n    final_plate = ctx.load_labware('nest_96_wellplate_100ul_pcr_full_skirt', 3)\n\n    tips = [ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n            for slot in [10, 11]]\n    tipbox_less_than_eight = [ctx.load_labware(\n                              'opentrons_96_filtertiprack_20ul', slot)\n                              for slot in [8, 9]]\n\n    # pipettes\n    p20 = ctx.load_instrument('p20_single_gen2', p20_mount, tip_racks=tips)\n    m20 = ctx.load_instrument('p20_multi_gen2', m20_mount, tip_racks=tips)\n\n    def pick_up(pip):\n        try:\n            pip.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            if flash:\n                if not ctx._hw_manager.hardware.is_simulator:\n                    cancellationToken.set_true()\n                thread = create_thread(ctx, cancellationToken)\n            pip.home()\n            ctx.pause('\\n\\n~~~~~~~~~~PLEASE REPLACE TIPRACKS~~~~~~~~~~~\\n')\n            ctx.home()  # home before continuing with protocol\n            if flash:\n                cancellationToken.set_false()  # stop light flashing after home\n                thread.join()\n            ctx.set_rail_lights(True)\n            pip.reset_tipracks()\n            pick_up(pip)\n\n    # mapping\n    water = reservoir.wells()[0]\n    buffer_A = buffer_plate.rows()[0][0]\n    buffer_B = buffer_plate.rows()[0][1]\n\n    pool_wells_left = barcode_plate.rows()[0][1:6]\n    pool_wells_right = barcode_plate.rows()[0][6:11]\n    pool_dest_left = barcode_plate.rows()[0][0]\n    pool_dest_right = barcode_plate.rows()[0][11]\n\n    pool_wells_left_bottom = barcode_plate.rows()[4][1:6]\n    pool_wells_right_bottom = barcode_plate.rows()[4][6:11]\n    pool_dest_left_bottom = barcode_plate.rows()[4][0]\n    pool_dest_right_bottom = barcode_plate.rows()[4][11]\n\n    csv_rows = [[val.strip() for val in line.split(',')]\n                for line in csv_samp.splitlines()\n                if line.split(',')[0].strip()][1:]\n\n    num_chan = 4\n    tips_ordered = [\n        tip for rack in tipbox_less_than_eight\n        for row in rack.rows()[\n            len(rack.rows())-num_chan::-1*num_chan]\n        for tip in row]\n\n    tip_count = 0\n\n    def pick_up_less():\n        nonlocal tip_count\n        m20.pick_up_tip(tips_ordered[tip_count])\n        tip_count += 1\n\n    # protocol\n    ctx.comment('\\n------------ADDING WATER TO FINAL PLATE-------------\\n\\n')\n    p20.pick_up_tip()\n    for line in csv_rows:\n        dest_well_name = line[0]\n        dest_well = final_plate.wells_by_name()[dest_well_name]\n        transfer_vol = round(float(line[4]))\n\n        if transfer_vol <= 0:\n            continue\n        p20.transfer(transfer_vol, water, dest_well.bottom(z=1.5),\n                     new_tip='never')\n        p20.blow_out()\n\n    p20.drop_tip()\n\n    ctx.comment('\\n------------ADDING DNA TO FINAL PLATE-------------\\n\\n')\n\n    for line in csv_rows:\n        p20.pick_up_tip()\n        source_well_name = line[0]\n        source_well = dna_plate.wells_by_name()[source_well_name]\n\n        dest_well_name = line[0]\n        dest_well = final_plate.wells_by_name()[dest_well_name]\n        transfer_vol = round(float(line[3]))\n\n        p20.transfer(transfer_vol, source_well, dest_well.bottom(z=1.5),\n                     new_tip='never')\n\n        p20.blow_out()\n        p20.drop_tip()\n\n    ctx.pause()\n\n    ctx.comment('\\n----------ADDING SAMPLE TO BARCODE PLATE-----------\\n\\n')\n    # are we for sure 96 samples\n    if if_48 == \"96\":\n\n        for s_col, d_col in zip(final_plate.rows()[0],\n                                barcode_plate.rows()[0]):\n            pick_up(m20)\n            m20.aspirate(6, s_col.bottom(-0.5))\n            m20.dispense(6, d_col)\n            m20.mix(10, 8, d_col)\n            m20.blow_out()\n            m20.drop_tip()\n\n    elif if_48 == \"top48\":\n\n        for s_col, d_col in zip(final_plate.rows()[0],\n                                barcode_plate.rows()[0]):\n            pick_up_less()\n            m20.aspirate(6, s_col)\n            m20.dispense(6, d_col)\n            m20.mix(10, 8, d_col)\n            m20.blow_out()\n            m20.drop_tip()\n    else:\n\n        for s_col, d_col in zip(final_plate.rows()[0],\n                                barcode_plate.rows()[4]):\n            pick_up_less()\n            m20.aspirate(6, s_col)\n            m20.dispense(6, d_col)\n            m20.mix(10, 8, d_col)\n            m20.blow_out()\n            m20.drop_tip()\n\n    ctx.comment('\\n----------ADDING BUFFER A TO BARCODE PLATE-----------\\n\\n')\n    if if_48 == \"96\":\n        for col in barcode_plate.rows()[0]:\n            pick_up(m20)\n            m20.aspirate(5, buffer_A)\n            m20.dispense(5, col)\n            m20.mix(10, 8, col)\n            m20.blow_out()\n            m20.drop_tip()\n    elif if_48 == \"top48\":\n        for col in barcode_plate.rows()[0]:\n            pick_up_less()\n            m20.aspirate(5, buffer_A)\n            m20.dispense(5, col)\n            m20.mix(10, 8, col)\n            m20.blow_out()\n            m20.drop_tip()\n    else:\n        for col in barcode_plate.rows()[4]:\n            pick_up_less()\n            m20.aspirate(5, buffer_A)\n            m20.dispense(5, col)\n            m20.mix(10, 8, col)\n            m20.blow_out()\n            m20.drop_tip()\n\n    ctx.pause()\n\n    ctx.comment('\\n----------ADDING BUFFER B TO BARCODE PLATE-----------\\n\\n')\n    if if_48 == \"96\":\n        for col in barcode_plate.rows()[0]:\n            pick_up(m20)\n            m20.aspirate(7.5, buffer_B, rate=0.2)\n            ctx.delay(seconds=1.5)\n            m20.dispense(7.5, col)\n            m20.mix(10, 14, col, rate=0.5)\n            m20.blow_out()\n            m20.drop_tip()\n\n    elif if_48 == \"top48\":\n        for col in barcode_plate.rows()[0]:\n            pick_up_less()\n            m20.aspirate(7.5, buffer_B, rate=0.2)\n            ctx.delay(seconds=1.5)\n            m20.dispense(7.5, col)\n            m20.mix(10, 14, col, rate=0.5)\n            m20.blow_out()\n            m20.drop_tip()\n\n    else:\n        for col in barcode_plate.rows()[4]:\n            pick_up_less()\n            m20.aspirate(7.5, buffer_B, rate=0.2)\n            ctx.delay(seconds=1.5)\n            m20.dispense(7.5, col)\n            m20.mix(10, 14, col, rate=0.5)\n            m20.blow_out()\n            m20.drop_tip()\n\n    ctx.pause(\"Second buffer just added to plate. Resume for pooling.\")\n\n    ctx.comment('\\n----------POOLING-----------\\n\\n')\n    # are we for sure 96 samples\n    if if_48 == \"96\":\n\n        for side_of_plate, pool_well in zip([pool_wells_left,\n                                             pool_wells_right],\n                                            [pool_dest_left,\n                                             pool_dest_right]):\n            pick_up(m20)\n            for col in side_of_plate:\n                for _ in range(2):\n                    m20.aspirate(12, col)\n                    m20.dispense(12, pool_well)\n                    m20.blow_out()\n            m20.drop_tip()\n\n    elif if_48 == \"top48\":\n\n        for side_of_plate, pool_well in zip([pool_wells_left,\n                                             pool_wells_right],\n                                            [pool_dest_left,\n                                             pool_dest_right]):\n            pick_up_less()\n            for col in side_of_plate:\n                for _ in range(2):\n                    m20.aspirate(12, col)\n                    m20.dispense(12, pool_well)\n                    m20.blow_out()\n            m20.drop_tip()\n\n    else:\n\n        for side_of_plate, pool_well in zip([pool_wells_left_bottom,\n                                             pool_wells_right_bottom],\n                                            [pool_dest_left_bottom,\n                                             pool_dest_right_bottom]):\n            pick_up_less()\n            for col in side_of_plate:\n                for _ in range(2):\n                    m20.aspirate(12, col)\n                    m20.dispense(12, pool_well)\n                    m20.blow_out()\n            m20.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": "plate, sample, qubit, dna, h20, inputDNA\nA1, test1, 12, 1, 5.0, 12.5\nA1, test1, 12, 1, 5.0, 12.5\nA1, test1, 12, 1, 5.0, 12.5",
            "label": ".CSV File",
            "name": "csv_samp",
            "type": "textFile"
        },
        {
            "label": "DNA Plate Type on Slot 2",
            "name": "dna_plate_type",
            "options": [
                {
                    "label": "PCR PLATE",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "FLAT BOTTOM PLATE",
                    "value": "corning_96_wellplate_360ul_flat"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Top 48 of plate, bottom 48 of plate, or full plate?",
            "name": "if_48",
            "options": [
                {
                    "label": "FULL PLATE",
                    "value": "96"
                },
                {
                    "label": "TOP HALF (48) OF PLATE",
                    "value": "top48"
                },
                {
                    "label": "BOTTOM HALF (48) OF PLATE",
                    "value": "bottom48"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 Single Channel Pipette Mount",
            "name": "p20_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 Multi Channel Pipette Mount",
            "name": "m20_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 12 Well Reservoir 15 mL on 1",
            "share": false,
            "slot": "1",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 3",
            "share": false,
            "slot": "3",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 5",
            "share": false,
            "slot": "5",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 6",
            "share": false,
            "slot": "6",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Normalization and Barcode Addition",
        "source": "Custom Protocol Request"
    },
    "modules": []
}