{
    "content": "metadata = {\"apiLevel\": \"2.3\"}\n\n\ndef run(ctx):\n\n    column_count = get_values(  # noqa: F821\n            'column_count')[0]\n\n    # Change to HARD-SHELL BIO-RAD PCR 384 WELL PLATE 50 UL\n    cfx_plate = ctx.load_labware('corning_384_wellplate_112ul_flat', '3')\n    # THERMO FISHER SCIENTIFIC ELUTION TUBES 96 WELL PLATE 650 UL\n    control_plate = ctx.load_labware('nest_96_wellplate_2ml_deep', '2')\n\n    tip_racks = [\n        ctx.load_labware(\n            'opentrons_96_filtertiprack_20ul',\n            x) for x in [\n            '7',\n            '8',\n            '10',\n            '11']]\n    p20m = ctx.load_instrument(\n        'p20_multi_gen2', \"right\", tip_racks=tip_racks)\n\n    # Sample\n    sample_plate_1 = ctx.load_labware(\n        'nest_96_wellplate_2ml_deep', '1')\n    if column_count > 12:\n        sample_plate_2 = ctx.load_labware(\n            'nest_96_wellplate_2ml_deep', '4')\n\n    cols = []\n    for x in range(1, 8):\n        for y in [\"A\", \"B\"]:\n            cols.append([cfx_plate.wells_by_name()[\n                        \"{}{}\".format(y, x + (z * 8))] for z in range(0, 3)])\n\n    if column_count < 12:\n        transfers_needed = list(\n            zip(sample_plate_1.rows()[0][:column_count],\n                cols[:column_count]))\n    if column_count > 12:\n        transfers_needed = list(\n            zip(sample_plate_1.rows()[0][:column_count],\n                cols[:column_count])) + list(\n            zip(sample_plate_2.rows()[0][:column_count - 12],\n                cols[12:(column_count - 12) + 12]))\n\n    for from_well, to_wells in transfers_needed:\n        for to_well in to_wells:\n            p20m.transfer(5, from_well, to_well, new_tip='always')\n\n    # Controls\n    for to_well in [cfx_plate.wells_by_name()[x] for x in [\"A8\", \"A16\"]]:\n        p20m.transfer(5, control_plate.wells_by_name()[\n                      \"A1\"], to_well, new_tip='always')\n    p20m.transfer(\n        5,\n        control_plate.wells_by_name()[\"A3\"],\n        cfx_plate.wells_by_name()[\"A24\"],\n        new_tip='always')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 14,
            "label": "Number of Columns (1-14)",
            "name": "column_count",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Deepwell Plate 2mL on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Corning 384 Well Plate 112 \u00b5L Flat on 3",
            "share": false,
            "slot": "3",
            "type": "corning_384_wellplate_112ul_flat"
        },
        {
            "name": "NEST 96 Deepwell Plate 2mL on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.3"
    },
    "modules": []
}