{
    "content": "from opentrons import protocol_api\n\nmetadata = {\n    'protocolName': 'droplet digital PCR Prep',\n    'author': 'Parrish Payne <parrish.payne@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.13'\n}\n\n\ndef run(ctx):\n\n    [m300_mount, m20_mount] = get_values(  # noqa: F821\n        'm300_mount', 'm20_mount')\n\n    # labware\n    tips200 = [ctx.load_labware('opentrons_96_filtertiprack_200ul', slot)\n               for slot in [1]]\n    tips20 = [ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n              for slot in [4, 7]]\n    dest_plate_1 = ctx.load_labware(\n        'biorad_96_wellplate_200ul_pcr', 3, 'Prep Plate')\n    # custom labware Biorad semi-skirted 96-well plate held in a ELISA plate\n    dest_plate_2 = ctx.load_labware(\n        'biorad_96_wellplate_200ul_pcr', 6, 'Final Plate')\n    # custom labware Biorad semi-skirted 96-well plate held in a ELISA plate\n    source_plate = ctx.load_labware(\n        'biorad_96_wellplate_200ul_pcr', 5, 'Reagent Plate')\n    # custom labware Biorad semi-skirted 96-well plate held in a ELISA plate\n\n    # pipettes\n    m300 = ctx.load_instrument('p300_multi_gen2', m300_mount,\n                               tip_racks=tips200)\n    m20 = ctx.load_instrument('p20_multi_gen2', m20_mount, tip_racks=tips20)\n\n    # reagents\n    dpbs = source_plate.rows()[0][:8]   # col. 1-8\n    article = source_plate.rows()[0][8]  # col. 9\n    mas_mix = source_plate.rows()[0][10]  # col. 11\n    water = source_plate.rows()[0][11]  # col. 12\n    dpbs_destinations = dest_plate_1.rows()[0][:8]  # col. 1-8\n\n    # Helper Functions\n    def pick_up(pip):\n        \"\"\"Function that can be used instead of .pick_up_tip() that will pause\n        robot when robot runs out of tips, prompting user to replace tips\n        before resuming\"\"\"\n        try:\n            pip.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            pip.home()\n            ctx.pause(\"Replace the tips\")\n            pip.reset_tipracks()\n            pip.pick_up_tip()\n\n    def slow_withdraw(pip, well, delay_seconds=1.0):\n        pip.default_speed /= 16\n        if delay_seconds > 0:\n            ctx.delay(seconds=delay_seconds)\n        pip.move_to(well.top())\n        pip.default_speed *= 16\n\n    # step 1\n    for i, d in zip(dpbs, dpbs_destinations):\n        pick_up(m300)\n        m300.aspirate(180, i.bottom(1.0))\n        m300.dispense(180, d.bottom(2))\n        m300.drop_tip()\n\n    # step 2\n    pick_up(m300)\n    m300.aspirate(160, source_plate.rows()[0][7].bottom(1))\n    m300.dispense(160, dest_plate_1.rows()[0][7].bottom(2))\n    m300.drop_tip()\n\n    # step 3 & 4\n    pick_up(m20)\n    m20.aspirate(20, article.bottom(1.0))\n    slow_withdraw(m20, article)\n    m20.dispense(20, dest_plate_1.rows()[0][0].bottom(2.0))\n    m20.mix(20, 20)\n    slow_withdraw(m20, dest_plate_1.rows()[0][0])\n    m20.drop_tip()\n\n    # step 5 serial dilution\n    for s, d in zip(dest_plate_1.rows()[0][:6], dest_plate_1.rows()[0][1:7]):\n        pick_up(m20)\n        m20.aspirate(20, s.bottom(1.0))\n        m20.dispense(20, d.bottom(2.0))\n        m20.mix(20, 20)\n        slow_withdraw(m20, d)\n        m20.drop_tip()\n\n    # step 6 & 7\n    pick_up(m300)\n    m300.aspirate(40, dest_plate_1.rows()[0][5])  # col 6\n    slow_withdraw(m300, dest_plate_1.rows()[0][5])\n    m300.dispense(40, dest_plate_1.rows()[0][7])  # col 8\n    m300.mix(20, 180)\n    slow_withdraw(m300, dest_plate_1.rows()[0][7])\n    m300.drop_tip()\n\n    # step 8 transfer 20 uL of mas_mix into col 1-5 of dest plate 2\n    pick_up(m20)\n    for d in dest_plate_2.rows()[0][:5]:\n        m20.aspirate(20, mas_mix)\n        slow_withdraw(m20, mas_mix)\n        m20.dispense(20, d.bottom(2))\n        slow_withdraw(m20, d)\n    m20.drop_tip()\n\n    # step 9, 10, 11\n    for s, d in zip(dest_plate_1.rows()[0][5:8], dest_plate_2.rows()[0][:3]):\n        pick_up(m20)\n        m20.aspirate(5, s)\n        m20.dispense(5, d)\n        slow_withdraw(m20, d)\n        m20.drop_tip()\n\n    # step 12\n    for d in dest_plate_2.rows()[0][3:5]:\n        pick_up(m20)\n        m20.aspirate(5, water)\n        m20.dispense(5, d.bottom(2))\n        slow_withdraw(m20, d)\n        m20.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "P20 8-channel GEN2 pipette mount",
            "name": "m300_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 8-channel GEN2 pipette mount",
            "name": "m20_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Prep Plate on 3",
            "share": false,
            "slot": "3",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Reagent Plate on 5",
            "share": false,
            "slot": "5",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Final Plate on 6",
            "share": false,
            "slot": "6",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.13",
        "author": "Parrish Payne <parrish.payne@opentrons.com>",
        "protocolName": "droplet digital PCR Prep",
        "source": "Custom Protocol Request"
    },
    "modules": []
}