{
    "content": "metadata = {\n    'protocolName': 'PCR Prep - Plate Filling',\n    'author': 'Chaz <chaz@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.7'\n}\n\n\ndef run(protocol):\n    [numSamps] = get_values(  # noqa: F821\n     'numSamps')\n\n    # load labware and pipette\n    tips = [protocol.load_labware('opentrons_96_filtertiprack_20ul', '6')]\n    p20 = protocol.load_instrument('p20_single_gen2', 'right', tip_racks=tips)\n\n    destPlate = protocol.load_labware('biorad_96_wellplate_200ul_pcr', '2')\n    destWells = [\n        well for row in destPlate.rows() for well in row][:numSamps+1]\n\n    tuberacks = [\n        protocol.load_labware(\n            'opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap',\n            s) for s in [1, 4, 7, 10, 3]\n            ]\n    mm = tuberacks[-1].wells()[0]\n    water = tuberacks[-1].wells()[-1]\n\n    samples = []\n    for rack in tuberacks[:4]:\n        for row in rack.rows():\n            for well in row:\n                samples.append(well)\n\n    # Transfer Master Mix\n    protocol.comment('Transferring 20uL of Master Mix to all wells...\\n')\n\n    p20.pick_up_tip()\n\n    for well in destWells:\n        p20.aspirate(20, mm)\n        p20.dispense(20, well)\n\n    # Transfer water to last well\n    protocol.comment('Transferring Water (control) to last well...\\n')\n\n    p20.aspirate(5, water)\n    p20.dispense(5, destWells[-1])\n    p20.mix(2, 20)\n\n    p20.drop_tip()\n\n    # Transfer samples\n    protocol.comment('Transferring 5uL of Sample to corresponding wells...\\n')\n    for src, dest in zip(samples[:numSamps], destWells):\n        p20.pick_up_tip()\n        p20.aspirate(5, src)\n        p20.dispense(5, dest)\n        p20.mix(2, 20)\n        p20.drop_tip()\n\n    protocol.comment('\\nProtocol complete!')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 95,
            "label": "Number of Samples (1-95)",
            "name": "numSamps",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 2",
            "share": false,
            "slot": "2",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.7",
        "author": "Chaz <chaz@opentrons.com>",
        "protocolName": "PCR Prep - Plate Filling",
        "source": "Custom Protocol Request"
    },
    "modules": []
}