{
    "content": "from opentrons import types\nfrom opentrons import protocol_api\nimport math\n\nmetadata = {\n    'protocolName': 'Omega Bio-tek Mag-Bind Environmental DNA 96 Kit',\n    'author': 'Sakib <sakib.hossain@opentrons.com>',\n    'description': 'Custom Protocol Request',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    [debug, samples, m300_mount, m20_mount, tip_type, mm2_vol, vhb_vol,\n        elution_buffer_vol, settling_time] = get_values(  # noqa: F821\n        \"debug\", \"samples\", \"m300_mount\", \"m20_mount\", \"tip_type\", \"mm2_vol\",\n        \"vhb_vol\", \"elution_buffer_vol\", \"settling_time\")\n\n    cols = math.ceil(samples/8)\n\n    tiprack_type = {\n        'standard': 'opentrons_96_tiprack_300ul',\n        'filter': 'opentrons_96_filtertiprack_200ul'\n        }\n\n    # Load Labware/Modules\n    temp_mod = ctx.load_module('temperature module gen2', 3)\n    temp_plate = temp_mod.load_labware(\n                    'opentrons_96_aluminumblock_nest_wellplate_100ul')\n    mag_mod = ctx.load_module('magnetic module gen2', 1)\n    mag_plate = mag_mod.load_labware('nest_96_wellplate_2ml_deep')\n    tipracks = [ctx.load_labware(tiprack_type[tip_type], slot) for slot in\n                range(7, 12)]\n    tip_isolator = ctx.load_labware(tiprack_type[tip_type], 4, 'Tip Isolator')\n    res1 = ctx.load_labware('nest_12_reservoir_15ml', 5)\n    res2 = ctx.load_labware('nest_12_reservoir_15ml', 2)\n    dna_plate = ctx.load_labware('nest_96_wellplate_100ul_pcr_full_skirt', 6)\n    trash = ctx.loaded_labwares[12]['A1']\n\n    # Load Pipettes\n    m300 = ctx.load_instrument('p300_multi_gen2', m300_mount,\n                               tip_racks=tipracks)\n    max_tip_volume = tipracks[0]['A1'].geometry.max_volume\n\n    # Reagents\n    # Splitting columns for an even 12 column transfer\n    # based on volume total\n    mm2 = [well for well in res1.wells()[:2] for i in range(6)]\n    vhb = [well for well in res1.wells()[2:6] for i in range(3)]\n    etoh1 = [well for well in res2.wells()[:4] for i in range(3)]\n    etoh2 = [well for well in res2.wells()[4:8] for i in range(3)]\n    elution_buffer = res1.wells()[11]\n    elution_wells = temp_plate.rows()[0][:cols]\n\n    # Helper Functions\n    def debug_mode(msg, debug_setting=debug):\n        if debug_setting == \"True\":\n            ctx.pause(msg)\n\n    def supernatant_removal(vol, src, dest, side=-1):\n        m300.flow_rate.aspirate = 20\n        while vol >= max_tip_volume:\n            m300.aspirate(\n                max_tip_volume, src.bottom().move(\n                    types.Point(x=side, y=0, z=0.5)))\n            m300.dispense(max_tip_volume, dest)\n            vol -= max_tip_volume\n\n        if vol < max_tip_volume:\n            m300.aspirate(vol, src.bottom().move(\n                        types.Point(x=side, y=0, z=0.5)))\n            m300.dispense(vol, dest)\n        m300.flow_rate.aspirate = 50\n\n    def reset_flow_rates():\n        m300.flow_rate.aspirate = 94\n        m300.flow_rate.dispense = 94\n\n    def pick_up(pip, loc=None):\n        \"\"\"Function that can be used instead of .pick_up_tip() that will pause\n        robot when robot runs out of tips, prompting user to replace tips\n        before resuming\"\"\"\n        try:\n            if loc:\n                pip.pick_up_tip(loc)\n            else:\n                pip.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            pip.home()\n            ctx.pause(\"Replace the tips\")\n            pip.reset_tipracks()\n            pip.pick_up_tip()\n\n    def tip_mix(well, vol, reps, park_tip=False, tip_loc=None, tip_map=None,\n                asp_speed=94, disp_speed=94):\n\n        m300.flow_rate.aspirate = asp_speed\n        m300.flow_rate.dispense = disp_speed\n\n        if not m300.has_tip:\n            if tip_loc:\n                pick_up(m300, tip_loc)\n            else:\n                pick_up(m300)\n        ctx.comment('Mixing from the middle')\n        m300.mix(reps, vol, well.center())\n        ctx.comment('Mixing from the bottom')\n        m300.mix(reps, vol, well.bottom())\n        ctx.comment('Mixing from the middle')\n        m300.mix(reps, vol, well.center())\n\n        if not park_tip:\n            m300.drop_tip()\n        elif park_tip:\n            m300.drop_tip(tip_isolator.columns()[mag_plate_wells[well]][0])\n        reset_flow_rates()\n\n    def bind(delay=settling_time):\n        if mag_mod.status != 'engaged':\n            mag_mod.engage()\n        ctx.delay(minutes=delay, msg=f'''Incubating on MagDeck for\n                  {delay} minute(s).''')\n\n    def remove(vol, src, dest=trash, use_park_tip=True):\n        if use_park_tip:\n            pick_up(m300, tip_isolator.columns()[mag_plate_wells[src]][0])\n        elif not use_park_tip:\n            pick_up(m300)\n        supernatant_removal(vol=vol, src=src, dest=dest)\n        m300.drop_tip()\n\n    def wash(vol, src, dest):\n        m300.flow_rate.dispense = 200\n        pick_up(m300)\n        m300.transfer(vol, src, dest, new_tip='never')\n        m300.drop_tip()\n        m300.flow_rate.dispense = 94\n\n    def etoh_wash(reservoir, park=True):\n        # Steps 24-25\n        # 70% Ethanol Wash\n        debug_mode(msg=\"Debug: Wash with 70% Ethanol\")\n        for src, dest in zip(reservoir, mag_plate_wells):\n            wash(500, src, dest)\n        # Tip Mix (Vortex)\n        debug_mode(msg=\"Debug: Tip Mixing (Vortex)\")\n        for well in mag_plate_wells:\n            tip_mix(well, 300, 10, park_tip=park,\n                    tip_loc=tip_isolator.columns()[mag_plate_wells[well]][0],\n                    tip_map=mag_plate_wells, asp_speed=188, disp_speed=188)\n\n        # Steps 26-27\n        debug_mode(msg=f'''Debug: Engage Magnet for {settling_time} minutes\n                        and then remove supernatant''')\n        bind()\n        for well in mag_plate_wells:\n            remove(500, well, use_park_tip=False)\n        if mag_mod.status == 'engaged':\n            mag_mod.disengage()\n\n    # Wells\n    # mag_plate_wells = mag_plate.rows()[0]\n    mag_plate_wells = {well: column for well, column in zip(\n                       mag_plate.rows()[0][:cols], range(cols))}\n    dna_plate_wells = dna_plate.rows()[0][:cols]\n\n    # Protocol Steps\n\n    # Step 14\n    # Transfer Master Mix 2 (XP1 Buffer + Mag-Bind\u00ae Particles RQ) to Mag Plate\n    debug_mode(msg=\"Debug: Transfer Master Mix 2 to Mag Plate (Step 14)\")\n    transfer_count = 0\n    for mm, dest in zip(mm2, mag_plate_wells):\n        if transfer_count == 3:\n            transfer_count = 0\n        if transfer_count == 0:\n            pick_up(m300)\n            m300.mix(10, 300, mm.center())\n            if cols > 6:\n                m300.mix(10, 300, mm2[6].center())\n            m300.drop_tip()\n        pick_up(m300)\n        m300.aspirate(mm2_vol, mm)\n        m300.dispense(mm2_vol, dest)\n        m300.drop_tip()\n        transfer_count += 1\n\n    # Step 15\n    # Incubate at Room Temp for 10 Minutes while mixing\n    debug_mode(msg='''Debug: Incubate at Room Temperature while\n               Mixing (Step 15)''')\n    for well in mag_plate_wells:\n        tip_mix(well, mm2_vol/2, 10, park_tip=True, tip_map=mag_plate_wells,\n                asp_speed=94, disp_speed=94)\n\n    for well in mag_plate_wells:\n        tip_mix(well, mm2_vol/2, 5, park_tip=True,\n                tip_loc=tip_isolator.columns()[mag_plate_wells[well]][0],\n                tip_map=mag_plate_wells, asp_speed=94, disp_speed=94)\n\n    # Steps 16-18\n    debug_mode(msg=f'''Debug: Engage Magnet for {settling_time} minutes\n                    and then remove supernatant (Steps 16-18)''')\n    bind()\n    for well in mag_plate_wells:\n        remove(600, well, use_park_tip=True)\n    if mag_mod.status == 'engaged':\n        mag_mod.disengage()\n\n    # Steps 19-20\n    # Add VHB Buffer\n    debug_mode(msg=\"Debug: Wash with VHB Buffer (Step 19)\")\n    for src, dest in zip(vhb, mag_plate_wells):\n        wash(500, src, dest)\n    # Tip Mix (Vortex)\n    debug_mode(msg=\"Debug: Tip Mixing (Vortex) (Step 20)\")\n    for well in mag_plate_wells:\n        tip_mix(well, 300, 10, park_tip=True, tip_map=mag_plate_wells,\n                asp_speed=188, disp_speed=188)\n\n    # Steps 21-23\n    debug_mode(msg=f'''Debug: Engage Magnet for {settling_time} minutes and\n               then remove supernatant (Steps 21-23)''')\n    bind()\n    for well in mag_plate_wells:\n        remove(400, well, use_park_tip=False)\n    if mag_mod.status == 'engaged':\n        mag_mod.disengage()\n\n    # Steps 24-28\n    etoh_wash(etoh1)\n    etoh_wash(etoh2, park=False)\n\n    # Step 29\n    debug_mode(msg='''Debug: Engaging Magnet for 1 minute and removing any\n               supernatant (Step 29)''')\n    bind(delay=1)\n    for well in mag_plate_wells:\n        remove(200, well, dest=trash, use_park_tip=False)\n\n    # Step 30\n    debug_mode(msg='''Debug: Engaging Magnet for 10 minutes to allow beads to\n               dry (Step 30)''')\n    bind(delay=10)\n\n    # Step 31\n    debug_mode(msg='''Debug: Transferring Elution Buffer to plate on temperature module (Step 31)''')\n    m300.transfer(elution_buffer_vol, elution_buffer, elution_wells)\n    debug_mode(msg='''Debug: Heating elution buffer on temperature module to\n               70C (Step 31)''')\n    temp_mod.set_temperature(70)\n    debug_mode(msg='''Debug: Transferring elution buffer to sample wells\n               (Step 31)''')\n    for src, dest in zip(elution_wells, mag_plate_wells):\n        m300.transfer(elution_buffer_vol, src, dest)\n\n    # Step 32\n    debug_mode(msg='''Debug: Tip Mixing (Vortex) (Step 32)''')\n    for well in mag_plate_wells:\n        tip_mix(well, elution_buffer_vol/2, 10, park_tip=False, tip_loc=None,\n                tip_map=None, asp_speed=94, disp_speed=94)\n\n    # Step 33\n    debug_mode(msg='''Debug: Engaging Magnetic Module for 2 minutes to allow\n               beads to settle (Step 33)''')\n    bind(delay=2)\n\n    # Step 34\n    debug_mode(msg='''Debug: Transfer clear supernatant containing purified\n               DNA to NEST 0.1 mL 96 Well PCR Plate (Step 34)''')\n    for src, dest in zip(elution_wells, dna_plate_wells):\n        pick_up(m300)\n        m300.aspirate(elution_buffer_vol, src)\n        m300.dispense(elution_buffer_vol, dest.bottom(z=5))\n        m300.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "Debug Mode",
            "name": "debug",
            "options": [
                {
                    "label": "Enable",
                    "value": "True"
                },
                {
                    "label": "Disable",
                    "value": "False"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 96,
            "label": "Sample Number (Multiples of 8)",
            "name": "samples",
            "type": "int"
        },
        {
            "label": "P300-multichannel GEN2 mount",
            "name": "m300_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20-multichannel GEN2 mount",
            "name": "m20_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P300 Tip Type",
            "name": "tip_type",
            "options": [
                {
                    "label": "standard",
                    "value": "standard"
                },
                {
                    "label": "filter",
                    "value": "filter"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 300,
            "label": "Master Mix 2 Volume",
            "name": "mm2_vol",
            "type": "float"
        },
        {
            "default": 300,
            "label": "VHB Buffer Volume",
            "name": "vhb_vol",
            "type": "float"
        },
        {
            "default": 100,
            "label": "Elution Buffer Volume",
            "name": "elution_buffer_vol",
            "type": "float"
        },
        {
            "default": 5,
            "label": "Magnetic Module Bead Settling Time (Minutes)",
            "name": "settling_time",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Deepwell Plate 2mL on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "Tip Isolator on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 5",
            "share": false,
            "slot": "5",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 6",
            "share": false,
            "slot": "6",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Sakib <sakib.hossain@opentrons.com>",
        "description": "Custom Protocol Request",
        "protocolName": "Omega Bio-tek Mag-Bind Environmental DNA 96 Kit"
    },
    "modules": []
}