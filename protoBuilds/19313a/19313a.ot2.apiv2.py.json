{
    "content": "\"\"\"Protocol.\"\"\"\nimport os\nimport csv\nfrom opentrons.types import Point\n\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{\"num_samp\":1,\"reset_tipracks\":true,\"mix_reps1\":10,\"mix_reps2\":10,\"mix_reps_wash1\":6,\n    \"mix_reps_wash2\":6,\"mix_reps_elution1\":6,\"mix_reps_elution2\":6,\"settling_1\":4,\"settling_2\":5,\"settling_3\":1,\n    \"settling_wash\":0.5,\"settling_drying\":3,\"settling_elution1\":1,\"settling_elution2\":5,\"wash1_vol\":300,\n    \"wash2_vol\":300,\"elution_vol\":50,\"lysis_vol\":100,\"move_vol\":200,\"binding_buffer_vol\":100,\"final_vol\":50,\n    \"heating_module_temp\":65,\"mag_height_1\":4.5,\"waste_water_mode\":true,\"asp_height\":1,\"length_from_side\":2,\n    \"p300_mount\":\"left\"}\"\"\")\n    return [_all_values[n] for n in names]\nmetadata = {\n    'protocolName': 'RNA Extraction with Magnetic Life',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.10'\n}\n\n\ndef run(ctx):\n    \"\"\"Protocol.\"\"\"\n    [num_samp, reset_tipracks, mix_reps1, mix_reps2, mix_reps_wash1,\n     mix_reps_wash2, mix_reps_elution1, mix_reps_elution2, settling_1,\n     settling_2, settling_3, settling_wash, settling_drying, settling_elution1,\n     settling_elution2, wash1_vol, wash2_vol, elution_vol, lysis_vol, move_vol,\n     binding_buffer_vol, final_vol, heating_module_temp, mag_height_1,\n     waste_water_mode, asp_height, length_from_side,\n     p300_mount] = get_values(  # noqa: F821\n        \"num_samp\", \"reset_tipracks\", \"mix_reps1\", \"mix_reps2\",\n        \"mix_reps_wash1\", \"mix_reps_wash2\", \"mix_reps_elution1\",\n        \"mix_reps_elution2\", \"settling_1\", \"settling_2\", \"settling_3\",\n        \"settling_wash\", \"settling_drying\", \"settling_elution1\",\n        \"settling_elution2\", \"wash1_vol\", \"wash2_vol\", \"elution_vol\",\n        \"lysis_vol\", \"move_vol\", \"binding_buffer_vol\", \"final_vol\",\n        \"heating_module_temp\", \"mag_height_1\", \"waste_water_mode\",\n        \"asp_height\", \"length_from_side\", \"p300_mount\")\n\n    if not 0 <= num_samp <= 4:\n        raise Exception('Please enter a sample number between 1-4')\n\n    # load labware\n    mag_mod = ctx.load_module('magnetic module gen2', '7')\n    mag_plate = mag_mod.load_labware(\n        'nest_96_wellplate_2ml_deep', label='Mag Plate')\n    reagent_tuberack = ctx.load_labware(\n                'opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical', '4',\n                label='Reagent Tuberack')\n    waste_tuberack = ctx.load_labware(\n                'opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical', '5',\n                label='Waste Tuberack')\n    tiprack300 = [ctx.load_labware('opentrons_96_tiprack_300ul', slot)\n                  for slot in ['8', '9']]\n    temp_mod = ctx.load_module('temperature module gen2', '10')\n    temp_rack = temp_mod.load_labware(\n        'opentrons_24_aluminumblock_nest_1.5ml_snapcap',\n        label='Temperature tuberack')\n    tiprack200 = ctx.load_labware('opentrons_96_filtertiprack_200ul', '11')\n\n    # load instrument\n    p300 = ctx.load_instrument('p300_single_gen2',\n                               p300_mount,\n                               tip_racks=tiprack300)\n\n    # Tip tracking between runs\n    if not ctx.is_simulating():\n        file_path = '/data/csv/tiptracking.csv'\n        file_dir = os.path.dirname(file_path)\n        # check for file directory\n        if not os.path.exists(file_dir):\n            os.makedirs(file_dir)\n        # check for file; if not there, create initial tip count tracking\n        if not os.path.isfile(file_path):\n            with open(file_path, 'w') as outfile:\n                outfile.write(\"0, 0\\n\")\n\n    tip_count_list = []\n    if ctx.is_simulating():\n        tip_count_list = [0, 0]\n    elif reset_tipracks:\n        tip_count_list = [0, 0]\n    else:\n        with open(file_path) as csv_file:\n            csv_reader = csv.reader(csv_file, delimiter=',')\n            tip_count_list = next(csv_reader)\n\n    num_one = int(tip_count_list[0])\n    num_two = int(tip_count_list[1])\n\n    tips_300 = [tip for tiprack in tiprack300 for tip in tiprack.wells()]\n    p300.starting_tip = tips_300[num_one]\n\n    def pick_up300():\n        try:\n            p300.pick_up_tip()\n        except ctx.labware.OutOfTipsError:\n            ctx.pause(\"Replace all 300ul non-filter tip racks\")\n            p300.reset_tipracks()\n            p300.pick_up_tip()\n\n    filter_tip_count = num_two\n\n    def pick_up_filter():\n        nonlocal filter_tip_count\n        try:\n            p300.pick_up_tip(tiprack200.wells()[filter_tip_count])\n            filter_tip_count += 1\n        except filter_tip_count == 96:\n            ctx.pause(\"Replace all 200ul filter tip racks\")\n            filter_tip_count = 0\n            p300.pick_up_tip(tiprack200.wells()[filter_tip_count])\n\n    # load reagents\n    elution_buffer = reagent_tuberack.wells_by_name()['C2']\n    binding_buffer = reagent_tuberack.wells_by_name()['A3']\n    rps_wash_buffer = reagent_tuberack.wells_by_name()['A4']\n    wash_buffer = reagent_tuberack.wells_by_name()['B3']\n    samples = mag_plate.rows()[0][:12:3][:num_samp]\n    samples_second_well = mag_plate.rows()[0][1:12:3][:num_samp]\n    samples_third_well = mag_plate.rows()[0][2:12:3][:num_samp]\n    waste = waste_tuberack.wells()[0]\n\n    def remove_supernatant(vol, index, loc):\n        ctx.comment('Removing Supernatant')\n        side = -1 if index % 2 == 0 else 1\n        aspirate_loc = loc.bottom(z=asp_height).move(\n                Point(x=(loc.length/2-length_from_side)*side))\n        p300.aspirate(vol, aspirate_loc)\n        p300.dispense(vol, waste)\n        p300.blow_out()\n\n    # initialize temp mod and magnetic mod\n    temp_mod.set_temperature(heating_module_temp)\n    mag_mod.engage(height_from_base=mag_height_1)\n\n    if not waste_water_mode:\n        ctx.comment('\\n\\n\\n\\nNormal Mode')\n        mag_mod.disengage()\n        temp_mod.set_temperature(heating_module_temp)\n\n        # binding\n        for sample in samples:\n            pick_up_filter()\n            p300.aspirate(binding_buffer_vol, binding_buffer)\n            p300.dispense(binding_buffer_vol, sample)\n            p300.mix(mix_reps2, 180, sample)\n            p300.touch_tip()\n            p300.drop_tip()\n        ctx.comment('\\n')\n\n        if not mag_mod.status == 'engaged':\n            mag_mod.engage(height_from_base=mag_height_1)\n        ctx.delay(minutes=settling_2)\n\n        # remove 200ul of supernatant\n        for i, sample in enumerate(samples):\n            pick_up_filter()\n            remove_supernatant(200, i, sample)\n            p300.drop_tip()\n        mag_mod.disengage()\n        ctx.comment('End Normal Mode\\n\\n\\n\\n\\n\\n\\n\\n\\n')\n\n    if waste_water_mode:\n        # remove storage buffer\n        ctx.delay(minutes=settling_3)\n        for sample in samples:\n            pick_up300()\n            for _ in range(5):\n                p300.aspirate(300, sample)\n                p300.dispense(300, waste.top(z=-3))\n                p300.blow_out()\n            p300.drop_tip()\n        mag_mod.disengage()\n        ctx.comment('\\n\\n\\n')\n\n    # RPS wash\n    ctx.comment(\"RPS\")\n    for i, sample in enumerate(samples):\n        pick_up300()\n        p300.aspirate(wash1_vol, rps_wash_buffer)\n        p300.dispense(wash1_vol, sample)\n        p300.mix(mix_reps_wash1, wash1_vol, sample)\n        p300.move_to(sample.top())\n        mag_mod.engage(height_from_base=mag_height_1)\n        ctx.delay(minutes=settling_wash)\n        remove_supernatant(300, i, sample)\n        p300.blow_out()\n        p300.drop_tip()\n        mag_mod.disengage()\n    ctx.comment('\\n\\n\\n')\n\n    # two washes\n    ctx.comment('Two washes')\n    for wash in range(2):\n        for i, sample in enumerate(samples):\n            pick_up300()\n            p300.aspirate(wash2_vol, wash_buffer)\n            p300.dispense(wash2_vol, sample)\n            p300.mix(mix_reps_wash1, 300, sample)\n            p300.move_to(sample.top())\n            mag_mod.engage(height_from_base=mag_height_1)\n            ctx.delay(minutes=settling_wash)\n            remove_supernatant(300, i, sample)\n            p300.drop_tip()\n            mag_mod.disengage()\n            ctx.comment('\\n')\n    ctx.comment('\\n\\n\\n')\n\n    # drying\n    ctx.delay(minutes=settling_2)\n    for i, sample in enumerate(samples):\n        pick_up300()\n        p300.aspirate(300, sample)\n        p300.dispense(300, waste)\n        p300.drop_tip()\n    ctx.comment('\\n\\n\\n')\n\n    # elution\n    for sample, samp_well2, samp_well3, dest in zip(samples,\n                                                    samples_second_well,\n                                                    samples_third_well,\n                                                    temp_rack.rows()[0]):\n        pick_up300()\n        p300.aspirate(elution_vol, elution_buffer)\n        p300.dispense(elution_vol, sample)\n        p300.mix(mix_reps_elution1, 50, sample)\n        p300.aspirate(move_vol, sample)\n        p300.dispense(move_vol, dest)\n        for _ in range(3):\n            ctx.delay(minutes=settling_elution1)\n            p300.mix(mix_reps_elution2, 200, dest)\n        p300.aspirate(move_vol, dest)\n        p300.dispense(move_vol, samp_well2)\n        p300.blow_out()\n        p300.drop_tip()\n        mag_mod.engage(height_from_base=mag_height_1)\n        ctx.delay(minutes=settling_elution2)\n        pick_up_filter()\n        p300.aspirate(final_vol, samp_well2)\n        p300.dispense(final_vol, samp_well3)\n        p300.drop_tip()\n        mag_mod.disengage()\n    ctx.comment('\\n\\n\\n')\n\n    # write updated tipcount to CSV\n    new_tip_count = str(num_one)+\", \"+str(num_two)+\"\\n\"\n    if not ctx.is_simulating():\n        with open(file_path, 'w') as outfile:\n            outfile.write(new_tip_count)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 1,
            "label": "Number of samples (1-4)",
            "name": "num_samp",
            "type": "int"
        },
        {
            "label": "Reset tipracks?",
            "name": "reset_tipracks",
            "options": [
                {
                    "label": "Yes reset",
                    "value": true
                },
                {
                    "label": "No do not reset",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 10,
            "label": "Mix repetitions 1",
            "name": "mix_reps1",
            "type": "int"
        },
        {
            "default": 10,
            "label": "Mix Repetitions 2",
            "name": "mix_reps2",
            "type": "int"
        },
        {
            "default": 6,
            "label": "Mix Repetitions Wash 1",
            "name": "mix_reps_wash1",
            "type": "int"
        },
        {
            "default": 6,
            "label": "Mix Repetitions Wash 2",
            "name": "mix_reps_wash2",
            "type": "int"
        },
        {
            "default": 6,
            "label": "Mix Repetitions Elution 1",
            "name": "mix_reps_elution1",
            "type": "int"
        },
        {
            "default": 6,
            "label": "Mix Repetitions Elution 2",
            "name": "mix_reps_elution2",
            "type": "int"
        },
        {
            "default": 4.0,
            "label": "Settling time 1 (minutes)",
            "name": "settling_1",
            "type": "float"
        },
        {
            "default": 5.0,
            "label": "Settling time 2 (minutes)",
            "name": "settling_2",
            "type": "float"
        },
        {
            "default": 1.0,
            "label": "Settling time 3 (minutes)",
            "name": "settling_3",
            "type": "float"
        },
        {
            "default": 0.5,
            "label": "Settling wash time (minutes)",
            "name": "settling_wash",
            "type": "float"
        },
        {
            "default": 3.0,
            "label": "Settling dry time (minutes)",
            "name": "settling_drying",
            "type": "float"
        },
        {
            "default": 1.0,
            "label": "Settling elution 1 (minutes)",
            "name": "settling_elution1",
            "type": "float"
        },
        {
            "default": 5.0,
            "label": "Settling elution 2 (minutes)",
            "name": "settling_elution2",
            "type": "float"
        },
        {
            "default": 300,
            "label": "Wash 1 volume",
            "name": "wash1_vol",
            "type": "int"
        },
        {
            "default": 300,
            "label": "Wash 2 volume",
            "name": "wash2_vol",
            "type": "int"
        },
        {
            "default": 50,
            "label": "Elution Volume",
            "name": "elution_vol",
            "type": "int"
        },
        {
            "default": 100,
            "label": "Lysis Volume",
            "name": "lysis_vol",
            "type": "int"
        },
        {
            "default": 200,
            "label": "Move Volume",
            "name": "move_vol",
            "type": "int"
        },
        {
            "default": 100,
            "label": "Binding Buffer Volume",
            "name": "binding_buffer_vol",
            "type": "int"
        },
        {
            "default": 50,
            "label": "Final volume",
            "name": "final_vol",
            "type": "int"
        },
        {
            "default": 65,
            "label": "Heating module temp (C)",
            "name": "heating_module_temp",
            "type": "int"
        },
        {
            "default": 4.5,
            "label": "Magnetic module engage height (mm)",
            "name": "mag_height_1",
            "type": "float"
        },
        {
            "label": "Waste water mode?",
            "name": "waste_water_mode",
            "options": [
                {
                    "label": "Normal Extraction",
                    "value": false
                },
                {
                    "label": "Waste Water Mode",
                    "value": true
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 1,
            "label": "Remove supernatant aspiration height (mm)",
            "name": "asp_height",
            "type": "float"
        },
        {
            "default": 2,
            "label": "Length from side of the well opposite magnetically engaged beads (mm)",
            "name": "length_from_side",
            "type": "float"
        },
        {
            "label": "P300 Single GEN2 Mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Reagent Tuberack on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Waste Tuberack on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Mag Plate on Magnetic Module GEN2 on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Temperature tuberack on Temperature Module GEN2 on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.10",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "RNA Extraction with Magnetic Life",
        "source": "Custom Protocol Request"
    },
    "modules": []
}