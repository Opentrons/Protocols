{
    "content": "import math\n\nmetadata = {\n    'protocolName': 'DNA Purification',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.0'\n    }\n\n\ndef run(protocol_context):\n\n    [pipette_type, pipette_mount, sample_number, sample_volume, bead_ratio,\n     elution_buffer_volume, incubation_time, settling_time,\n     drying_time] = get_values(  # noqa: F821\n        \"pipette_type\", \"pipette_mount\", \"sample_number\", \"sample_volume\",\n        \"bead_ratio\", \"elution_buffer_volume\", \"incubation_time\",\n        \"settling_time\", \"drying_time\"\n    )\n\n    mag_deck = protocol_context.load_module('magdeck', '1')\n    mag_plate = mag_deck.load_labware(\n        'biorad_96_wellplate_200ul_pcr')\n    output_plate = protocol_context.load_labware(\n        'biorad_96_wellplate_200ul_pcr', '2', 'output plate')\n\n    total_tips = sample_number*8\n    tiprack_num = math.ceil(total_tips/96)\n    slots = ['3', '5', '6', '7', '8', '9', '10', '11'][:tiprack_num]\n\n    pip_range = pipette_type.split('_')[0]\n    if pip_range == 'p1000':\n        tip_name = 'opentrons_96_tiprack_1000ul'\n    elif pip_range == 'p300' or pip_range == 'p50':\n        tip_name = 'opentrons_96_tiprack_300ul'\n    elif pip_range == 'p20':\n        tip_name = 'opentrons_96_tiprack_20ul'\n    else:\n        tip_name = 'opentrons_96_tiprack_10ul'\n    tipracks = [\n        protocol_context.load_labware(tip_name, slot)\n        for slot in slots\n    ]\n\n    pipette = protocol_context.load_instrument(\n        pipette_type, pipette_mount, tip_racks=tipracks)\n\n    mode = pipette_type.split('_')[1]\n\n    if mode == 'single':\n        if sample_number <= 5:\n            reagent_container = protocol_context.load_labware(\n                'opentrons_24_tuberack_nest_2ml_snapcap', '4')\n            liquid_waste = protocol_context.load_labware(\n                'usascientific_12_reservoir_22ml', '5').wells()[-1]\n        else:\n            reagent_container = protocol_context.load_labware(\n                'usascientific_12_reservoir_22ml', '4')\n            liquid_waste = reagent_container.wells()[-1]\n        samples = [well for well in mag_plate.wells()[:sample_number]]\n        output = [well for well in output_plate.wells()[:sample_number]]\n    else:\n        reagent_container = protocol_context.load_labware(\n            'usascientific_12_reservoir_22ml', '4')\n        liquid_waste = reagent_container.wells()[-1]\n        col_num = math.ceil(sample_number/8)\n        samples = [col for col in mag_plate.rows()[0][:col_num]]\n        output = [col for col in output_plate.rows()[0][:col_num]]\n\n    # Define reagents and liquid waste\n    beads = reagent_container.wells()[0]\n    ethanol = reagent_container.wells()[1]\n    elution_buffer = reagent_container.wells()[2]\n\n    # Define bead and mix volume\n    bead_volume = sample_volume*bead_ratio\n    if bead_volume/2 > pipette.max_volume:\n        mix_vol = pipette.max_volume\n    else:\n        mix_vol = bead_volume/2\n    total_vol = bead_volume + sample_volume + 5\n\n    # Mix beads and PCR samples\n    for target in samples:\n        pipette.pick_up_tip()\n        pipette.mix(5, mix_vol, beads)\n        pipette.transfer(bead_volume, beads, target, new_tip='never')\n        pipette.mix(10, mix_vol, target)\n        pipette.blow_out()\n        pipette.drop_tip()\n\n    # Incubate beads and PCR product at RT for 5 minutes\n    protocol_context.delay(minutes=incubation_time)\n\n    # Engagae MagDeck and incubate\n    mag_deck.engage()\n    protocol_context.delay(minutes=settling_time)\n\n    # Remove supernatant from magnetic beads\n    pipette.flow_rate.aspirate = 25\n    pipette.flow_rate.dispense = 150\n    for target in samples:\n        pipette.transfer(total_vol, target, liquid_waste, blow_out=True)\n\n    # Wash beads twice with 70% ethanol\n    air_vol = pipette.max_volume * 0.1\n    for cycle in range(2):\n        for target in samples:\n            pipette.transfer(200, ethanol, target, air_gap=air_vol,\n                             new_tip='once')\n        protocol_context.delay(minutes=1)\n        for target in samples:\n            pipette.transfer(200, target, liquid_waste, air_gap=air_vol)\n\n    # Dry at RT\n    protocol_context.delay(minutes=drying_time)\n\n    # Disengage MagDeck\n    mag_deck.disengage()\n\n    # Mix beads with elution buffer\n    if elution_buffer_volume/2 > pipette.max_volume:\n        mix_vol = pipette.max_volume\n    else:\n        mix_vol = elution_buffer_volume/2\n    for target in samples:\n        pipette.pick_up_tip()\n        pipette.transfer(\n            elution_buffer_volume, elution_buffer, target, new_tip='never')\n        pipette.mix(20, mix_vol, target)\n        pipette.drop_tip()\n\n    # Incubate at RT\n    protocol_context.delay(minutes=5)\n\n    # Engage MagDeck and remain engaged for DNA elution\n    mag_deck.engage()\n    protocol_context.delay(minutes=settling_time)\n\n    # Transfer clean PCR product to a new well\n    for target, dest in zip(samples, output):\n        pipette.transfer(elution_buffer_volume, target, dest, blow_out=True)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "pipette type",
            "name": "pipette_type",
            "options": [
                {
                    "label": "GEN2 P1000 Single",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "GEN2 P300 Single",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "GEN2 P20 Single",
                    "value": "p10_single_gen2"
                },
                {
                    "label": "GEN2 P300 Multi",
                    "value": "p300_multi_gen2"
                },
                {
                    "label": "GEN2 P20 Multi",
                    "value": "p20_multi_gen2"
                },
                {
                    "label": "GEN1 P1000 Single",
                    "value": "p1000_single"
                },
                {
                    "label": "GEN1 P300 Single",
                    "value": "p300_single"
                },
                {
                    "label": "GEN1 P50 Single",
                    "value": "p50_single"
                },
                {
                    "label": "GEN1 P10 Single",
                    "value": "p10_single"
                },
                {
                    "label": "GEN1 P300 Multi",
                    "value": "p300_multi"
                },
                {
                    "label": "GEN1 P50 Multi",
                    "value": "p50_multi"
                },
                {
                    "label": "GEN1 P10 Multi",
                    "value": "p10_multi"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "pipette mount",
            "name": "pipette_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 24,
            "label": "number of samples",
            "name": "sample_number",
            "type": "int"
        },
        {
            "default": 20,
            "label": "sample volume (in uL)",
            "name": "sample_volume",
            "type": "float"
        },
        {
            "default": 1.8,
            "label": "bead ratio",
            "name": "bead_ratio",
            "type": "float"
        },
        {
            "default": 200,
            "label": "elution buffer volume (in uL)",
            "name": "elution_buffer_volume",
            "type": "float"
        },
        {
            "default": 1,
            "label": "incubation time (in minutes)",
            "name": "incubation_time",
            "type": "float"
        },
        {
            "default": 1,
            "label": "settling time (in minutes)",
            "name": "settling_time",
            "type": "float"
        },
        {
            "default": 5,
            "label": "drying time (in minutes)",
            "name": "drying_time",
            "type": "float"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on Magnetic Module on 1",
            "share": false,
            "slot": "1",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "output plate on 2",
            "share": false,
            "slot": "2",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "USA Scientific 12 Well Reservoir 22 mL on 4",
            "share": false,
            "slot": "4",
            "type": "usascientific_12_reservoir_22ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.0",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "DNA Purification",
        "source": "Protocol Library"
    },
    "modules": []
}