{
    "content": "metadata = {\n    'protocolName': 'Sample Prep MALDI spotting - Serial Dilution',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{\"num_dilutions\":8,\n                                    \"initial_vol_stock\":230,\n                                    \"initial_vol_dilution\":9770,\n                                    \"step_vol_stock\":1200,\n                                    \"step_vol_dilution\":8800,\n                                  \"mount\":\"right\"}\"\"\")\n    return [_all_values[n] for n in names]\n\n\ndef run(ctx):\n\n    [num_dilutions, initial_vol_stock, initial_vol_dilution,\n     step_vol_stock, step_vol_dilution, mount] = get_values(  # noqa: F821\n        \"num_dilutions\", \"initial_vol_stock\", \"initial_vol_dilution\",\n         \"step_vol_stock\", \"step_vol_dilution\", \"mount\")\n\n    if not 1 <= num_dilutions <= 15:\n        raise Exception(\"Enter a number of dilution tubes 1-15\")\n\n    # load labware\n    stock_rack = ctx.load_labware(\n                    'opentrons_15_tuberack_falcon_15ml_conical', '1')\n    dilute_rack = ctx.load_labware(\n                    'opentrons_15_tuberack_falcon_15ml_conical', '2')\n    diluent_labware = ctx.load_labware('nest_1_reservoir_195ml', '3')\n    tiprack = ctx.load_labware('opentrons_96_tiprack_1000ul', '4')\n\n    # load instrument\n    pip = ctx.load_instrument('p1000_single_gen2', mount, tip_racks=[tiprack])\n\n    # protocol\n    stock_tube = stock_rack.wells()[0]\n    wells_by_row = [well for row in dilute_rack.rows() for well in row]\n\n    all_tubes = {}\n    for k in range(num_dilutions):\n        key = k\n        value = wells_by_row[k]\n        all_tubes[key] = value\n\n    diluent = diluent_labware.wells()[0]\n\n    # add first tube\n    pip.pick_up_tip()\n    pip.transfer(initial_vol_stock, stock_tube, all_tubes[0], new_tip='never')\n    pip.drop_tip()\n    pip.pick_up_tip()\n    pip.transfer(initial_vol_dilution, diluent, all_tubes[0], new_tip='never')\n    pip.mix(5, 1000, all_tubes[0])\n    pip.drop_tip()\n    ctx.comment('\\n\\n\\n')\n\n    # add diluent to all tubes\n    pip.pick_up_tip()\n    pip.distribute(step_vol_dilution,\n                   diluent,\n                   [all_tubes[i] for i in range(1, num_dilutions)],\n                   new_tip='never')\n    pip.drop_tip()\n    ctx.comment('\\n\\n\\n')\n\n    # add stock\n    pip.pick_up_tip()\n    for i in range(num_dilutions-1):\n        pip.transfer(step_vol_stock,\n                     all_tubes[i],\n                     all_tubes[i+1],\n                     new_tip='never')\n        pip.mix(5, 1000, all_tubes[i+1])\n    pip.drop_tip()\n    ctx.comment('\\n\\n\\n')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 8,
            "label": "Number of dilution tubes (1-15)",
            "name": "num_dilutions",
            "type": "int"
        },
        {
            "default": 230,
            "label": "Initial volume of stock for tube 1 (ul)",
            "name": "initial_vol_dilution",
            "type": "int"
        },
        {
            "default": 9.77,
            "label": "Initial volume of dilution for tube 1 (mL)",
            "name": "initial_vol_stock",
            "type": "float"
        },
        {
            "default": 8.8,
            "label": "Initial volume of stock for the rest of the tubes (mL)",
            "name": "initial_vol_stock",
            "type": "float"
        },
        {
            "default": 1.2,
            "label": "Initial volume of dilution for the rest of the tubes (mL)",
            "name": "initial_vol_stock",
            "type": "float"
        },
        {
            "default": 1,
            "label": "Pre-mix Rate",
            "name": "mix_rate",
            "type": "float"
        },
        {
            "label": "P300 Multi-Channel Mount",
            "name": "m300_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 15 Tube Rack with Falcon 15 mL Conical on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_15_tuberack_falcon_15ml_conical"
        },
        {
            "name": "Opentrons 15 Tube Rack with Falcon 15 mL Conical on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_15_tuberack_falcon_15ml_conical"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 3",
            "share": false,
            "slot": "3",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Sample Prep MALDI spotting - Serial Dilution",
        "source": "Custom Protocol Request"
    },
    "modules": []
}