{
    "content": "import math\n\n\nmetadata = {\n    'protocolName': 'Serial Dilution of Analyte Stock',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n\n    [csv, mount] = get_values(  # noqa: F821\n        \"csv\", \"mount\")\n\n    # load labware\n    serial_rack1 = ctx.load_labware(\n                    'opentrons_15_tuberack_falcon_15ml_conical', '1',\n                    label='SERIAL RACK 1')\n    serial_rack2 = ctx.load_labware(\n                    'opentrons_15_tuberack_falcon_15ml_conical', '2',\n                    label='SERIAL RACK 2')\n    diluent_labware = ctx.load_labware('nest_1_reservoir_195ml', '3',\n                                       label='DILUTION RESERVOIR')\n    analyte_stock_rack = ctx.load_labware(\n        'opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap', '4',\n        label='STOCK RACK')\n\n    tiprack = ctx.load_labware('opentrons_96_tiprack_1000ul', '6')\n\n    # load instrument\n    pip = ctx.load_instrument('p1000_single_gen2', mount, tip_racks=[tiprack])\n\n    # protocol\n    list_of_rows = [[val.strip() for val in line.split(',')]\n                    for line in csv.splitlines()\n                    if line.split(',')[0].strip()][1:]\n\n    slot_num_source = 0\n    tube_source = 1\n    vol = 3\n    slot_num_dest = 4\n    tube_dest = 5\n    all_labware = [serial_rack1,\n                   serial_rack2,\n                   diluent_labware,\n                   analyte_stock_rack]\n\n    total_vols = []\n    for i in range(0, len(list_of_rows)-1, 2):\n        tube_vol = float(list_of_rows[i][vol]) + float(list_of_rows[i+1][vol])\n        total_vols.append(tube_vol)\n        total_vols.append(tube_vol)\n\n    for _, tube_vol in zip(list_of_rows, total_vols):\n\n        # height tracking\n        v_naught = tube_vol*1000\n        radius = serial_rack1.wells()[0].diameter/2\n        h = v_naught/(math.pi*radius**2)-20\n        asp_loc_z = h if h > 20 else 1\n\n        # source and dest\n        source = all_labware[int(_[slot_num_source])-1]\n        dest = all_labware[int(_[slot_num_dest])-1]\n\n        # transfer\n        if int(_[slot_num_source]) == 1 or int(_[slot_num_source]) == 2:\n            source_well = _[tube_source]\n            asp_height = asp_loc_z\n        else:\n            source_well = 'A1'\n            asp_height = 1\n\n        pip.pick_up_tip()\n        pip.transfer(float(_[vol])*1000,\n                     source.wells_by_name()[source_well].bottom(asp_height),\n                     dest.wells_by_name()[_[tube_dest]].top(),\n                     new_tip='never',\n                     blow_out=True,\n                     blowout_location='destination well')\n        if int(_[slot_num_source]) == 3:\n            pip.mix(2, 0.6*float(_[vol])*1000\n                    if 0.6*float(_[vol])*1000 < 1000 else 1000,\n                    dest.wells_by_name()[_[tube_dest]].bottom(z=60))\n        pip.drop_tip()\n        ctx.comment('\\n\\n')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": "Slot No,Position,Sample ID,Volume (mL),Slot No,Tube number,Sample ID\n4,A1,Stock-1,0.25,1,A1,Int-1\n3,Reservior,Diluent,11.75,1,A1,Int-1\n1,A1,Int-1,1.2,1,A2,Int-2\n3,Reservior,Diluent,8.8,1,A2,Int-2\n1,A2,Int-2,1,1,A3,STD8\n3,Reservior,Diluent,11,1,A3,STD8\n1,A3,STD8,2.2,1,A4,STD7\n3,Reservior,Diluent,7.8,1,A4,STD7\n1,A4,STD7,2,1,A5,STD6\n3,Reservior,Diluent,8,1,A5,STD6\n1,A5,STD6,3.5,1,B1,STD5\n3,Reservior,Diluent,6.5,1,B1,STD5\n1,B1,STD5,4,1,B2,STD4\n3,Reservior,Diluent,6,1,B2,STD4\n1,B2,STD4,6.5,1,B3,STD3\n3,Reservior,Diluent,3.5,1,B3,STD3\n1,B3,STD3,3,1,B4,STD2\n3,Reservior,Diluent,7,1,B4,STD2\n1,B4,STD2,1.2,1,B5,STD1\n3,Reservior,Diluent,8.8,1,B5,STD1\n4,A2,Stock-2,0.3,2,A1,Int-1\n3,Reservior,Diluent,9.7,2,A1,Int-1\n2,A1,Int-1,2,2,A2,Int-2\n3,Reservior,Diluent,8,2,A2,Int-2\n2,A2,Int-2,1.5,2,A3,DQC\n3,Reservior,Diluent,10.5,2,A3,DQC\n2,A3,DQC,6.2,2,A4,HQC\n3,Reservior,Diluent,3.8,2,A4,HQC\n2,A4,HQC,3.5,2,A5,MQC\n3,Reservior,Diluent,6.5,2,A5,MQC\n2,A5,HQC,0.6,2,B1,LQC\n3,Reservior,Diluent,9.4,2,B1,LQC\n2,B1,HQC,1.2,2,B2,LLOQ QC\n3,Reservior,Diluent,8.8,2,B2,LLOQ QC",
            "label": ".CSV File",
            "name": "csv",
            "type": "textFile"
        },
        {
            "label": "P1000 Single-Channel Mount",
            "name": "mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "SERIAL RACK 1 on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_15_tuberack_falcon_15ml_conical"
        },
        {
            "name": "SERIAL RACK 2 on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_15_tuberack_falcon_15ml_conical"
        },
        {
            "name": "DILUTION RESERVOIR on 3",
            "share": false,
            "slot": "3",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "STOCK RACK on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Serial Dilution of Analyte Stock",
        "source": "Custom Protocol Request"
    },
    "modules": []
}