{
    "content": "import os\nimport csv\n\nmetadata = {\n    'protocolName': 'Swift 2S Turbo DNA Library Kit Protocol: Part 3/3 - \\\n    Final Clean-Up',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.1'\n}\n\n\ndef run(protocol):\n    [p300tips, samps] = get_values(  # noqa: F821\n    'p300tips', 'samps')\n\n    # Labware Setup\n    big_tips1 = protocol.load_labware(p300tips, '6')\n    big_tips2 = protocol.load_labware(p300tips, '9')\n    p300 = protocol.load_instrument('p300_multi', 'right')\n\n    rt_reagents = protocol.load_labware(\n        'nest_12_reservoir_15ml', '2')\n\n    magdeck = protocol.load_module('Magnetic Module', '4')\n    mag_plate = magdeck.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', 'NEST 96-Well Plate')\n\n    reaction_plate = protocol.load_labware(\n        'opentrons_96_aluminumblock_nest_wellplate_100ul', '1')\n\n    # Tip tracking between runs\n    if not protocol.is_simulating():\n        file_path = '/data/csv/tiptracking.csv'\n        file_dir = os.path.dirname(file_path)\n        # check for file directory\n        if not os.path.exists(file_dir):\n            os.makedirs(file_dir)\n        # check for file; if not there, create initial tip count tracking\n        if not os.path.isfile(file_path):\n            with open(file_path, 'w') as outfile:\n                outfile.write(\"0, 0\\n\")\n\n    tip_count_list = []\n    if protocol.is_simulating():\n        tip_count_list = [0, 0]\n    else:\n        with open(file_path) as csv_file:\n            csv_reader = csv.reader(csv_file, delimiter=',')\n            tip_count_list = next(csv_reader)\n\n    spip_count = int(tip_count_list[0])\n    bpip_count = int(tip_count_list[1])\n\n    def big_pick_up():\n        nonlocal bpip_count\n\n        if bpip_count == 24:\n            p300.home()\n            protocol.pause('Out of tips. Please replace tips in slot 5 and \\\n            click RESUME.')\n            big_tips1.reset()\n            big_tips2.reset()\n            bpip_count = 0\n\n        if bpip_count <= 11:\n            p300.pick_up_tip(big_tips1.columns()[bpip_count][0])\n        else:\n            p300.pick_up_tip(big_tips2.columns()[bpip_count-12][0])\n\n        bpip_count += 1\n\n    # Reagent Setup\n    beads = rt_reagents.wells_by_name()['A1']\n    ethanol2 = rt_reagents.wells_by_name()['A4']\n    te = rt_reagents.wells_by_name()['A6']\n    waste2 = rt_reagents.wells_by_name()['A12']\n\n    col_no = [3, 6, 3]\n\n    pcr_prep_samples = [reaction_plate['A3']]\n    purified_samples = [reaction_plate['A6']]\n    mag_samples = [mag_plate['A3']]\n\n    samps = int(samps)\n\n    plate_list = [pcr_prep_samples, purified_samples, mag_samples]\n\n    if samps > 8:\n        for n, plate in zip(col_no, plate_list):\n            plate.append(reaction_plate.columns()[n][0])\n        if samps > 16:\n            for n, plate in zip(col_no, plate_list):\n                plate.append(reaction_plate.columns()[n+1][0])\n\n    # PCR Purification\n\n    # Transfer samples to the Magnetic Module\n    p300.flow_rate.aspirate = 10\n    for pcr_samps, mag_samps in zip(pcr_prep_samples, mag_samples):\n        big_pick_up()\n        p300.aspirate(60, pcr_samps)\n        p300.dispense(60, mag_samps.top(-4))\n        p300.blow_out(mag_samps.top(-4))\n        p300.drop_tip()\n\n    # Transfer beads to the samples in PCR strip\n    p300.flow_rate.aspirate = 75\n    big_pick_up()\n    p300.mix(5, 60, beads)\n\n    for mag_samps in mag_samples:\n        if not p300.hw_pipette['has_tip']:\n            big_pick_up()\n        p300.flow_rate.aspirate = 10\n        p300.flow_rate.dispense = 10\n        p300.aspirate(32.5, beads)\n        p300.default_speed = 50\n        p300.dispense(32.5, mag_samps.top(-12))\n        p300.flow_rate.aspirate = 50\n        p300.flow_rate.dispense = 50\n        p300.blow_out()\n        p300.mix(10, 60, mag_samps.top(-13.5))\n        p300.blow_out()\n        p300.drop_tip()\n\n    # Incubate for 5 minutes, then engage Magnetic Module and incubate\n    protocol.comment('Incubating for 5 minutes.')\n    protocol.delay(minutes=5)\n\n    magdeck.engage()\n    protocol.delay(minutes=5)\n\n    # Aspirate supernatant\n    for mag_samps in mag_samples:\n        big_pick_up()\n        p300.aspirate(82.5, mag_samps.bottom(2))\n        p300.dispense(82.5, waste2)\n        p300.drop_tip()\n\n    # Wash samples 2x with 180ul of 80% EtOH\n    for _ in range(2):\n        for mag_samps in mag_samples:\n            if not p300.hw_pipette['has_tip']:\n                big_pick_up()\n            p300.air_gap(5)\n            p300.aspirate(180, ethanol2)\n            p300.air_gap(10)\n            p300.dispense(200, mag_samps.top(-2))\n        if samps == 8:\n            protocol.delay(seconds=15)\n        for mag_samps in mag_samples:\n            if not p300.hw_pipette['has_tip']:\n                big_pick_up()\n            p300.air_gap(5)\n            p300.aspirate(190, mag_samps.bottom(1.5))\n            p300.air_gap(10)\n            p300.dispense(210, waste2)\n            p300.drop_tip()\n\n    # Remove residual 80% EtOH\n    for mag_samps in mag_samples:\n        big_pick_up()\n        p300.aspirate(30, mag_samps.bottom(0.5))\n        p300.air_gap(5)\n        p300.drop_tip()\n\n    protocol.delay(minutes=2)\n    magdeck.disengage()\n\n    # Elute clean product\n    for mag_samps in mag_samples:\n        big_pick_up()\n        p300.aspirate(22, te)\n        p300.dispense(22, mag_samps.top(-12))\n        p300.blow_out(mag_samps.top())\n        p300.mix(10, 20, mag_samps.top(-13.5))\n        p300.blow_out(mag_samps.top())\n        p300.drop_tip()\n\n    # Incubate for 2 minutes, then engage Magnetic Module\n    protocol.comment(\"Incubating for 2 minutes, \\\n    then engaging Magnetic Module.\")\n    protocol.delay(minutes=2)\n\n    magdeck.engage()\n    protocol.delay(minutes=5)\n\n    # Transfer clean samples to aluminum block plate.\n    for mag_samps, p_samps in zip(mag_samples, purified_samples):\n        big_pick_up()\n        p300.aspirate(20, mag_samps)\n        p300.dispense(22, p_samps.top(-12))\n        p300.blow_out()\n        p300.drop_tip()\n\n    # Collect clean product\n    magdeck.disengage()\n    protocol.comment(\"Clean up complete. Store samples in 4C or -20C for \\\n    long term storage.\")\n\n    # write updated tipcount to CSV\n    new_tip_count = str(spip_count)+\", \"+str(bpip_count)+\"\\n\"\n    if not protocol.is_simulating():\n        with open(file_path, 'w') as outfile:\n            outfile.write(new_tip_count)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "P300 8-Channel Pipette Tip Type",
            "name": "p300tips",
            "options": [
                {
                    "label": "Opentrons 50\u00b5L/300\u00b5L Tips",
                    "value": "opentrons_96_tiprack_300ul"
                },
                {
                    "label": "Opentrons 200\u00b5L Filter Tips",
                    "value": "opentrons_96_filtertiprack_200ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Number of Samples",
            "name": "samps",
            "options": [
                {
                    "label": "8",
                    "value": "8"
                },
                {
                    "label": "16",
                    "value": "16"
                },
                {
                    "label": "24",
                    "value": "24"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p300_multi"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "NEST 96-Well Plate on Magnetic Module GEN1 on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.1",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Swift 2S Turbo DNA Library Kit Protocol: Part 3/3 -     Final Clean-Up",
        "source": "Protocol Library"
    },
    "modules": []
}