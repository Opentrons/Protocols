{
    "content": "import math\nfrom opentrons.types import Point\n\nmetadata = {\n    'protocolName': 'PCR Prep and Magnetic Bead Cleanup',\n    'author': 'Nick <ndiehl@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n    [num_samples, vol_sample, ratio_beads, vol_wash, vol_elution,\n     time_settling, m20_mount, m300_mount,\n     perform_steps] = get_values(  # noqa: F821\n        'num_samples', 'vol_sample', 'ratio_beads', 'vol_wash', 'vol_elution',\n        'time_settling', 'm20_mount', 'm300_mount', 'perform_steps')\n\n    num_cols = math.ceil(num_samples/8)\n    m20_speed_mod = 4\n    supernatant_headspeed_modulator = 5\n    steps = perform_steps.split(',')\n\n    # load modules and labware\n    magdeck = ctx.load_module('magnetic module gen2', '1')\n    pcr_plate = magdeck.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', 'PCR plate')\n    if 'pcr_prep' in steps:\n        plate_name = 'source sample plate'\n    else:\n        plate_name = 'clean elution plate'\n    source_plate = ctx.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', '2', plate_name)\n    source_samples = source_plate.rows()[0][:num_cols]\n\n    tipracks20 = []\n    if 'pcr_prep' in steps:\n        tipracks20.append(\n            ctx.load_labware('opentrons_96_filtertiprack_20ul', '3'))\n    vol_beads = ratio_beads * vol_sample\n    if 'cleanup' in steps:\n        reservoir = ctx.load_labware('nest_12_reservoir_15ml', '4',\n                                     'reagent reservoir')\n        tipracks200 = [\n            ctx.load_labware('opentrons_96_filtertiprack_200ul', slot)\n            for slot in ['5', '7', '8', '9', '10', '11']]\n        beads = reservoir.wells()[0]\n        etoh = reservoir.wells()[1:5]\n        elution_buffer = reservoir.wells()[5]\n        waste = [well.top() for well in reservoir.wells()[8:]]\n\n        if vol_beads <= 20:\n            rack = ctx.load_labware('opentrons_96_filtertiprack_20ul', '6')\n            tipracks20.append(rack)\n        else:\n            rack = ctx.load_labware('opentrons_96_filtertiprack_200ul', '6')\n            tipracks200.append(rack)\n\n        m300 = ctx.load_instrument('p300_multi_gen2', m300_mount,\n                                   tip_racks=tipracks200)\n\n    # load instrument\n    m20 = ctx.load_instrument('p20_multi_gen2', m20_mount,\n                              tip_racks=tipracks20)\n\n    pcr_samples = pcr_plate.rows()[0][:num_cols]\n\n    def bead_premix(reps, vol, pip):\n        for _ in range(reps):\n            pip.aspirate(vol, beads.bottom(1))\n            pip.dispense(vol, beads.bottom(5))\n\n    if 'pcr_prep' in steps:\n        for source, dest in zip(source_samples, pcr_samples):\n            m20.flow_rate.aspirate /= m20_speed_mod\n            m20.flow_rate.dispense /= m20_speed_mod\n            m20.pick_up_tip()\n            m20.aspirate(vol_sample, source)\n            m20.dispense(5, dest)\n            m20.mix(1, 5, dest)\n            ctx.max_speeds['A'] = 100\n            ctx.max_speeds['Z'] = 100\n            m20.drop_tip()\n            del ctx.max_speeds['A']\n            del ctx.max_speeds['Z']\n            m20.flow_rate.aspirate *= m20_speed_mod\n            m20.flow_rate.dispense *= m20_speed_mod\n\n    if 'cleanup' in steps:\n\n        ctx.pause('Run PCR on plate on magnetic module (slot 1). When \\\ncomplete, replace plate on magnetic module, and replace source sample plate \\\n(slot 2) with clean plate for elution.')\n        elution_samples = source_plate.rows()[0][:num_cols]\n\n        def bead_wellmix(well, pip, vol, reps=10):\n            pip.move_to(well.center())\n            for _ in range(reps):\n                pip.aspirate(vol, well.bottom(1))\n                pip.dispense(vol, well.bottom(5))\n\n        # add beads and mix\n        pip_beads = m300 if vol_beads > 20 else m20\n        for i, dest in enumerate(pcr_samples):\n            pip_beads.flow_rate.aspirate /= 4\n            pip_beads.flow_rate.dispense /= 4\n            pip_beads.pick_up_tip()\n            bead_premix(5, pip_beads.tip_racks[0].wells()[0].max_volume,\n                        pip_beads)\n            pip_beads.aspirate(vol_beads, beads)\n            pip_beads.dispense(vol_beads, dest)\n            pip_beads.flow_rate.aspirate *= 2\n            pip_beads.flow_rate.dispense *= 2\n            bead_wellmix(dest, pip_beads, vol_beads)\n            pip_beads.flow_rate.aspirate *= 2\n            pip_beads.flow_rate.dispense *= 2\n            pip_beads.drop_tip()\n\n        ctx.delay(minutes=5, msg='Incubating off magnet')\n        magdeck.engage()\n        ctx.delay(minutes=time_settling, msg='Incubating on magnet')\n\n        ctx.max_speeds['Z'] = 50\n        ctx.max_speeds['A'] = 50\n        for i, source in enumerate(pcr_samples):\n            side = -1 if i % 2 == 0 else 1\n            m300.pick_up_tip()\n            m300.flow_rate.aspirate /= 10\n            m300.move_to(source.top())\n            ctx.max_speeds['Z'] /= supernatant_headspeed_modulator\n            ctx.max_speeds['A'] /= supernatant_headspeed_modulator\n            m300.aspirate(\n                vol_sample+vol_beads+5, source.bottom().move(\n                    Point(x=side*2, y=0, z=0.2)))\n            m300.move_to(source.top())\n            m300.air_gap(20)\n            m300.flow_rate.aspirate *= 10\n            ctx.max_speeds['Z'] *= supernatant_headspeed_modulator\n            ctx.max_speeds['A'] *= supernatant_headspeed_modulator\n            m300.dispense(m300.current_volume, waste[0])\n            m300.drop_tip()\n\n        # 3x EtOH wash\n        etoh_ind = 0\n        vol_counter_etoh = 0\n        waste_ind = 0\n        vol_counter_waste = 0\n        vol_max = 14500\n        for _ in range(3):\n            m300.pick_up_tip()\n            for dest in pcr_samples:\n                if vol_counter_etoh + vol_wash*8 > vol_max:\n                    vol_counter_etoh = 0\n                    etoh_ind += 1\n                vol_counter_etoh += vol_wash*8\n                etoh_source = etoh[etoh_ind]\n                m300.aspirate(200, etoh_source)\n                ctx.max_speeds['Z'] /= supernatant_headspeed_modulator\n                ctx.max_speeds['A'] /= supernatant_headspeed_modulator\n                m300.move_to(etoh_source.top())\n                ctx.max_speeds['Z'] *= supernatant_headspeed_modulator\n                ctx.max_speeds['A'] *= supernatant_headspeed_modulator\n                m300.dispense(200, dest.top(1))\n            m300.move_to(etoh_source.top())\n            ctx.delay(seconds=30)\n            for i, source in enumerate(pcr_samples):\n                side = -1 if i % 2 == 0 else 1\n                if not m300.has_tip:\n                    m300.pick_up_tip()\n                m300.flow_rate.aspirate /= 10\n                m300.move_to(source.top())\n                ctx.max_speeds['Z'] /= supernatant_headspeed_modulator\n                ctx.max_speeds['A'] /= supernatant_headspeed_modulator\n                num_aspirations = math.ceil(vol_wash/50)\n                if vol_counter_waste + vol_wash*8 > vol_max:\n                    vol_counter_waste = 0\n                    waste_ind += 1\n                for asp_ind in reversed(range(num_aspirations)):\n                    asp_height = source.depth/4*asp_ind+0.2\n                    m300.aspirate(50,\n                                  source.bottom().move(\n                                    Point(x=2*side, z=asp_height)))\n                m300.move_to(source.top())\n                m300.flow_rate.aspirate *= 10\n                ctx.max_speeds['Z'] *= supernatant_headspeed_modulator\n                ctx.max_speeds['A'] *= supernatant_headspeed_modulator\n                m300.dispense(m300.current_volume, waste[waste_ind])\n                m300.drop_tip()\n\n        ctx.delay(minutes=5, msg='Air drying')\n        magdeck.disengage()\n        for i, dest in enumerate(pcr_samples):\n            side = 1 if i % 2 == 0 else -1\n            bead_loc = dest.bottom().move(Point(x=side*2, z=5))\n            m300.pick_up_tip()\n            m300.aspirate(vol_elution, elution_buffer)\n            m300.move_to(dest.center())\n            m300.dispense(vol_elution, bead_loc)\n            m300.mix(10, 10, dest.bottom(1))\n            m300.move_to(dest.bottom().move(Point(x=-2, z=3)))\n            m300.drop_tip()\n\n        ctx.delay(minutes=3, msg='Incubating off magnet')\n        magdeck.engage()\n        ctx.delay(minutes=time_settling, msg='Incubating on magnet')\n\n        m300.flow_rate.aspirate /= 5\n        for s, d in zip(pcr_samples, elution_samples):\n            m300.pick_up_tip()\n            m300.move_to(s.top())\n            ctx.max_speeds['Z'] /= supernatant_headspeed_modulator\n            ctx.max_speeds['A'] /= supernatant_headspeed_modulator\n            m300.aspirate(vol_elution, s.bottom(0.2))\n            m300.move_to(s.top())\n            ctx.max_speeds['Z'] *= supernatant_headspeed_modulator\n            ctx.max_speeds['A'] *= supernatant_headspeed_modulator\n            m300.dispense(m300.current_volume, d.bottom(0.5))\n            m300.move_to(d.bottom().move(Point(x=-2, z=3)))\n            m300.drop_tip()\n        m300.flow_rate.aspirate *= 5\n\n        magdeck.disengage()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "number of samples (1-96)",
            "name": "num_samples",
            "type": "int"
        },
        {
            "default": 20.0,
            "label": "source sample volume (in ul)",
            "name": "vol_sample",
            "type": "float"
        },
        {
            "default": 1.5,
            "label": "bead:reaction volume ratio",
            "name": "ratio_beads",
            "type": "float"
        },
        {
            "default": 200.0,
            "label": "EtOH wash volume (in ul)",
            "name": "vol_wash",
            "type": "float"
        },
        {
            "default": 50.0,
            "label": "elution volume (in ul)",
            "name": "vol_elution",
            "type": "float"
        },
        {
            "default": 3.0,
            "label": "bead separation time (in minutes)",
            "name": "time_settling",
            "type": "float"
        },
        {
            "label": "P20 multi-channel GEN2 pipette mount",
            "name": "m20_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P300 multi-channel GEN2 pipette mount",
            "name": "m300_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "steps to perform",
            "name": "perform_steps",
            "options": [
                {
                    "label": "PCR prep and cleanup",
                    "value": "pcr_prep,cleanup"
                },
                {
                    "label": "PCR prep only",
                    "value": "pcr_prep"
                },
                {
                    "label": "bead cleanup only",
                    "value": "cleanup"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "PCR plate on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "source sample plate on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "reagent reservoir on 4",
            "share": false,
            "slot": "4",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Nick <ndiehl@opentrons.com>",
        "protocolName": "PCR Prep and Magnetic Bead Cleanup",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "MagneticModuleContext at Magnetic Module GEN2 on 1 lw PCR plate on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "magdeck"
        }
    ]
}