{
    "content": "import math\n\nmetadata = {\n    'protocolName': 'Mass Spec Sample Prep',\n    'author': 'Nick <ndiehl@opentrons.com',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.12'\n}\n\n\ndef run(ctx):\n\n    num_samples, p1000_mount = get_values(  # noqa: F821\n        'num_samples', 'p1000_mount')\n\n    # labware\n    source_rack = ctx.load_labware(\n        'opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', '1',\n        'source tubes')\n    dest_rack = ctx.load_labware(\n        'opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', '2',\n        'destination tubes')\n    reservoir = ctx.load_labware('nest_12_reservoir_15ml', '4')\n    tipracks1000 = [\n        ctx.load_labware('opentrons_96_tiprack_1000ul', slot)\n        for slot in ['3', '5', '6', '7', '8', '9', '10', '11'][\n            :math.ceil(num_samples*2/96)]]\n\n    # pipettes\n    p1000 = ctx.load_instrument('p1000_single_gen2', p1000_mount,\n                                tip_racks=tipracks1000)\n\n    # define wells and volumes\n    num_tubes_per_replacement = len(source_rack.wells())\n    num_replacements = math.ceil(num_samples/num_tubes_per_replacement)\n    source_sets, dest_sets = [\n        [rack.wells()[:num_samples % num_tubes_per_replacement]\n         if r == num_replacements - 1\n         else rack.wells()\n         for r in range(num_replacements)]\n        for rack in [source_rack, dest_rack]\n    ]\n\n    mobile_phase_a = reservoir.rows()[0][0]\n\n    vol_supernatant = 900.0\n    vol_reconstitution = 100.0\n\n    # transfer precipitate\n    p1000.flow_rate.aspirate /= 5\n    for i, (source_set, dest_set) in enumerate(zip(source_sets, dest_sets)):\n        samples_per_set = len(source_set)\n        sample_start = (i+1)*num_tubes_per_replacement+1\n        sample_end = (i+1)*num_tubes_per_replacement+samples_per_set\n        for s, d in zip(source_set, dest_set):\n            p1000.transfer(vol_supernatant, s.bottom(3), d)\n        if i < num_replacements - 1:\n            msg = f'Place next set of samples {sample_start}-{sample_end} in \\\nslot 1 and fresh 1.5ml tubes in slot 2.'\n        else:\n            msg = 'Dry the samples to with a N2 dryer or SpeedVac with no \\\ntemp. Place samples 1-24 on slot 1 when complete.'\n        ctx.pause(msg)\n\n    # reconstitute in mobile phase A\n    p1000.flow_rate.aspirate *= 5\n    for i, source_set in enumerate(source_sets):\n        samples_per_set = len(source_set)\n        sample_start = (i+1)*num_tubes_per_replacement+1\n        sample_end = (i+1)*num_tubes_per_replacement+samples_per_set\n        for s in source_set:\n            p1000.transfer(vol_reconstitution, mobile_phase_a, s.bottom(3),\n                           mix_after=(5, 100))\n        if i < num_replacements - 1:\n            msg = f'Place next set of samples {sample_start}-{sample_end} in \\\nslot 1 and fresh 1.5ml tubes in slot 2.'\n            ctx.pause(msg)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "number of samples",
            "name": "num_samples",
            "type": "int"
        },
        {
            "label": "P1000 Single GEN2 mount",
            "name": "p1000_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "source tubes on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "destination tubes on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 4",
            "share": false,
            "slot": "4",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.12",
        "author": "Nick <ndiehl@opentrons.com",
        "protocolName": "Mass Spec Sample Prep",
        "source": "Custom Protocol Request"
    },
    "modules": []
}