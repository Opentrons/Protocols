{
    "content": "from opentrons import protocol_api\n\nmetadata = {\n    'protocolName': 'Human Islets - RT Barcoding',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.13'\n}\n\n\ndef run(ctx):\n\n    [m20_mount, m300_mount] = get_values(  # noqa: F821\n        \"m20_mount\", \"m300_mount\")\n\n    # modules\n    temp_mod = ctx.load_module('temperature module gen2', 1)\n    temp_mod.set_temperature(25)\n\n    # labware\n    samp_plate = temp_mod.load_labware(\n                                       'opentrons_96_aluminumblock_generic_pcr_strip_200ul',  # noqa: E501\n                                       1)\n\n    barcode_plate = ctx.load_labware(\n                                       'opentrons_96_aluminumblock_generic_pcr_strip_200ul',  # noqa: E501\n                                       2,\n                                       label='barcode plate')\n\n    pcr_strip_plate = ctx.load_labware(\n                                       'opentrons_96_aluminumblock_generic_pcr_strip_200ul',  # noqa: E501\n                                       3,\n                                       label='reagent plate')\n\n    reservoir = ctx.load_labware('nest_12_reservoir_15ml', 4)\n\n    tips = [ctx.load_labware('opentrons_96_filtertiprack_200ul', slot)\n            for slot in [5, 6, 7, 8, 9]]\n\n    tips20 = [ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n              for slot in [10, 11]]\n\n    # pipettes\n    m300 = ctx.load_instrument('p300_multi_gen2', m300_mount, tip_racks=tips)\n    m20 = ctx.load_instrument('p20_multi_gen2', m20_mount, tip_racks=tips20)\n\n    # mapping\n    trash = ctx.loaded_labwares[12].wells()[0].top()\n\n    wash_buff = reservoir.wells()[0]\n    smart_seq_3 = pcr_strip_plate.wells()[0]\n    pool_res_well = reservoir.wells()[-2]\n\n    samp_cols = samp_plate.rows()[0]\n    barcode_cols = barcode_plate.rows()[0]\n\n    def remove_super(vol):\n        for col in samp_cols:\n            pick_up()\n            m300.aspirate(vol, col)\n            m300.dispense(vol, trash)\n            m300.drop_tip()\n\n    def pick_up():\n        try:\n            m300.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            ctx.pause(f\"Replace empty tip rack for {m300}\")\n            m300.reset_tipracks()\n            m300.pick_up_tip()\n\n    # protocol\n    ctx.comment('\\n---------------ADD BARCODE----------------\\n\\n')\n    for s, d in zip(barcode_cols, samp_cols):\n        m20.pick_up_tip()\n        m20.aspirate(1, s)\n        m20.dispense(1, d)\n        m20.mix(3, 1, d)\n        m20.drop_tip()\n\n    temp_mod.set_temperature(72)\n    ctx.delay(minutes=10)\n    temp_mod.set_temperature(4)\n\n    ctx.comment('\\n---------------ADD MIX----------------\\n\\n')\n\n    for col in samp_cols:\n        m20.pick_up_tip()\n        m20.aspirate(2, smart_seq_3)\n        m20.dispense(2, col)\n        m20.mix(3, 3, d)\n        m20.drop_tip()\n\n    ctx.pause(\"\"\"\"\n                  Run thermocycler profile and place sample plate back\n                  on temperature module.\n                  \"\"\")\n\n    ctx.comment('\\n---------------ADD WASH BUFFER----------------\\n\\n')\n    m300.pick_up_tip()\n    for col in samp_cols:\n        m300.aspirate(60, wash_buff)\n        m300.dispense(60, col.top())\n    m300.drop_tip()\n\n    ctx.comment('\\n---------------ADD SMART SEQ3----------------\\n\\n')\n\n    for _ in range(3):\n        m300.pick_up_tip()\n        m300.aspirate(100, smart_seq_3)\n        m300.dispense(100, samp_plate.rows()[0][0])\n        m300.mix(5, 120, samp_plate.rows()[0][0])\n        m300.aspirate(150, samp_plate.rows()[0][0])\n        m300.dispense(50, pool_res_well)\n        m300.dispense(100, samp_plate.rows()[0][1])\n        for col in range(1, 11):\n            m300.mix(5, 120, samp_plate.rows()[0][col])\n            m300.aspirate(150, samp_plate.rows()[0][col])\n            m300.dispense(50, pool_res_well)\n            m300.dispense(100, samp_plate.rows()[0][col+1])\n        m300.mix(5, 120, samp_plate.rows()[0][-1])\n        m300.aspirate(150, samp_plate.rows()[0][-1])  # move entire col 12\n        m300.dispense(150, pool_res_well)\n        m300.drop_tip()\n        ctx.comment('\\n')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "P20 Multi-Channel Mount",
            "name": "m20_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P300 Multi-Channel Mount",
            "name": "m300_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "1 on Temperature Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
        },
        {
            "name": "barcode plate on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
        },
        {
            "name": "reagent plate on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 4",
            "share": false,
            "slot": "4",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.13",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Human Islets - RT Barcoding",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "TemperatureModuleContext at Temperature Module GEN2 on 1 lw 1 on Temperature Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "tempdeck"
        }
    ]
}