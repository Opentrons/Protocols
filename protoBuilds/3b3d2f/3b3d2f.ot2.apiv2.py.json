{
    "content": "import csv\n\nmetadata = {\n    'protocolName': 'Plate Loading for ddPCR',\n    'author': 'Steve <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    [plate_count, clearance_ddpcr_plate, clearance_water, plate_map_1_csv,\n     plate_map_2_csv, plate_map_3_csv, plate_map_4_csv\n     ] = get_values(  # noqa: F821\n        \"plate_count\", \"clearance_ddpcr_plate\", \"clearance_water\",\n        \"plate_map_1_csv\", \"plate_map_2_csv\", \"plate_map_3_csv\",\n        \"plate_map_4_csv\")\n\n    plate_map_csv = [\n     plate_map_1_csv, plate_map_2_csv, plate_map_3_csv, plate_map_4_csv]\n\n    # tips, p20 single\n    tips20 = [ctx.load_labware(\n     'opentrons_96_filtertiprack_20ul', str(slot)) for slot in [10, 11]]\n    p20s = ctx.load_instrument(\"p20_single_gen2\", 'right', tip_racks=tips20)\n\n    # ddPCR plate and temperature block\n    [ddpcr_plate] = [\n     ctx.load_labware(\n      labware, str(slot), display_name) for labware, slot, display_name in zip(\n      ['biorad_96_wellplate_200ul_pcr'], [5], ['ddPCR Plate'])]\n    temp = ctx.load_module('temperature module gen2', '3')\n    tube_block = temp.load_labware(\n     'opentrons_24_aluminumblock_nest_2ml_snapcap', '4 Degree Tube Block')\n    temp.set_temperature(4)\n\n    # to yield next available temperature block well\n    def block_wells():\n        well_list = tube_block.wells()+[\"reload block\"]+tube_block.wells()\n        yield from well_list\n\n    # to load ddPCR plate according to uploaded plate map\n    def load_plate(text_string, source, clearance):\n        for key, column in zip(map_columns.keys(), ddpcr_plate.columns()):\n            for index, value in enumerate(map_columns[key]):\n                if text_string in value:\n                    p20s.pick_up_tip()\n                    p20s.aspirate(5.5, source.bottom(clearance))\n                    p20s.dispense(\n                     5.5, column[index].bottom(clearance_ddpcr_plate))\n                    slow_tip_withdrawal(p20s, column[index])\n                    p20s.drop_tip()\n\n    # helper function to apply speed limit to departing tip\n    def slow_tip_withdrawal(current_pipette, well_location, to_center=False):\n        if current_pipette.mount == 'right':\n            axis = 'A'\n        else:\n            axis = 'Z'\n        ctx.max_speeds[axis] = 10\n        if to_center is False:\n            current_pipette.move_to(well_location.top())\n        else:\n            current_pipette.move_to(well_location.center())\n        ctx.max_speeds[axis] = None\n\n    for rep in range(plate_count):\n\n        # to yield next available well\n        block_well = block_wells()\n\n        ctx.delay(seconds=10)\n        ctx.pause(\"\"\"Please load reaction mix (first), water (second), then\n                     plate map number {} samples (third and beyond) in\n                     column-wise order like A1-D1, A2-D2 etc. into pre-chilled\n                     4 degree temperature block. If samples exceed block\n                     capacity, the OT-2 will automatically pause for\n                     re-loading at the right time. Please make sure the tip\n                     boxes are full to start when loading a new plate.\n                     \"\"\".format(str(rep+1)))\n        p20s.reset_tipracks()\n\n        # plate map data lines from uploaded csv\n        first_empty_line, *csv_lines = plate_map_csv[rep].splitlines()\n        map_columns = {}\n        for line in csv.DictReader(csv_lines):\n            for num in range(12):\n                if str(num+1) in map_columns:\n                    map_columns[str(num+1)].append(line[str(num+1)])\n                else:\n                    map_columns[str(num+1)] = []\n                    map_columns[str(num+1)].append(line[str(num+1)])\n\n        # number of wells to fill based on plate map\n        wells_to_fill = 0\n        for key in map_columns.keys():\n            for text_string in map_columns[key]:\n                if text_string:\n                    wells_to_fill += 1\n\n        # starting clearance to avoid over-immersion of tip\n        starting_clearance = (wells_to_fill*0.24) + 1\n\n        # step 1: 16.5 ul rxn mix to ddPCR plate wells receiving a sample\n        reaction_mixture = next(block_well)\n        p20s.pick_up_tip()\n        p20s.aspirate(\n         3.5, reaction_mixture.bottom(starting_clearance), rate=0.5)\n        ctx.delay(seconds=2)\n        for key, column in zip(map_columns.keys(), ddpcr_plate.columns()):\n            for index, value in enumerate(map_columns[key]):\n                if value:\n                    p20s.aspirate(16.5, reaction_mixture.bottom(\n                     starting_clearance), rate=0.5)\n                    ctx.delay(seconds=2)\n                    slow_tip_withdrawal(p20s, reaction_mixture)\n                    starting_clearance -= 0.24\n                    p20s.dispense(16.5, column[index].bottom(\n                     clearance_ddpcr_plate), rate=0.5)\n                    slow_tip_withdrawal(p20s, column[index])\n                    ctx.delay(seconds=2)\n                    if starting_clearance < 1:\n                        starting_clearance = 1\n        p20s.drop_tip()\n\n        # step 2: add 5.5 ul water to NTC wells shown in plate map\n        water = next(block_well)\n        load_plate(\"NTC\", water, clearance_water)\n\n        # step 3: add 5.5 ul sample RNA template to wells shown in plate map\n        replicate = None\n        for key, column in zip(map_columns.keys(), ddpcr_plate.columns()):\n            for index, value in enumerate(map_columns[key]):\n                if \"Sample\" in value:\n                    if value != replicate:\n                        source = next(block_well)\n                    if source == \"reload block\":\n                        ctx.pause(\"\"\"Please load remaining samples in\n                                     column-wise order starting with A1 like\n                                     A1-D1, A2-D2 etc.) and\n                                     postive control (last) in temperature\n                                     block.\"\"\")\n                        source = next(block_well)\n                    p20s.pick_up_tip()\n                    p20s.aspirate(5.5, source.bottom(clearance_water))\n                    p20s.dispense(\n                     5.5, column[index].bottom(clearance_ddpcr_plate))\n                    slow_tip_withdrawal(p20s, column[index])\n                    p20s.drop_tip()\n                    replicate = value\n\n        # step 4: add 5.5 ul positive control RNA to wells shown in plate map\n        pos_ctrl = next(block_well)\n        load_plate(\"+Control\", pos_ctrl, clearance_water)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "Number of ddPCR Plates to Load (1-4)",
            "name": "plate_count",
            "options": [
                {
                    "label": "Load 1 ddPCR Plate",
                    "value": 1
                },
                {
                    "label": "Load 2 ddPCR Plates",
                    "value": 2
                },
                {
                    "label": "Load 3 ddPCR Plates",
                    "value": 3
                },
                {
                    "label": "Load 4 ddPCR Plates",
                    "value": 4
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 2,
            "label": "Default Well Bottom Clearance for ddPCR Plate (mm)",
            "name": "clearance_ddpcr_plate",
            "type": "float"
        },
        {
            "default": 8,
            "label": "Default Well Bottom Clearance for Water Tube (mm)",
            "name": "clearance_water",
            "type": "float"
        },
        {
            "default": ",,,,,,,Phi6 Plate without Recovery Efficiency test Samples,,,,,\n,1,2,3,4,5,6,7,8,9,10,11,12\nA,Sample1,Sample3,Sample6,Sample9,Sample11,Ext.Control,,,,,,\nB,Sample1,Sample4,Sample6,Sample9,Neg.Control1,Ext.Control,,,,,,\nC,Sample1,Sample4,Sample7,Sample9,Neg.Control1,NTC,,,,,,\nD,Sample2,Sample4,Sample7,Sample10,Neg.Control1,NTC,,,,,,\nE,Sample2,Sample5,Sample7,Sample10,Neg.Control2,NTC,,,,,,\nF,Sample2,Sample5,Sample8,Sample10,Neg.Control2,CoV2+Control,,,,,,\nG,Sample3,Sample5,Sample8,Sample11,Neg.Control2,CoV2+Control,,,,,,\nH,Sample3,Sample6,Sample8,Sample11,Ext.Control,CoV2+Control,,,,,,\n",
            "label": "Plate Map for 1st ddPCR Plate (Upload CSV-formatted Excel File)",
            "name": "plate_map_1_csv",
            "type": "textFile"
        },
        {
            "default": ",,,,,,,N1N2 plate,,,,,\n,1,2,3,4,5,6,7,8,9,10,11,12\nA,Sample1,Sample3,Sample6,Sample9,Sample11,Sample14,Sample17,Sample19,Sample22,Sample25,Sample27,Ext.Control\nB,Sample1,Sample4,Sample6,Sample9,Sample12,Sample14,Sample17,Sample20,Sample22,Sample25,Neg.Control1,Ext.Control\nC,Sample1,Sample4,Sample7,Sample9,Sample12,Sample15,Sample17,Sample20,Sample23,Sample25,Neg.Control1,NTC\nD,Sample2,Sample4,Sample7,Sample10,Sample12,Sample15,Sample18,Sample20,Sample23,Sample26,Neg.Control1,NTC\nE,Sample2,Sample5,Sample7,Sample10,Sample13,Sample15,Sample18,Sample21,Sample23,Sample26,Neg.Control2,NTC\nF,Sample2,Sample5,Sample8,Sample10,Sample13,Sample16,Sample18,Sample21,Sample24,Sample26,Neg.Control2,CoV2+Control\nG,Sample3,Sample5,Sample8,Sample11,Sample13,Sample16,Sample19,Sample21,Sample24,Sample27,Neg.Control2,CoV2+Control\nH,Sample3,Sample6,Sample8,Sample11,Sample14,Sample16,Sample19,Sample22,Sample24,Sample27,Ext.Control,CoV2+Control\n",
            "label": "Plate Map for 2nd ddPCR Plate (Upload CSV-formatted Excel File)",
            "name": "plate_map_2_csv",
            "type": "textFile"
        },
        {
            "default": ",,,,,,,N1N2 plate,,,,,\n,1,2,3,4,5,6,7,8,9,10,11,12\nA,Sample1,Sample3,Sample6,Sample9,Sample11,Sample14,Sample17,Sample19,Sample22,Sample25,Sample27,Ext.Control\nB,Sample1,Sample4,Sample6,Sample9,Sample12,Sample14,Sample17,Sample20,Sample22,Sample25,Neg.Control1,Ext.Control\nC,Sample1,Sample4,Sample7,Sample9,Sample12,Sample15,Sample17,Sample20,Sample23,Sample25,Neg.Control1,NTC\nD,Sample2,Sample4,Sample7,Sample10,Sample12,Sample15,Sample18,Sample20,Sample23,Sample26,Neg.Control1,NTC\nE,Sample2,Sample5,Sample7,Sample10,Sample13,Sample15,Sample18,Sample21,Sample23,Sample26,Neg.Control2,NTC\nF,Sample2,Sample5,Sample8,Sample10,Sample13,Sample16,Sample18,Sample21,Sample24,Sample26,Neg.Control2,CoV2+Control\nG,Sample3,Sample5,Sample8,Sample11,Sample13,Sample16,Sample19,Sample21,Sample24,Sample27,Neg.Control2,CoV2+Control\nH,Sample3,Sample6,Sample8,Sample11,Sample14,Sample16,Sample19,Sample22,Sample24,Sample27,Ext.Control,CoV2+Control\n",
            "label": "Plate Map for 3rd ddPCR Plate (Upload CSV-formatted Excel File)",
            "name": "plate_map_3_csv",
            "type": "textFile"
        },
        {
            "default": ",,,,,,,N1N2 plate,,,,,\n,1,2,3,4,5,6,7,8,9,10,11,12\nA,Sample1,Sample3,Sample6,Sample9,Sample11,Sample14,Sample17,Sample19,Sample22,Sample25,Sample27,Ext.Control\nB,Sample1,Sample4,Sample6,Sample9,Sample12,Sample14,Sample17,Sample20,Sample22,Sample25,Neg.Control1,Ext.Control\nC,Sample1,Sample4,Sample7,Sample9,Sample12,Sample15,Sample17,Sample20,Sample23,Sample25,Neg.Control1,NTC\nD,Sample2,Sample4,Sample7,Sample10,Sample12,Sample15,Sample18,Sample20,Sample23,Sample26,Neg.Control1,NTC\nE,Sample2,Sample5,Sample7,Sample10,Sample13,Sample15,Sample18,Sample21,Sample23,Sample26,Neg.Control2,NTC\nF,Sample2,Sample5,Sample8,Sample10,Sample13,Sample16,Sample18,Sample21,Sample24,Sample26,Neg.Control2,CoV2+Control\nG,Sample3,Sample5,Sample8,Sample11,Sample13,Sample16,Sample19,Sample21,Sample24,Sample27,Neg.Control2,CoV2+Control\nH,Sample3,Sample6,Sample8,Sample11,Sample14,Sample16,Sample19,Sample22,Sample24,Sample27,Ext.Control,CoV2+Control\n",
            "label": "Plate Map for 4th ddPCR Plate (Upload CSV-formatted Excel File)",
            "name": "plate_map_4_csv",
            "type": "textFile"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "4 Degree Tube Block on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_24_aluminumblock_nest_2ml_snapcap"
        },
        {
            "name": "ddPCR Plate on 5",
            "share": false,
            "slot": "5",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Steve <protocols@opentrons.com>",
        "protocolName": "Plate Loading for ddPCR",
        "source": "Custom Protocol Request"
    },
    "modules": []
}