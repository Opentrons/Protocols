{
    "content": "import math\n\n# metadata\nmetadata = {\n    'protocolName': 'Sample Aliquoting',\n    'author': 'Nick <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.0'\n}\n\n\ndef run(ctx):\n\n    # parameters\n    [p1000_mount] = get_values(  # noqa: F821\n        'p1000_mount')\n\n    # labware\n    rack15 = ctx.load_labware(\n        'opentrons_15_tuberack_falcon_15ml_conical', '1', '15ml tuberack')\n    rack2 = ctx.load_labware(\n        'opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap', '2',\n        '2ml tuberack')\n    tiprack1000 = ctx.load_labware(\n        'opentrons_96_tiprack_1000ul', '4', '1000ul tiprack')\n\n    # pipettes\n    p1000 = ctx.load_instrument(\n        'p1000_single_gen2', p1000_mount, tip_racks=[tiprack1000])\n\n    # setup\n    srcs = {\n        rack15.columns()[0][0]: 60,\n        rack15.columns()[0][1]: 60\n    }\n    dest_sets = [\n        [well for row in rack2.rows()[i*2:i*2+2] for well in row]\n        for i in range(2)\n    ]\n\n    def h_track(src, dv):\n        dh = (dv/(math.pi*(src.diameter/2)**2))*1.05\n        h = srcs[src]\n        srcs[src] = h - dh if h - dh >= 10 else 10\n        return src.bottom(srcs[src])\n\n    # perform transfers\n    for s, dest_set in zip(srcs, dest_sets):\n        p1000.pick_up_tip()\n        for i in range(4):\n            p1000.distribute(\n                300,\n                h_track(s, 900),\n                [d.top() for d in dest_set[i*3:i*3+3]],\n                disposal_vol=0,\n                new_tip='never'\n            )\n            if i < 3:\n                p1000.blow_out(s.top())\n        p1000.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "P1000 GEN2 single-channel pipette mount",
            "name": "p1000_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "15ml tuberack on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_15_tuberack_falcon_15ml_conical"
        },
        {
            "name": "2ml tuberack on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "1000ul tiprack on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.0",
        "author": "Nick <protocols@opentrons.com>",
        "protocolName": "Sample Aliquoting",
        "source": "Custom Protocol Request"
    },
    "modules": []
}