{
    "content": "import math\nfrom opentrons import protocol_api\n\nmetadata = {\n    'protocolName': 'Drug Release Time Point Testing',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'apiLevel': '2.13'\n}\n\n\n# Start protocol\ndef run(ctx):\n\n    [vol_transfer, quadrant, mount_p1000, tiprack_start,\n     tipwell_start] = get_values(  # noqa:F821\n        'vol_transfer', 'quadrant', 'mount_p1000', 'tiprack_start',\n        'tipwell_start')\n\n    # labware\n    plate24 = ctx.load_labware('corning_24_wellplate_3.4ml_flat', '1',\n                               'source plate')\n    plates96 = [\n        ctx.load_labware('corning_96_wellplate_360ul_flat', slot,\n                         f'destination plate {i+1}')\n        for i, slot in enumerate(['2', '3'])]\n    reservoir = ctx.load_labware('agilent_1_reservoir_290ml', '4')\n    tipracks1000 = [\n        ctx.load_labware('opentrons_96_filtertiprack_1000ul', slot)\n        for slot in ['5', '6', '8', '9']]\n\n    # pipette\n    p1000 = ctx.load_instrument(\n        'p1000_single_gen2',\n        mount_p1000,\n        tip_racks=tipracks1000)\n\n    # setup locations\n    sources = plate24.wells()\n    all_columns = [col for plate in plates96 for col in plate.columns()]\n    quadrants = [\n        [well\n         for col in all_columns[plate_ind*12+j*6:plate_ind*12+(j+1)*6]\n         for well in col[i*4:(i+1)*4]]\n        for plate_ind in range(2)\n        for i in range(2)\n        for j in range(2)\n    ]\n    quadrant_keys = ['1A1', '1A7', '1E1', '1E7', '1A1', '1A7', '1E1', '1E7']\n    quadrant_map = {\n        key: quadrant\n        for key, quadrant in zip(quadrant_keys, quadrants)\n    }\n    buffer = reservoir.wells()[0]\n\n    # select quadrant\n    dest_quadrant = quadrant_map[quadrant]\n\n    # select starting tip\n    p1000.starting_tip = ctx.loaded_labwares[\n        int(tiprack_start)].wells_by_name()[tipwell_start]\n\n    # void all other tips in the tipracks\n    all_tips = [tip for rack in p1000.tip_racks for tip in rack.wells()]\n    for tip in all_tips[:all_tips.index(p1000.starting_tip)]:\n        tip.has_tip = False\n\n    def pick_up(pip=p1000):\n        try:\n            pip.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            pip.pause(\"Replace the tips\")\n            pip.reset_tipracks()\n            pip.pick_up_tip()\n\n    def slow_withdraw(well, pip=p1000):\n        ctx.max_speeds['A'] = 25\n        ctx.max_speeds['Z'] = 25\n        pip.move_to(well.top())\n        del ctx.max_speeds['A']\n        del ctx.max_speeds['Z']\n\n    # transfer from 24-wel to 96-well quadrant\n    for s, d in zip(sources, dest_quadrant):\n        pick_up()\n        p1000.flow_rate.aspirate = 50\n        p1000.aspirate(vol_transfer, s.bottom(4))\n        p1000.flow_rate.aspirate = 274.7\n        p1000.touch_tip(s)\n        p1000.dispense(vol_transfer, d)\n        p1000.blow_out(d.bottom(1))\n        slow_withdraw(d)\n        p1000.drop_tip()\n\n    num_dests_per_asp = int(\n        p1000.tip_racks[0].wells()[0].max_volume/vol_transfer)\n    num_asps = math.ceil(len(sources)/num_dests_per_asp)\n    buffer_distribution_sets = [\n        sources[i*num_dests_per_asp:(i+1)*num_dests_per_asp]\n        if i < num_asps - 1\n        else sources[i*num_dests_per_asp:]\n        for i in range(num_asps)]\n\n    pick_up()\n    for b_d_set in buffer_distribution_sets:\n        p1000.aspirate(vol_transfer*len(b_d_set), buffer)\n        slow_withdraw(buffer)\n        for i, d in enumerate(b_d_set):\n            p1000.dispense(vol_transfer, d.top(-1))\n            if i == len(b_d_set) - 1:\n                p1000.blow_out(d.top(-1))\n    p1000.return_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 100.0,
            "label": "transfer volume (in ul)",
            "name": "vol_transfer",
            "type": "float"
        },
        {
            "label": "destination quadrant",
            "name": "quadrant",
            "options": [
                {
                    "label": "plate 1, top left (1A1)",
                    "value": "1A1"
                },
                {
                    "label": "plate 1, top right (1A7)",
                    "value": "1A7"
                },
                {
                    "label": "plate 1, bottom left (1E1)",
                    "value": "1E1"
                },
                {
                    "label": "plate 1, bottom right (1E7)",
                    "value": "1E7"
                },
                {
                    "label": "plate 1, top left (2A1)",
                    "value": "2A1"
                },
                {
                    "label": "plate 1, top right (2A7)",
                    "value": "2A7"
                },
                {
                    "label": "plate 1, bottom left (2E1)",
                    "value": "2E1"
                },
                {
                    "label": "plate 1, bottom right (2E7)",
                    "value": "2E7"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P1000 single-channel GEN2 pipette mount",
            "name": "mount_p1000",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P1000 starting tiprack",
            "name": "tiprack_start",
            "options": [
                {
                    "label": "5",
                    "value": "5"
                },
                {
                    "label": "6",
                    "value": "6"
                },
                {
                    "label": "8",
                    "value": "8"
                },
                {
                    "label": "9",
                    "value": "9"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": "A1",
            "label": "P1000 starting tip well (A1-H12",
            "name": "tipwell_start",
            "type": "str"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "source plate on 1",
            "share": false,
            "slot": "1",
            "type": "corning_24_wellplate_3.4ml_flat"
        },
        {
            "name": "destination plate 1 on 2",
            "share": false,
            "slot": "2",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "destination plate 2 on 3",
            "share": false,
            "slot": "3",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Agilent 1 Well Reservoir 290 mL on 4",
            "share": false,
            "slot": "4",
            "type": "agilent_1_reservoir_290ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 1000 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_1000ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 1000 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_1000ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 1000 \u00b5L on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_96_filtertiprack_1000ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 1000 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.13",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Drug Release Time Point Testing"
    },
    "modules": []
}