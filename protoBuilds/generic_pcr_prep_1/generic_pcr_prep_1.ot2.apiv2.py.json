{
    "content": "from opentrons import protocol_api\n\nmetadata = {\n    'protocolName': 'Generic PCR Prep part 1 - Mastermix creation',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'   # CHECK IF YOUR API LEVEL HERE IS UP TO DATE\n                         # IN SECTION 5.2 OF THE APIV2 \"VERSIONING\"\n}\n\n\ndef run(ctx: protocol_api.ProtocolContext):\n\n    [\n      left_pipette_lname,\n      right_pipette_lname,\n      use_filter_tips_left,\n      use_filter_tips_right,\n      labware_1_lname,\n      labware_2_lname,\n      twelve_well_resv_lname,\n      tmod_1_lname,\n      tmod_2_lname,\n      master_mix_csv\n    ] = get_values(  # noqa: F821 (<--- DO NOT REMOVE!)\n      \"left_pipette_lname\",\n      \"right_pipette_lname\",\n      \"use_filter_tips_left\",\n      \"use_filter_tips_right\",\n      \"labware_1_lname\",\n      \"labware_2_lname\",\n      \"twelve_well_resv_lname\",\n      \"tmod_1_lname\",\n      \"tmod_2_lname\",\n      \"master_mix_csv\")\n\n    if not left_pipette_lname and not right_pipette_lname:\n        raise Exception('You have to select at least 1 pipette.')\n\n    labware_1_slot = '1'\n    labware_2_slot = '2'\n    reservoir_slot = '3'\n    tiprack_left_slots = '4'\n    tiprack_right_slots = '5'\n\n    # load modules\n    '''\n\n    Add your modules here with:\n\n    module_name = ctx.load_module('{module_loadname}', '{slot number}')\n\n    Note: if you are loading a thermocycler, you do not need to specify\n    a slot number - thermocyclers will always occupy slots 7, 8, 10, and 11.\n\n    For all other modules, you can load them on slots 1, 3, 4, 6, 7, 9, 10.\n\n    '''\n    tmod_list = []\n    for tmod_lname, slot in zip([tmod_1_lname, tmod_2_lname],\n                                [labware_1_slot, labware_2_slot]):\n        if tmod_lname:\n            tmod = ctx.load_module(tmod_lname, slot)\n            tmod_list.append(tmod)\n        else:\n            tmod_list.append(None)\n    tmod1, tmod2 = tmod_list\n\n    '''\n\n    Add your labware here with:\n\n    labware_name = ctx.load_labware('{loadname}', '{slot number}')\n\n    If loading labware on a module, you can load with:\n\n    labware_name = module_name.load_labware('{loadname}')\n    where module_name is defined above.\n\n    '''\n    # load labware\n    labware_list = []\n    for labware_lname, tmod, slot, name in \\\n        zip([labware_1_lname, labware_2_lname],\n            [tmod1, tmod2],\n            [labware_1_slot, labware_2_slot],\n            [\"Tube rack 1\", \"Tube rack 2\"]):\n        if labware_lname:\n            if tmod:\n                labware_list.append(tmod.load_labware(labware_lname, name))\n            else:\n                labware_list.append(ctx.load_labware(labware_lname, slot,\n                                                     name))\n        else:\n            labware_list.append(None)\n    labware1, labware2 = labware_list\n\n    res12 = ctx.load_labware(\n        twelve_well_resv_lname, reservoir_slot, '12-channel reservoir')\n\n    reagents = {\n        '1': labware1,\n        '2': labware2,\n        '3': res12\n    }\n    # load tipracks\n    '''\n\n    Add your tipracks here as a list:\n\n    For a single tip rack:\n\n    tiprack_name = [ctx.load_labware('{loadname}', '{slot number}')]\n\n    For multiple tip racks of the same type:\n\n    tiprack_name = [ctx.load_labware('{loadname}', 'slot')\n                     for slot in ['1', '2', '3']]\n\n    If two different tipracks are on the deck, use convention:\n    tiprack[number of microliters]\n    e.g. tiprack10, tiprack20, tiprack200, tiprack300, tiprack1000\n\n    '''\n\n    tiprack_lnames = {\n        \"p20s_filtered\": \"opentrons_96_filtertiprack_20ul\",\n        \"p20s_nonfiltered\": \"opentrons_96_tiprack_20ul\",\n        \"p300s_filtered\": \"opentrons_96_filtertiprack_200ul\",\n        \"p300s_nonfiltered\": \"opentrons_96_tiprack_300ul\",\n        \"p1000s_filtered\": \"opentrons_96_filtertiprack_1000ul\",\n        \"p1000s_nonfiltered\": \"opentrons_96_tiprack_1000ul\"\n    }\n\n    tipracks = []\n    for pip_lname, is_filtered, slot in zip([left_pipette_lname,\n                                            right_pipette_lname],\n                                            [use_filter_tips_left,\n                                             use_filter_tips_right],\n                                            [tiprack_left_slots,\n                                             tiprack_right_slots]):\n        if \"20_\" in pip_lname:\n            if is_filtered:\n                tipracks.append(\n                    ctx.load_labware(tiprack_lnames[\"p20s_filtered\"], slot))\n            else:\n                tipracks.append(\n                    ctx.load_labware(tiprack_lnames[\"p20s_nonfiltered\"], slot))\n        elif \"300_\" in pip_lname:\n            if is_filtered:\n                tipracks.append(\n                    ctx.load_labware(tiprack_lnames[\"p300s_filtered\"], slot))\n            else:\n                tipracks.append(\n                    ctx.load_labware(tiprack_lnames[\"p300s_nonfiltered\"],\n                                     slot))\n        elif \"1000_\" in pip_lname:\n            if is_filtered:\n                tipracks.append(\n                    ctx.load_labware(tiprack_lnames[\"p100s_filtered\"], slot))\n            else:\n                tipracks.append(\n                    ctx.load_labware(tiprack_lnames[\"p1000s_nonfiltered\"],\n                                     slot))\n        else:\n            tipracks.append(None)\n    tiprack_l, tiprack_r = tipracks\n\n    # load instrument\n    '''\n    Nomenclature for pipette:\n\n    use 'p'  for single-channel, 'm' for multi-channel,\n    followed by number of microliters.\n\n    p20, p300, p1000 (single channel pipettes)\n    m20, m300 (multi-channel pipettes)\n\n    If loading pipette, load with:\n\n    ctx.load_instrument(\n                        '{pipette api load name}',\n                        pipette_mount (\"left\", or \"right\"),\n                        tip_racks=tiprack\n                        )\n    '''\n    pipette_l = None\n    pipette_r = None\n\n    for pip, mount, tiprack in zip(\n            [left_pipette_lname, right_pipette_lname],\n            ['left', 'right'],\n            [tiprack_l, tiprack_r]):\n\n        if pip:\n            if mount == 'left':\n                pipette_l = ctx.load_instrument(\n                    pip, mount, tip_racks=[tiprack])\n            else:\n                pipette_r = ctx.load_instrument(\n                    pip, mount, tip_racks=[tiprack])\n\n    # pipette functions   # INCLUDE ANY BINDING TO CLASS\n    '''\n\n    Define all pipette functions, and class extensions here.\n    These may include but are not limited to:\n\n    - Custom pickup functions\n    - Custom drop tip functions\n    - Custom Tip tracking functions\n    - Custom Trash tracking functions\n    - Slow tip withdrawal\n\n    For any functions in your protocol, describe the function as well as\n    describe the parameters which are to be passed in as a docstring below\n    the function (see below).\n\n    def pick_up(pipette):\n        \"\"\"`pick_up()` will pause the protocol when all tip boxes are out of\n        tips, prompting the user to replace all tip racks. Once tipracks are\n        reset, the protocol will start picking up tips from the first tip\n        box as defined in the slot order when assigning the labware definition\n        for that tip box. `pick_up()` will track tips for both pipettes if\n        applicable.\n\n        :param pipette: The pipette desired to pick up tip\n        as definited earlier in the protocol (e.g. p300, m20).\n        \"\"\"\n        try:\n            pipette.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            ctx.pause(\"Replace empty tip racks\")\n            pipette.reset_tipracks()\n            pipette.pick_up_tip()\n\n    '''\n    def transfer(pipette, vol, source, dest, **transfer_kwargs):\n        try:\n            pipette.transfer(vol, source, dest, **transfer_kwargs)\n        except protocol_api.labware.OutOfTipsError:\n            ctx.pause(\"Replace empty tip racks\")\n            pipette.reset_tipracks()\n            pipette.transfer(vol, source, dest, **transfer_kwargs)\n\n    # helper functions\n    '''\n    Define any custom helper functions outside of the pipette scope here, using\n    the convention seen above.\n\n    e.g.\n\n    def remove_supernatant(vol, index):\n        \"\"\"\n        function description\n\n        :param vol:\n\n        :param index:\n        \"\"\"\n\n\n    '''\n\n    # reagents\n\n    '''\n    Define where all reagents are on the deck using the labware defined above.\n\n    e.g.\n\n    water = reservoir12.wells()[-1]\n    waste = reservoir.wells()[0]\n    samples = plate.rows()[0][0]\n    dnase = tuberack.wells_by_name()['A4']\n\n    '''\n\n    # plate, tube rack maps\n\n    '''\n    Define any plate or tube maps here.\n\n    e.g.\n\n    plate_wells_by_row = [well for row in plate.rows() for well in row]\n\n    '''\n\n    # protocol\n\n    '''\n\n    Include header sections as follows for each \"section\" of your protocol.\n\n    Section can be defined as a step in a bench protocol.\n\n    e.g.\n\n    ctx.comment('\\n\\nMOVING MASTERMIX TO SAMPLES IN COLUMNS 1-6\\n')\n\n    for .... in ...:\n        ...\n        ...\n\n    ctx.comment('\\n\\nRUNNING THERMOCYCLER PROFILE\\n')\n\n    ...\n    ...\n    ...\n\n\n    '''\n\n    # determine which pipette has the smaller volume range\n    pip_s, pip_l, pipette = [None] * 3\n    if pipette_l and pipette_r:\n        if left_pipette_lname == right_pipette_lname:\n            pip_s = pipette_l\n            pip_l = pipette_r\n        else:\n            if pipette_l.max_volume < pipette_r.max_volume:\n                pip_s, pip_l = pipette_l, pipette_r\n            else:\n                pip_s, pip_l = pipette_r, pipette_l\n    else:\n        pipette = pipette_l if pipette_l else pipette_r\n\n    # destination\n    mastermix_dest = res12.wells()[0]\n\n    info_list = [\n        [cell.strip() for cell in line.split(',')]\n        for line in master_mix_csv.splitlines()[1:] if line\n    ]\n\n    for line in info_list:\n        ctx.comment('Transferring ' + line[0] + ' to mastermix well')\n        source = reagents[line[1]].wells(line[2].upper())\n        vol = float(line[3])\n        if pipette_l and pipette_r:\n            if vol <= pip_s.max_volume:\n                pipette = pip_s\n            else:\n                pipette = pip_l\n        transfer(pipette, vol, source, mastermix_dest)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "right pipette type",
            "name": "right_pipette_lname",
            "options": [
                {
                    "label": "GEN2 P1000 Single",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "GEN2 P300 Single",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "GEN2 P20 Single",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "None",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "left pipette type",
            "name": "left_pipette_lname",
            "options": [
                {
                    "label": "GEN2 P1000 Single",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "GEN2 P300 Single",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "GEN2 P20 Single",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "None",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Left pipette: Filter or regular tips?",
            "name": "use_filter_tips_left",
            "options": [
                {
                    "label": "Regular tips",
                    "value": false
                },
                {
                    "label": "Filter tips",
                    "value": true
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Right pipette: Filter or regular tips?",
            "name": "use_filter_tips_right",
            "options": [
                {
                    "label": "Regular tips",
                    "value": false
                },
                {
                    "label": "Filter tips",
                    "value": true
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Reagent labware 1",
            "name": "labware_1_lname",
            "options": [
                {
                    "label": "Opentrons 24 Tube Rack with NEST 0.5 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_0.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 2 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with Eppendorf 1.5 mL Safe-Lock Snapcap",
                    "value": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap",
                    "value": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with Generic 2 mL Screwcap",
                    "value": "opentrons_24_tuberack_generic_2ml_screwcap"
                },
                {
                    "label": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "NEST 96 Well Plate 200 \u00b5L Flat",
                    "value": "nest_96_wellplate_200ul_flat"
                },
                {
                    "label": "Bio-Rad 96 Well Plate 200 \u00b5L PCR",
                    "value": "biorad_96_wellplate_200ul_pcr"
                },
                {
                    "label": "Corning 96 well Plate 360 \u00b5L Flat",
                    "value": "corning_96_wellplate_360_ul_flat"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with Generic 2 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_generic_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 0.5 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_0.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 1.5 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 2 mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 2 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_screwcap"
                },
                {
                    "label": "Opentrons 96 Well Aluminum Block with Bio-Rad Well Plate 200 \u00b5L",
                    "value": "opentrons_96_aluminumblock_biorad_wellplate_200ul"
                },
                {
                    "label": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L",
                    "value": "opentrons_96_aluminumblock_nest_wellplate_100ul"
                },
                {
                    "label": "Opentrons 96 Well Aluminum Block with Generic PCR Strip 200 \u00b5L",
                    "value": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
                },
                {
                    "label": "NEST 96 Deepwell plate 2 mL",
                    "value": "nest_96_wellplate_2ml_deep"
                },
                {
                    "label": "USA Scientific 96 Deep well Plate 2.4 mL",
                    "value": "usascientific_96_wellplate_2.4ml_deep"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Reagent labware 2 (optional)",
            "name": "labware_2_lname",
            "options": [
                {
                    "label": "Opentrons 24 Tube Rack with Eppendorf 1.5 mL Safe-Lock Snapcap",
                    "value": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
                },
                {
                    "label": "None",
                    "value": null
                },
                {
                    "label": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap",
                    "value": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with Generic 2 mL Screwcap",
                    "value": "opentrons_24_tuberack_generic_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 0.5 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_0.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 2 mL Screwcap",
                    "value": "opentrons_24_tuberack_nest_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with Generic 2 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_generic_2ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 0.5 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_0.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 1.5 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_screwcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_1.5ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 2 mL Snapcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_snapcap"
                },
                {
                    "label": "Opentrons 24 Well Aluminum Block with NEST 2 mL Screwcap",
                    "value": "opentrons_24_aluminumblock_nest_2ml_screwcap"
                },
                {
                    "label": "Bio-Rad 96 Well Plate 200 \u00b5L PCR",
                    "value": "biorad_96_wellplate_200ul_pcr"
                },
                {
                    "label": "Corning 96 well Plate 360 \u00b5L Flat",
                    "value": "corning_96_wellplate_360_ul_flat"
                },
                {
                    "label": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "NEST 96 Well Plate 200 \u00b5L Flat",
                    "value": "nest_96_wellplate_200ul_flat"
                },
                {
                    "label": "NEST 96 Deepwell plate 2 mL",
                    "value": "nest_96_wellplate_2ml_deep"
                },
                {
                    "label": "USA Scientific 96 Deep well Plate 2.4 mL",
                    "value": "usascientific_96_wellplate_2.4ml_deep"
                },
                {
                    "label": "Opentrons 96 Well Aluminum Block with Bio-Rad Well Plate 200 \u00b5L",
                    "value": "opentrons_96_aluminumblock_biorad_wellplate_200ul"
                },
                {
                    "label": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L",
                    "value": "opentrons_96_aluminumblock_nest_wellplate_100ul"
                },
                {
                    "label": "Opentrons 96 Well Aluminum Block with Generic PCR Strip 200 \u00b5L",
                    "value": "opentrons_96_aluminumblock_generic_pcr_strip_200ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Twelve well Reservoir and mastermix destination",
            "name": "twelve_well_resv_lname",
            "options": [
                {
                    "label": "NEST 12 Well Reservoir 15 mL",
                    "value": "nest_12_reservoir_15ml"
                },
                {
                    "label": "USA Scientific 12 Well Reservoir 22 mL",
                    "value": "usascientific_12_reservoir_22ml"
                },
                {
                    "label": "None",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Temperature module for tuberack 1 (optional)",
            "name": "tmod_1_lname",
            "options": [
                {
                    "label": "Temperature module GEN2",
                    "value": "temperature module gen2"
                },
                {
                    "label": "Temperature module GEN1",
                    "value": "temperature module"
                },
                {
                    "label": "None",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Temperature module for tuberack 2 (optional)",
            "name": "tmod_2_lname",
            "options": [
                {
                    "label": "Temperature module GEN2",
                    "value": "temperature module gen2"
                },
                {
                    "label": "Temperature module GEN1",
                    "value": "temperature module"
                },
                {
                    "label": "None",
                    "value": null
                }
            ],
            "type": "dropDown"
        },
        {
            "default": "Reagent,Slot,Well,Volume\nBuffer,1,A2,3\nMgCl,1,A3,40\ndNTPs,2,A2,90\nWater,2,A3,248\nprimer 1,1,A4,25\nprimer 2,1,A5,25\n",
            "label": "master mix .csv file",
            "name": "master_mix_csv",
            "type": "textFile"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p1000_single_gen2"
        },
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Tube rack 1 on Temperature Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_24_tuberack_nest_0.5ml_screwcap"
        },
        {
            "name": "Tube rack 2 on Temperature Module GEN2 on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap"
        },
        {
            "name": "12-channel reservoir on 3",
            "share": false,
            "slot": "3",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Generic PCR Prep part 1 - Mastermix creation",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "TemperatureModuleContext at Temperature Module GEN2 on 1 lw Tube rack 1 on Temperature Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "tempdeck"
        },
        {
            "name": "TemperatureModuleContext at Temperature Module GEN2 on 2 lw Tube rack 2 on Temperature Module GEN2 on 2",
            "share": false,
            "slot": "2",
            "type": "tempdeck"
        }
    ]
}