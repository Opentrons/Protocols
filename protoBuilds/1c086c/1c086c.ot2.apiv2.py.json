{
    "content": "metadata = {\n    'protocolName': 'Custom Distribute Liquids Function',\n    'author': 'Sakib <sakib.hossain@opentrons.com>',\n    'description': 'Custom Protocol Request',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    # Load Labware\n    plate1 = ctx.load_labware('corning_6_wellplate_16.8ml_flat', 1, 'Plate 1')\n    plate2 = ctx.load_labware('corning_24_wellplate_3.4ml_flat', 2, 'Plate 2')\n    trash_plate = ctx.load_labware('agilent_1_reservoir_290ml', 3,\n                                   'Trash Plate')\n    tiprack = ctx.load_labware('opentrons_96_tiprack_300ul', 4)\n    p300 = ctx.load_instrument('p300_single_gen2', 'left', tip_racks=[tiprack])\n\n    # Custom Distribute Function\n    def distribute_custom(pipette, vol, source, dest, overage,\n                          blowout, air_gap):\n\n        use_vol = pipette.max_volume - overage\n        num_distribute = use_vol // vol\n        num_distribute = (use_vol - air_gap * num_distribute) // vol\n\n        def well_lists(wells, n):\n\n            for i in range(0, len(wells), n):\n                yield wells[i:i + n]\n\n        asp_vols = []\n\n        def calc_vol(wells, vol):\n\n            for wells in dest_wells:\n                aspirate_vol = vol*len(wells) + overage\n                asp_vols.append(aspirate_vol)\n\n        dest_wells = list(well_lists(dest, num_distribute))\n        calc_vol(dest_wells, vol)\n\n        pipette.pick_up_tip()\n        for wells, asp_vol in zip(dest_wells, asp_vols):\n            pipette.aspirate(asp_vol, source)\n            ctx.comment(\"Air Gap\")\n            pipette.move_to(source.top())\n            pipette.aspirate(air_gap)\n\n            for well in wells:\n                pipette.dispense(vol+air_gap, well)\n                ctx.comment(\"Air Gap\")\n                pipette.move_to(well.top())\n                pipette.aspirate(air_gap)\n            ctx.comment(f\"Blowout at {blowout}\")\n            pipette.dispense(pipette.max_volume, blowout)\n        pipette.drop_tip()\n\n    distribute_custom(p300, 50, plate1['A1'], plate2.rows_by_name()['A'], 30,\n                      trash_plate['A1'], 10)\n",
    "custom_labware_defs": [],
    "fields": [],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Plate 1 on 1",
            "share": false,
            "slot": "1",
            "type": "corning_6_wellplate_16.8ml_flat"
        },
        {
            "name": "Plate 2 on 2",
            "share": false,
            "slot": "2",
            "type": "corning_24_wellplate_3.4ml_flat"
        },
        {
            "name": "Trash Plate on 3",
            "share": false,
            "slot": "3",
            "type": "agilent_1_reservoir_290ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Sakib <sakib.hossain@opentrons.com>",
        "description": "Custom Protocol Request",
        "protocolName": "Custom Distribute Liquids Function"
    },
    "modules": []
}