{
    "content": "\"\"\"OPENTRONS.\"\"\"\nimport math\n\nmetadata = {\n    'protocolName': 'Normalization with CSV',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'apiLevel': '2.12'\n}\n\n\ndef run(ctx):\n    \"\"\"PROTOCOL.\"\"\"\n    [vol_water, src_plate, dst_plate,\n     p20_mount, file_input] = get_values(  # noqa: F821\n        'vol_water', 'src_plate', 'dst_plate', 'p20_mount', 'file_input')\n\n    if p20_mount == 'right':\n        p300_mount = 'left'\n    else:\n        p300_mount = 'right'\n    source_plate = ctx.load_labware(src_plate, '1')\n    dest_plate = ctx.load_labware(dst_plate, '2')\n    reagent_tubes = ctx.load_labware('opentrons_6_tuberack_'\n                                     'falcon_50ml_conical', '4')\n\n    # parse\n    csv_rows = [val.strip() for val in file_input.split(',')]\n    header_removed = csv_rows[6:]\n    well_list = header_removed[::5]\n    sample_mass = [eval(i) for i in header_removed[1::5]]\n    sample_vol = [eval(i) for i in header_removed[2::5]]\n    final_mass = [eval(i) for i in header_removed[3::5]]\n    final_vol = [eval(i) for i in header_removed[4::5]]\n    start_conc = []\n    final_conc = []\n    bad_wells = []\n\n    for mass, vol in zip(sample_mass, sample_vol):\n        start_conc.append(mass/vol)\n\n    for mass, vol in zip(final_mass, final_vol):\n        final_conc.append(mass/vol)\n\n    transfer_vol = []\n    nfw_vol = []\n    for final, start, vol in zip(final_conc, start_conc, final_vol):\n        transfer_vol.append(vol*round(final/start, 1))\n    for s_vol, f_vol in zip(transfer_vol, final_vol):\n        nfw_vol.append(f_vol-s_vol)\n    lists = [well_list, sample_mass, sample_vol, final_mass, final_vol,\n             start_conc, final_conc, transfer_vol, nfw_vol]\n    # clean up bad wells from lists\n    for i, (start, final) in enumerate(zip(start_conc, final_conc)):\n        if start < final:\n            bad_wells.append(well_list[i])\n            for list in lists:\n                del list[i]\n\n    # Reagents and Well Lists\n\n    nfw_source = reagent_tubes.wells()[0]\n\n    tips20 = [ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n              for slot in ['3', '6'][:math.ceil(len(well_list)/48)]]\n    tips300 = [ctx.load_labware('opentrons_96_filtertiprack_200ul', slot)\n               for slot in ['5', '7'][:math.ceil(len(well_list)/48)]]\n    p20 = ctx.load_instrument('p20_single_gen2', p20_mount, tip_racks=tips20)\n    p300 = ctx.load_instrument('p300_single_gen2', p300_mount,\n                               tip_racks=tips300)\n\n    # liquid height tracking\n    v_naught_dil = vol_water*1000\n    radius = reagent_tubes.wells()[0].diameter/2\n    h_naught_water = 0.85*v_naught_dil/(math.pi*radius**2)\n    h = h_naught_water\n\n    def adjust_height(vol):\n        nonlocal h\n        dh = vol/(math.pi*radius**2)\n        h -= dh\n        if h < 12:\n            h = 1\n\n    # do NFW addition first to save tips, mix after sample addition\n    ctx.comment('\\n\\n~~~~~~~~~~~~~~ADDING NFW TO WELLS~~~~~~~~~~~~~~~\\n')\n    p20.pick_up_tip()\n    p300.pick_up_tip()\n    for nfw, d in zip(nfw_vol, well_list):\n        if nfw >= 20:\n            pip = p300\n        else:\n            pip = p20\n        pip.transfer(nfw, nfw_source.bottom(h), dest_plate[d],\n                     new_tip='never')\n        adjust_height(nfw)\n    p20.drop_tip()\n    p300.drop_tip()\n\n    ctx.comment('\\n\\n~~~~~~~~~~~~~TRANSFERRING SAMPLE VOLUMES~~~~~~~~~~~~~~\\n')\n    for t_vol, well in zip(transfer_vol, well_list):\n        if t_vol >= 20:\n            pip = p300\n        else:\n            pip = p20\n        pip.pick_up_tip()\n        pip.transfer(t_vol, source_plate.wells_by_name()[well],\n                     dest_plate.wells_by_name()[well], new_tip='never')\n        pip.mix(4, f_vol/2, dest_plate.wells_by_name()[well])\n        pip.drop_tip()\n\n    # bad_list = [well.display_name.split(' ')[0] for well in bad_wells]\n    # print(lists)\n\n    if len(bad_wells) > 0:\n        bad_msg = '\\n\\n'.join(bad_wells)\n        ctx.comment(f'The following sample wells failed: \\n\\n{bad_msg}')\n\n    for c in ctx.commands():\n        print(c)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 50,
            "label": "Volume of Water in Falcon Tube (mL)",
            "name": "vol_water",
            "type": "int"
        },
        {
            "label": "Source Plate Type",
            "name": "src_plate",
            "options": [
                {
                    "label": "NEST 100uL 96 Well Plate",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "NEST 96 Deepwell Plate 2mL",
                    "value": "nest_96_wellplate_2ml_deep"
                },
                {
                    "label": "Thermofisher Semi-Skirted on Adapter 96 Well Plate",
                    "value": "customadapter_96_wellplate_200ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Destination Plate Type",
            "name": "dst_plate",
            "options": [
                {
                    "label": "NEST 100uL 96 Well Plate",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "NEST 96 Deepwell Plate 2mL",
                    "value": "nest_96_wellplate_2ml_deep"
                },
                {
                    "label": "Thermofisher Semi-Skirted on Adapter 96 Well Plate",
                    "value": "customadapter_96_wellplate_200ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 Single GEN2 Mount",
            "name": "p20_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": ",Well,nanograms,sample volume,goal concentration,normalized volume,A1,20,30,30,30,B1,6,30,5,30,C1,7,30,6,30",
            "label": "Transfer .csv File",
            "name": "file_input",
            "type": "textFile"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        },
        {
            "mount": "right",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 6 Tube Rack with Falcon 50 mL Conical on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_6_tuberack_falcon_50ml_conical"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.12",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Normalization with CSV"
    },
    "modules": []
}