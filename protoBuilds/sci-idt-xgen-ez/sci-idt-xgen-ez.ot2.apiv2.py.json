{
    "content": "# flake8: noqa\n\nfrom opentrons import protocol_api\n\nfrom opentrons import types\n\nimport inspect\n\nmetadata = {\n    'protocolName': 'IDT xGEN EZ',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.11'\n    }\n\ndef right(s, amount):\n    if s == None:\n        return None\n    elif amount == None:\n        return None\n    s = str(s)\n    if amount > len(s):\n        return s\n    elif amount == 0:\n        return \"\"\n    else:\n        return s[-amount:]\n\n# SCRIPT SETTINGS\nDRYRUN      = 'NO'          # YES or NO, DRYRUN = 'YES' will return tips, skip incubation times, shorten mix, for testing purposes\nNOMODULES   = 'NO'          # YES or NO, NOMODULES = 'YES' will not require modules on the deck and will skip module steps, for testing purposes, if DRYRUN = 'YES', then NOMODULES will automatically set itself to 'NO'\nTIPREUSE    = 'NO'          # NO, NYI format for reusing tips\nOFFSET      = 'YES'         # YES or NO, Sets whether to use protocol specific z offsets for each tip and labware or no offsets aside from defaults\n\n# PROTOCOL SETTINGS\nSAMPLES     = '8x'         # 8x, 16x, or 24x\nFRAGTIME    = 30            # Minutes, Duration of the Fragmentation Step\nPCRCYCLES   = 4             # Amount of Cycles\n\n# PROTOCOL BLOCKS\nSTEP_FRERAT         = 0\nSTEP_FRERATDECK     = 1\nSTEP_LIG            = 0\nSTEP_LIGDECK        = 0\nSTEP_POSTLIG        = 0\nSTEP_PCR            = 0\nSTEP_PCRDECK        = 0\nSTEP_POSTPCR1       = 0\nSTEP_POSTPCR2       = 0\n\nSTEPS = {int(STEP_FRERAT),\n         int(STEP_LIG),\n         int(STEP_POSTLIG),\n         int(STEP_PCR),\n         int(STEP_POSTPCR1),\n         int(STEP_POSTPCR2)}\nSTEP_FRERATDECK = int(STEP_FRERATDECK)\nSTEP_LIGDECK = int(STEP_LIGDECK)\nSTEP_PCRDECK = int(STEP_PCRDECK)\n\n\ndef run(protocol: protocol_api.ProtocolContext):\n    global TIPREUSE\n\n    if DRYRUN == 'YES':\n        protocol.comment(\"THIS IS A DRY RUN\")\n    else:\n        protocol.comment(\"THIS IS A REACTION RUN\")\n\n    if all(STEPS) == True:\n        if TIPREUSE =='YES':\n            TIPREUSE = 'YES'\n            protocol.comment(\"TIP REUSING\")\n    else:\n        TIPREUSE = 'NO'\n        protocol.comment(\"NO TIP REUSING\")\n\n    # DECK SETUP AND LABWARE\n    if NOMODULES == 'YES':\n        protocol.comment(\"THIS IS A NO MODULE RUN\")\n        sample_plate_mag    = protocol.load_labware('nest_96_wellplate_100ul_pcr_full_skirt', '1') #<--- Actually an Eppendorf 96 well, same dimensions\n        if TIPREUSE == 'NO':\n            reservoir           = protocol.load_labware('nest_12_reservoir_15ml','2')\n        else :\n            reservoir           = protocol.load_labware('nest_96_wellplate_2ml_deep','2')\n        reagent_plate       = protocol.load_labware('opentrons_96_aluminumblock_biorad_wellplate_200ul', '3')\n        tiprack_20          = protocol.load_labware('opentrons_96_filtertiprack_20ul',  '4')\n        tiprack_200_1       = protocol.load_labware('opentrons_96_filtertiprack_200ul', '5')\n        tiprack_200_2       = protocol.load_labware('opentrons_96_filtertiprack_200ul', '6')\n        sample_plate_thermo = protocol.load_labware('nest_96_wellplate_100ul_pcr_full_skirt','7')\n        tiprack_200_3       = protocol.load_labware('opentrons_96_filtertiprack_200ul', '9')\n    else:\n        protocol.comment(\"THIS IS A MODULE RUN\")\n        mag_block           = protocol.load_module('magnetic module gen2','1')\n        sample_plate_mag    = mag_block.load_labware('nest_96_wellplate_100ul_pcr_full_skirt') #<--- Actually an Eppendorf 96 well, same dimensions\n        if TIPREUSE == 'NO':\n            reservoir           = protocol.load_labware('nest_12_reservoir_15ml','2')\n        else :\n            reservoir           = protocol.load_labware('nest_96_wellplate_2ml_deep','2')\n        temp_block          = protocol.load_module('temperature module gen2', '3')\n        reagent_plate       = temp_block.load_labware('opentrons_96_aluminumblock_biorad_wellplate_200ul')\n        tiprack_20          = protocol.load_labware('opentrons_96_filtertiprack_20ul',  '4')\n        tiprack_200_1       = protocol.load_labware('opentrons_96_filtertiprack_200ul', '5')\n        tiprack_200_2       = protocol.load_labware('opentrons_96_filtertiprack_200ul', '6')\n        thermocycler        = protocol.load_module('thermocycler module')\n        sample_plate_thermo = thermocycler.load_labware('nest_96_wellplate_100ul_pcr_full_skirt')\n        tiprack_200_3       = protocol.load_labware('opentrons_96_filtertiprack_200ul', '9')\n\n    if TIPREUSE == 'YES':\n        protocol.comment(\"THIS PROTOCOL WILL REUSE TIPS FOR WASHES\")\n\n    # REAGENT PLATE\n    FRERAT              = reagent_plate.wells_by_name()['A1']\n    LIG                 = reagent_plate.wells_by_name()['A2']\n    #/ NO PRIMER\n    PCR                 = reagent_plate.wells_by_name()['A4']\n    Barcodes1           = reagent_plate.wells_by_name()['A7']\n    Barcodes2           = reagent_plate.wells_by_name()['A8']\n    Barcodes3           = reagent_plate.wells_by_name()['A9']\n\n    # RESERVOIR\n    if TIPREUSE == 'NO':\n        AMPure              = reservoir['A1']\n        EtOH_1              = reservoir['A4']\n        EtOH_2              = reservoir['A4']\n        EtOH_3              = reservoir['A4']\n        RSB                 = reservoir['A6']\n        Liquid_trash        = reservoir['A12']\n    else :\n        AMPure              = reservoir['A1']\n        EtOH_1              = reservoir['A4']\n        EtOH_2              = reservoir['A3']\n        EtOH_3              = reservoir['A2']\n        RSB                 = reservoir['A6']\n        Liquid_trash        = reservoir['A12']\n\n    # pipette\n    if NOMODULES == 'NO':\n        p300    = protocol.load_instrument('p300_multi_gen2', 'left', tip_racks=[tiprack_200_1,tiprack_200_2,tiprack_200_3])\n        p20     = protocol.load_instrument('p20_multi_gen2', 'right', tip_racks=[tiprack_20])\n    else:\n        p300    = protocol.load_instrument('p300_multi', 'left', tip_racks=[tiprack_200_1,tiprack_200_2,tiprack_200_3])\n        p20     = protocol.load_instrument('p10_multi', 'right', tip_racks=[tiprack_20])\n\n    #samples\n    src_file_path = inspect.getfile(lambda: None)\n    protocol.comment(src_file_path)\n\n    #tip and sample tracking\n    if SAMPLES == '8x':\n        protocol.comment(\"There are 8 Samples\")\n        samplecolumns    = 1\n    elif SAMPLES == '16x':\n        protocol.comment(\"There are 16 Samples\")\n        samplecolumns    = 2\n    elif SAMPLES == '24x':\n        protocol.comment(\"There are 24 Samples\")\n        samplecolumns    = 3\n    else:\n        protocol.pause(\"ERROR?\")\n\n    # offset\n    if OFFSET == 'YES':\n        if TIPREUSE == 'NO':\n            p300_offset_Res     = 2\n        else:\n            p300_offset_Res     = 2\n        p300_offset_Thermo  = 1\n        p300_offset_Mag     = 0.70\n        p300_offset_Deck    = 0.3\n        p300_offset_Temp    = 0.65\n        p300_offset_Tube    = 0\n        if TIPREUSE == 'NO':\n            p20_offset_Res     = 2\n        else:\n            p20_offset_Res     = 2\n        p20_offset_Thermo   = 1\n        p20_offset_Mag      = 0.75\n        p20_offset_Deck     = 0.3\n        p20_offset_Temp     = 0.85\n        p20_offset_Tube     = 0\n    else:\n        if TIPREUSE == 'NO':\n            p300_offset_Res     = 0\n        else:\n            p300_offset_Res     = 0\n        p300_offset_Thermo  = 0\n        p300_offset_Mag     = 0\n        p300_offset_Deck    = 0\n        p300_offset_Temp    = 0\n        p300_offset_Tube    = 0\n        if TIPREUSE == 'NO':\n            p20_offset_Res     = 0\n        else:\n            p20_offset_Res     = 0\n        p20_offset_Thermo   = 0\n        p20_offset_Mag      = 0\n        p20_offset_Deck     = 0\n        p20_offset_Temp     = 0\n        p20_offset_Tube     = 0\n\n    # positions\n    ############################################################################################################################################\n    #  sample_plate_thermo on the Thermocycler\n    A1_p20_bead_side  = sample_plate_thermo['A1'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Thermo-5))                #Beads to the Right\n    A1_p20_bead_top   = sample_plate_thermo['A1'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Thermo+2))                #Beads to the Right\n    A1_p20_bead_mid   = sample_plate_thermo['A1'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Thermo-2))                #Beads to the Right\n    A1_p300_bead_side = sample_plate_thermo['A1'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Thermo-7.2))             #Beads to the Right\n    A1_p300_bead_top  = sample_plate_thermo['A1'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Thermo-1))               #Beads to the Right\n    A1_p300_bead_mid  = sample_plate_thermo['A1'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Thermo-4))               #Beads to the Right\n    A1_p300_loc1      = sample_plate_thermo['A1'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Thermo-4))               #Beads to the Right\n    A1_p300_loc2      = sample_plate_thermo['A1'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Thermo-4))               #Beads to the Right\n    A1_p300_loc3      = sample_plate_thermo['A1'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Thermo-4))               #Beads to the Right\n    A3_p20_bead_side  = sample_plate_thermo['A3'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Thermo-5))                #Beads to the Right\n    A3_p20_bead_top   = sample_plate_thermo['A3'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Thermo+2))                #Beads to the Right\n    A3_p20_bead_mid   = sample_plate_thermo['A3'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Thermo-2))                #Beads to the Right\n    A3_p300_bead_side = sample_plate_thermo['A3'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Thermo-7.2))             #Beads to the Right\n    A3_p300_bead_top  = sample_plate_thermo['A3'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Thermo-1))               #Beads to the Right\n    A3_p300_bead_mid  = sample_plate_thermo['A3'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Thermo-4))               #Beads to the Right\n    A3_p300_loc1      = sample_plate_thermo['A3'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Thermo-4))               #Beads to the Right\n    A3_p300_loc2      = sample_plate_thermo['A3'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Thermo-4))               #Beads to the Right\n    A3_p300_loc3      = sample_plate_thermo['A3'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Thermo-4))               #Beads to the Right\n    A5_p20_bead_side  = sample_plate_thermo['A5'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Thermo-5))                #Beads to the Right\n    A5_p20_bead_top   = sample_plate_thermo['A5'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Thermo+2))                #Beads to the Right\n    A5_p20_bead_mid   = sample_plate_thermo['A5'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Thermo-2))                #Beads to the Right\n    A5_p300_bead_side = sample_plate_thermo['A5'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Thermo-7.2))             #Beads to the Right\n    A5_p300_bead_top  = sample_plate_thermo['A5'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Thermo-1))               #Beads to the Right\n    A5_p300_bead_mid  = sample_plate_thermo['A5'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Thermo-4))               #Beads to the Right\n    A5_p300_loc1      = sample_plate_thermo['A5'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Thermo-4))               #Beads to the Right\n    A5_p300_loc2      = sample_plate_thermo['A5'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Thermo-4))               #Beads to the Right\n    A5_p300_loc3      = sample_plate_thermo['A5'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Thermo-4))               #Beads to the Right\n    ############################################################################################################################################\n\n    bypass = protocol.deck.position_for('11').move(types.Point(x=70,y=80,z=130))\n\n    # commands\n    if DRYRUN == 'NO':\n        protocol.comment(\"SETTING THERMO and TEMP BLOCK Temperature\")\n        thermocycler.set_block_temperature(4)\n        thermocycler.set_lid_temperature(100)\n        temp_block.set_temperature(4)\n        thermocycler.open_lid()\n        protocol.pause(\"Ready\")\n\n    if STEP_FRERAT == 1:\n        protocol.comment('==============================================')\n        protocol.comment('--> Fragmenting / End Repair / A-Tailing')\n        protocol.comment('==============================================')\n\n        protocol.comment('--> Adding FRERAT')\n        if DRYRUN == 'NO':\n            FRERATVol    = 10.5\n            FRERATMixRep = 10\n            FRERATMixVol = 20\n        if DRYRUN == 'YES':\n            FRERATVol    = 10\n            FRERATMixRep = 1\n            FRERATMixVol = 10\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A1'\n            p20.pick_up_tip()\n            p20.aspirate(FRERATVol, FRERAT.bottom(z=p20_offset_Temp))\n            p20.dispense(FRERATVol, sample_plate_thermo.wells_by_name()[X].bottom(z=p20_offset_Thermo))\n            p20.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n            p20.mix(FRERATMixRep,FRERATMixVol)\n            p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A3'\n            p20.pick_up_tip()\n            p20.aspirate(FRERATVol, FRERAT.bottom(z=p20_offset_Temp))\n            p20.dispense(FRERATVol, sample_plate_thermo.wells_by_name()[X].bottom(z=p20_offset_Thermo))\n            p20.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n            p20.mix(FRERATMixRep,FRERATMixVol)\n            p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A5'\n            p20.pick_up_tip()\n            p20.aspirate(FRERATVol, FRERAT.bottom(z=p20_offset_Temp))\n            p20.dispense(FRERATVol, sample_plate_thermo.wells_by_name()[X].bottom(z=p20_offset_Thermo))\n            p20.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n            p20.mix(FRERATMixRep,FRERATMixVol)\n            p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n\n    if STEP_FRERATDECK == 1:\n        if DRYRUN == 'NO':\n            ############################################################################################################################################\n            protocol.pause('Seal, Run FRERAT (60min)')\n\n            thermocycler.close_lid()\n            profile_FRERAT = [\n                {'temperature': 32, 'hold_time_minutes': FRAGTIME},\n                {'temperature': 65, 'hold_time_minutes': 30}\n                ]\n            thermocycler.execute_profile(steps=profile_FRERAT, repetitions=1, block_max_volume=50)\n            thermocycler.set_block_temperature(4)\n            ############################################################################################################################################\n            thermocycler.open_lid()\n            protocol.pause(\"Remove Seal\")\n    else:\n        protocol.pause('Seal, Run FRERAT (~60min)')\n\n    if STEP_LIG == 1:\n        protocol.comment('==============================================')\n        protocol.comment('--> Adapter Ligation')\n        protocol.comment('==============================================')\n\n        protocol.comment('--> Adding Lig')\n        if DRYRUN == 'NO':\n            LIGVol = 30\n            LIGMixRep = 50\n            LIGMixVol = 55\n        if DRYRUN == 'YES':\n            LIGVol = 30\n            LIGMixRep = 1\n            LIGMixVol = 55\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A1'\n            p300.pick_up_tip()\n            p300.mix(3,LIGVol, LIG.bottom(z=p300_offset_Temp+1), rate=0.5)\n            p300.aspirate(LIGVol, LIG.bottom(z=p300_offset_Temp+1), rate=0.2)\n            p300.default_speed = 5\n            p300.move_to(LIG.top(z=p300_offset_Temp+5))\n            protocol.delay(seconds=0.2)\n            p300.default_speed = 400\n            p300.dispense(LIGVol, sample_plate_thermo[X].bottom(z=p300_offset_Thermo), rate=0.25)\n            p300.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n            p300.mix(LIGMixRep,LIGMixVol, rate=0.5)\n            p300.blow_out(sample_plate_thermo[X].top(z=-5))\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A3'\n            p300.pick_up_tip()\n            p300.mix(3,LIGVol, LIG.bottom(z=p300_offset_Temp+1), rate=0.5)\n            p300.aspirate(LIGVol, LIG.bottom(z=p300_offset_Temp+1), rate=0.2)\n            p300.default_speed = 5\n            p300.move_to(LIG.top(z=p300_offset_Temp+5))\n            protocol.delay(seconds=0.2)\n            p300.default_speed = 400\n            p300.dispense(LIGVol, sample_plate_thermo[X].bottom(z=p300_offset_Thermo), rate=0.25)\n            p300.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n            p300.mix(LIGMixRep,LIGMixVol, rate=0.5)\n            p300.blow_out(sample_plate_thermo[X].top(z=-5))\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A5'\n            p300.pick_up_tip()\n            p300.mix(3,LIGVol, LIG.bottom(z=p300_offset_Temp+1), rate=0.5)\n            p300.aspirate(LIGVol, LIG.bottom(z=p300_offset_Temp+1), rate=0.2)\n            p300.default_speed = 5\n            p300.move_to(LIG.top(z=p300_offset_Temp+5))\n            protocol.delay(seconds=0.2)\n            p300.default_speed = 400\n            p300.dispense(LIGVol, sample_plate_thermo[X].bottom(z=p300_offset_Thermo), rate=0.25)\n            p300.move_to(sample_plate_thermo[X].bottom(z=p300_offset_Thermo))\n            p300.mix(LIGMixRep,LIGMixVol, rate=0.5)\n            p300.blow_out(sample_plate_thermo[X].top(z=-5))\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n    if STEP_LIGDECK == 1:\n        if DRYRUN == 'NO':\n            ############################################################################################################################################\n            protocol.pause('Seal, Run LIG (15min)')\n\n            profile_LIG = [\n                {'temperature': 20, 'hold_time_minutes': 20}\n                ]\n            thermocycler.execute_profile(steps=profile_LIG, repetitions=1, block_max_volume=50)\n            thermocycler.set_block_temperature(10)\n            ############################################################################################################################################\n            thermocycler.open_lid()\n            protocol.pause(\"Remove Seal\")\n    else:\n        protocol.pause('Seal, Run LIG (20min)')\n\n    # positions\n    ############################################################################################################################################\n    #  sample_plate_mag on the Mag Block\n    A1_p20_bead_side  = sample_plate_mag['A1'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A1_p20_bead_top   = sample_plate_mag['A1'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A1_p20_bead_mid   = sample_plate_mag['A1'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A1_p300_bead_side = sample_plate_mag['A1'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A1_p300_bead_top  = sample_plate_mag['A1'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A1_p300_bead_mid  = sample_plate_mag['A1'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A1_p300_loc1      = sample_plate_mag['A1'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-4))               #Beads to the Right\n    A1_p300_loc2      = sample_plate_mag['A1'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Mag-4))               #Beads to the Right\n    A1_p300_loc3      = sample_plate_mag['A1'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-4))               #Beads to the Right\n    A1_p20_loc1       = sample_plate_mag['A1'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p20_offset_Mag-7))             #Beads to the Right\n    A1_p20_loc2       = sample_plate_mag['A1'].center().move(types.Point(x=1.3,y=0,               z=p20_offset_Mag-7))             #Beads to the Right\n    A1_p20_loc3       = sample_plate_mag['A1'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p20_offset_Mag-7))             #Beads to the Right\n    A3_p20_bead_side  = sample_plate_mag['A3'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A3_p20_bead_top   = sample_plate_mag['A3'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A3_p20_bead_mid   = sample_plate_mag['A3'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A3_p300_bead_side = sample_plate_mag['A3'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A3_p300_bead_top  = sample_plate_mag['A3'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A3_p300_bead_mid  = sample_plate_mag['A3'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A3_p300_loc1      = sample_plate_mag['A3'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-4))               #Beads to the Right\n    A3_p300_loc2      = sample_plate_mag['A3'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Mag-4))               #Beads to the Right\n    A3_p300_loc3      = sample_plate_mag['A3'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-4))               #Beads to the Right\n    A3_p20_loc1       = sample_plate_mag['A3'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p20_offset_Mag-7))             #Beads to the Right\n    A3_p20_loc2       = sample_plate_mag['A3'].center().move(types.Point(x=1.3,y=0,               z=p20_offset_Mag-7))             #Beads to the Right\n    A3_p20_loc3       = sample_plate_mag['A3'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p20_offset_Mag-7))             #Beads to the Right\n    A5_p20_bead_side  = sample_plate_mag['A5'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A5_p20_bead_top   = sample_plate_mag['A5'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A5_p20_bead_mid   = sample_plate_mag['A5'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A5_p300_bead_side = sample_plate_mag['A5'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A5_p300_bead_top  = sample_plate_mag['A5'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A5_p300_bead_mid  = sample_plate_mag['A5'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A5_p300_loc1      = sample_plate_mag['A5'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-4))               #Beads to the Right\n    A5_p300_loc2      = sample_plate_mag['A5'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Mag-4))               #Beads to the Right\n    A5_p300_loc3      = sample_plate_mag['A5'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-4))               #Beads to the Right\n    A5_p20_loc1       = sample_plate_mag['A5'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p20_offset_Mag-7))             #Beads to the Right\n    A5_p20_loc2       = sample_plate_mag['A5'].center().move(types.Point(x=1.3,y=0,               z=p20_offset_Mag-7))             #Beads to the Right\n    A5_p20_loc3       = sample_plate_mag['A5'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p20_offset_Mag-7))             #Beads to the Right\n    A7_p20_bead_side  = sample_plate_mag['A7'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A7_p20_bead_top   = sample_plate_mag['A7'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A7_p20_bead_mid   = sample_plate_mag['A7'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A7_p300_bead_side = sample_plate_mag['A7'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A7_p300_bead_top  = sample_plate_mag['A7'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A7_p300_bead_mid  = sample_plate_mag['A7'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A7_p300_loc1      = sample_plate_mag['A7'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-5.5))               #Beads to the Right\n    A7_p300_loc2      = sample_plate_mag['A7'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Mag-5.5))               #Beads to the Right\n    A7_p300_loc3      = sample_plate_mag['A7'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-5.5))               #Beads to the Right\n    A9_p20_bead_side  = sample_plate_mag['A9'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A9_p20_bead_top   = sample_plate_mag['A9'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A9_p20_bead_mid   = sample_plate_mag['A9'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A9_p300_bead_side = sample_plate_mag['A9'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A9_p300_bead_top  = sample_plate_mag['A9'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A9_p300_bead_mid  = sample_plate_mag['A9'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A9_p300_loc1      = sample_plate_mag['A9'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-5.5))               #Beads to the Right\n    A9_p300_loc2      = sample_plate_mag['A9'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Mag-5.5))               #Beads to the Right\n    A9_p300_loc3      = sample_plate_mag['A9'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-5.5))               #Beads to the Right\n    A11_p20_bead_side  = sample_plate_mag['A11'].center().move(types.Point(x=-1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A11_p20_bead_top   = sample_plate_mag['A11'].center().move(types.Point(x=1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A11_p20_bead_mid   = sample_plate_mag['A11'].center().move(types.Point(x=1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A11_p300_bead_side = sample_plate_mag['A11'].center().move(types.Point(x=-0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A11_p300_bead_top  = sample_plate_mag['A11'].center().move(types.Point(x=1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A11_p300_bead_mid  = sample_plate_mag['A11'].center().move(types.Point(x=0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A11_p300_loc1      = sample_plate_mag['A11'].center().move(types.Point(x=1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-5.5))               #Beads to the Right\n    A11_p300_loc2      = sample_plate_mag['A11'].center().move(types.Point(x=1.3,y=0,               z=p300_offset_Mag-5.5))               #Beads to the Right\n    A11_p300_loc3      = sample_plate_mag['A11'].center().move(types.Point(x=1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-5.5))               #Beads to the Right\n    ############################################################################################################################################\n\n    if STEP_POSTLIG == 1:\n        protocol.comment('==============================================')\n        protocol.comment('--> Cleanup 1')\n        protocol.comment('==============================================')\n\n        if DRYRUN == 'NO':\n            protocol.pause(\"PLACE sample_plate_mag MAGNET\")\n\n        protocol.comment('--> ADDING AMPure (0.8x)')\n        WASHNUM = 1\n        if DRYRUN == 'NO':\n            AMPureVol = 48\n            AMPureMixRep = 50\n            AMPureMixVol = 90\n        if DRYRUN == 'YES':\n            AMPureVol = 48\n            AMPureMixRep = 5\n            AMPureMixVol = 90\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A1'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_1)\n            p300.mix(10,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol/2, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.default_speed = 5\n            p300.dispense(AMPureVol/2, sample_plate_mag[X].center(), rate=0.25)\n            p300.move_to(sample_plate_mag[X].center())\n            for Mix in range(AMPureMixRep):\n                p300.aspirate(AMPureMixVol/2, rate=0.5)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(AMPureMixVol/2, rate=0.5)\n                p300.dispense(AMPureMixVol/2, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(AMPureMixVol/2, rate=0.5)\n                Mix += 1\n            p300.blow_out(sample_plate_mag[X].top(z=1))\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A3'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_2)\n            p300.mix(3,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol/2, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.default_speed = 5\n            p300.dispense(AMPureVol/2, sample_plate_mag[X].center(), rate=0.25)\n            p300.move_to(sample_plate_mag[X].center())\n            for Mix in range(AMPureMixRep):\n                p300.aspirate(AMPureMixVol/2, rate=0.5)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(AMPureMixVol/2, rate=0.5)\n                p300.dispense(AMPureMixVol/2, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(AMPureMixVol/2, rate=0.5)\n                Mix += 1\n            p300.blow_out(sample_plate_mag[X].top(z=1))\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A5'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_3)\n            p300.mix(3,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol/2, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.default_speed = 5\n            p300.dispense(AMPureVol/2, sample_plate_mag[X].center(), rate=0.25)\n            p300.move_to(sample_plate_mag[X].center())\n            for Mix in range(AMPureMixRep):\n                p300.aspirate(AMPureMixVol/2, rate=0.5)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(AMPureMixVol/2, rate=0.5)\n                p300.dispense(AMPureMixVol/2, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(AMPureMixVol/2, rate=0.5)\n                Mix += 1\n            p300.blow_out(sample_plate_mag[X].top(z=1))\n            p300.default_speed = 400\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            if samplecolumns == 1:\n                protocol.delay(minutes=4.2)\n            if samplecolumns == 2:\n                protocol.delay(minutes=2.5)\n            if samplecolumns == 3:\n                protocol.delay(minutes=1)\n\n            protocol.comment('MAGNET ENGAGE')\n            mag_block.engage(height_from_base=8.5)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=7.5)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=7)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=6)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=5)\n            protocol.delay(minutes=1)\n\n        protocol.comment('--> Removing Supernatant')\n        RemoveSup = 200\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A1'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_1)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-20, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A1': p300.move_to(A1_p300_bead_side)\n            if X == 'A3': p300.move_to(A3_p300_bead_side)\n            if X == 'A5': p300.move_to(A5_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A3'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-20, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A1': p300.move_to(A1_p300_bead_side)\n            if X == 'A3': p300.move_to(A3_p300_bead_side)\n            if X == 'A5': p300.move_to(A5_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A5'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_3)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-20, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A1': p300.move_to(A1_p300_bead_side)\n            if X == 'A3': p300.move_to(A3_p300_bead_side)\n            if X == 'A5': p300.move_to(A5_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        protocol.comment('--> Repeating 2 washes')\n        washreps = 2\n        for wash in range(washreps):\n            protocol.comment('--> ETOH Wash #'+str(wash+1))\n            ETOHMaxVol = 150\n            WASHNUM = 1\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A1'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_1)\n                p300.aspirate(ETOHMaxVol, EtOH_1.bottom(z=p300_offset_Res))\n                if X == 'A1': p300.move_to(A1_p300_bead_side)\n                if X == 'A3': p300.move_to(A3_p300_bead_side)\n                if X == 'A5': p300.move_to(A5_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A3'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_2)\n                p300.aspirate(ETOHMaxVol, EtOH_2.bottom(z=p300_offset_Res))\n                if X == 'A1': p300.move_to(A1_p300_bead_side)\n                if X == 'A3': p300.move_to(A3_p300_bead_side)\n                if X == 'A5': p300.move_to(A5_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A5'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_3)\n                p300.aspirate(ETOHMaxVol, EtOH_3.bottom(z=p300_offset_Res))\n                if X == 'A1': p300.move_to(A1_p300_bead_side)\n                if X == 'A3': p300.move_to(A3_p300_bead_side)\n                if X == 'A5': p300.move_to(A5_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n            protocol.delay(minutes=0.5)\n\n            protocol.comment('--> Remove ETOH Wash #'+str(wash+1))\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A1'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_1)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A1': p300.move_to(A1_p300_bead_side)\n                if X == 'A3': p300.move_to(A3_p300_bead_side)\n                if X == 'A5': p300.move_to(A5_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A3'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_2)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A1': p300.move_to(A1_p300_bead_side)\n                if X == 'A3': p300.move_to(A3_p300_bead_side)\n                if X == 'A5': p300.move_to(A5_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A5'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_3)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A1': p300.move_to(A1_p300_bead_side)\n                if X == 'A3': p300.move_to(A3_p300_bead_side)\n                if X == 'A5': p300.move_to(A5_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            wash += 1\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=2)\n\n        protocol.comment('--> Removing Residual ETOH')\n        if TIPREUSE == 'NO':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A1'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A3'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A5'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if TIPREUSE == 'YES':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A1'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_1)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A3'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_2)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A5'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_3)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        if DRYRUN == 'NO':\n            mag_block.engage(height_from_base=6)\n            protocol.comment('AIR DRY')\n            protocol.delay(minutes=0.5)\n\n            protocol.comment('MAGNET DISENGAGE')\n            mag_block.disengage()\n\n        protocol.comment('--> Adding RSB')\n        WASHNUM = 1\n        RSBVol = 21\n        RSBMixRep = 5\n        RSBMixVol = 20\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A1'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_1)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A1': p300.move_to(A1_p300_loc1)\n            if X == 'A3': p300.move_to(A3_p300_loc1)\n            if X == 'A5': p300.move_to(A5_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A1': p300.move_to(A1_p300_loc2)\n            if X == 'A3': p300.move_to(A3_p300_loc2)\n            if X == 'A5': p300.move_to(A5_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc3)\n            if X == 'A3': p300.move_to(A3_p300_loc3)\n            if X == 'A5': p300.move_to(A5_p300_loc3)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc2)\n            if X == 'A3': p300.move_to(A3_p300_loc2)\n            if X == 'A5': p300.move_to(A5_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc1)\n            if X == 'A3': p300.move_to(A3_p300_loc1)\n            if X == 'A5': p300.move_to(A5_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A1': p300.move_to(A1_p300_bead_top)\n                if X == 'A3': p300.move_to(A3_p300_bead_top)\n                if X == 'A5': p300.move_to(A5_p300_bead_top)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A1': p300.move_to(A1_p300_loc2)\n                if X == 'A3': p300.move_to(A3_p300_loc2)\n                if X == 'A5': p300.move_to(A5_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc1)\n                if X == 'A3': p300.move_to(A3_p300_loc1)\n                if X == 'A5': p300.move_to(A5_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc2)\n                if X == 'A3': p300.move_to(A3_p300_loc2)\n                if X == 'A5': p300.move_to(A5_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc3)\n                if X == 'A3': p300.move_to(A3_p300_loc3)\n                if X == 'A5': p300.move_to(A5_p300_loc3)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A3'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_2)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A1': p300.move_to(A1_p300_loc1)\n            if X == 'A3': p300.move_to(A3_p300_loc1)\n            if X == 'A5': p300.move_to(A5_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A1': p300.move_to(A1_p300_loc2)\n            if X == 'A3': p300.move_to(A3_p300_loc2)\n            if X == 'A5': p300.move_to(A5_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc3)\n            if X == 'A3': p300.move_to(A3_p300_loc3)\n            if X == 'A5': p300.move_to(A5_p300_loc3)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc2)\n            if X == 'A3': p300.move_to(A3_p300_loc2)\n            if X == 'A5': p300.move_to(A5_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc1)\n            if X == 'A3': p300.move_to(A3_p300_loc1)\n            if X == 'A5': p300.move_to(A5_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A1': p300.move_to(A1_p300_bead_top)\n                if X == 'A3': p300.move_to(A3_p300_bead_top)\n                if X == 'A5': p300.move_to(A5_p300_bead_top)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A1': p300.move_to(A1_p300_loc2)\n                if X == 'A3': p300.move_to(A3_p300_loc2)\n                if X == 'A5': p300.move_to(A5_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc1)\n                if X == 'A3': p300.move_to(A3_p300_loc1)\n                if X == 'A5': p300.move_to(A5_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc2)\n                if X == 'A3': p300.move_to(A3_p300_loc2)\n                if X == 'A5': p300.move_to(A5_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc3)\n                if X == 'A3': p300.move_to(A3_p300_loc3)\n                if X == 'A5': p300.move_to(A5_p300_loc3)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A5'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_3)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A1': p300.move_to(A1_p300_loc1)\n            if X == 'A3': p300.move_to(A3_p300_loc1)\n            if X == 'A5': p300.move_to(A5_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A1': p300.move_to(A1_p300_loc2)\n            if X == 'A3': p300.move_to(A3_p300_loc2)\n            if X == 'A5': p300.move_to(A5_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc3)\n            if X == 'A3': p300.move_to(A3_p300_loc3)\n            if X == 'A5': p300.move_to(A5_p300_loc3)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc2)\n            if X == 'A3': p300.move_to(A3_p300_loc2)\n            if X == 'A5': p300.move_to(A5_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A1': p300.move_to(A1_p300_loc1)\n            if X == 'A3': p300.move_to(A3_p300_loc1)\n            if X == 'A5': p300.move_to(A5_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A1': p300.move_to(A1_p300_bead_top)\n                if X == 'A3': p300.move_to(A3_p300_bead_top)\n                if X == 'A5': p300.move_to(A5_p300_bead_top)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A1': p300.move_to(A1_p300_loc2)\n                if X == 'A3': p300.move_to(A3_p300_loc2)\n                if X == 'A5': p300.move_to(A5_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc1)\n                if X == 'A3': p300.move_to(A3_p300_loc1)\n                if X == 'A5': p300.move_to(A5_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc2)\n                if X == 'A3': p300.move_to(A3_p300_loc2)\n                if X == 'A5': p300.move_to(A5_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A1': p300.move_to(A1_p300_loc3)\n                if X == 'A3': p300.move_to(A3_p300_loc3)\n                if X == 'A5': p300.move_to(A5_p300_loc3)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.comment('MAGNET ENGAGE')\n            mag_block.engage(height_from_base=5)\n            protocol.delay(minutes=4)\n\n        protocol.comment('--> Transferring Supernatant')\n        TransferSup = 20\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A1'\n            Y = 'A7'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_1)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(TransferSup, rate=0.25)\n            p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A3'\n            Y = 'A9'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(TransferSup, rate=0.25)\n            p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A5'\n            Y = 'A11'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_3)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.aspirate(TransferSup, rate=0.25)\n            p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.comment('MAGNET DISENGAGE')\n            mag_block.disengage()\n\n    if STEP_PCR == 1:\n        protocol.comment('==============================================')\n        protocol.comment('--> Amplification')\n        protocol.comment('==============================================')\n\n        protocol.comment('--> Adding Barcodes')\n        PrimerVol    = 5\n        PrimerMixRep = 3\n        PrimerMixVol = 10\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A7'\n            p20.pick_up_tip()\n            p20.aspirate(PrimerVol, Barcodes1.bottom(z=p20_offset_Temp), rate=0.25)\n            p20.dispense(PrimerVol, sample_plate_mag.wells_by_name()[X].bottom(z=p20_offset_Mag+1))\n            p20.mix(PrimerMixRep,PrimerMixVol)\n            p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A9'\n            p20.pick_up_tip()\n            p20.aspirate(PrimerVol, Barcodes2.bottom(z=p20_offset_Temp), rate=0.25)\n            p20.dispense(PrimerVol, sample_plate_mag.wells_by_name()[X].bottom(z=p20_offset_Mag+1))\n            p20.mix(PrimerMixRep,PrimerMixVol)\n            p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A11'\n            p20.pick_up_tip()\n            p20.aspirate(PrimerVol, Barcodes3.bottom(z=p20_offset_Temp), rate=0.25)\n            p20.dispense(PrimerVol, sample_plate_mag.wells_by_name()[X].bottom(z=p20_offset_Mag+1))\n            p20.mix(PrimerMixRep,PrimerMixVol)\n            p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n\n        protocol.comment('--> Adding PCR')\n        if DRYRUN == 'NO':\n            PCRVol = 25\n            PCRMixRep = 10\n            PCRMixVol = 50\n        if DRYRUN == 'YES':\n            PCRVol = 25\n            PCRMixRep = 1\n            PCRMixVol = 50\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A7'\n            p300.pick_up_tip()\n            p300.mix(2,PCRVol, PCR.bottom(z=p300_offset_Temp), rate=0.5)\n            p300.aspirate(PCRVol, PCR.bottom(z=p300_offset_Temp), rate=0.25)\n            p300.dispense(PCRVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.mix(PCRMixRep, PCRMixVol, rate=0.5)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A9'\n            p300.pick_up_tip()\n            p300.mix(2,PCRVol, PCR.bottom(z=p300_offset_Temp), rate=0.5)\n            p300.aspirate(PCRVol, PCR.bottom(z=p300_offset_Temp), rate=0.25)\n            p300.dispense(PCRVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.mix(PCRMixRep, PCRMixVol, rate=0.5)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A11'\n            p300.pick_up_tip()\n            p300.mix(2,PCRVol, PCR.bottom(z=p300_offset_Temp), rate=0.5)\n            p300.aspirate(PCRVol, PCR.bottom(z=p300_offset_Temp), rate=0.25)\n            p300.dispense(PCRVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.mix(PCRMixRep, PCRMixVol, rate=0.5)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n    if STEP_PCRDECK == 1:\n        if DRYRUN == 'NO':\n            ############################################################################################################################################\n            protocol.pause('Seal, Run PCR (~30min)')\n\n            thermocycler.close_lid()\n            profile_PCR_1 = [\n                {'temperature': 98, 'hold_time_seconds': 45}\n                ]\n            thermocycler.execute_profile(steps=profile_PCR_1, repetitions=1, block_max_volume=50)\n            profile_PCR_2 = [\n                {'temperature': 98, 'hold_time_seconds': 15},\n                {'temperature': 60, 'hold_time_seconds': 30},\n                {'temperature': 72, 'hold_time_seconds': 30}\n                ]\n            thermocycler.execute_profile(steps=profile_PCR_2, repetitions=PCRCYCLES, block_max_volume=50)\n            profile_PCR_3 = [\n                {'temperature': 72, 'hold_time_minutes': 1}\n                ]\n            thermocycler.execute_profile(steps=profile_PCR_3, repetitions=1, block_max_volume=50)\n            thermocycler.set_block_temperature(4)\n            ############################################################################################################################################\n            thermocycler.open_lid()\n            protocol.pause(\"Remove Seal\")\n            protocol.pause(\"PLACE sample_plate_mag MAGNET\")\n    else:\n        protocol.pause('Seal, Run PCR (~30min)')\n\n    Liquid_trash        = reservoir['A11']\n\n    if STEP_POSTPCR1 == 1:\n        protocol.comment('==============================================')\n        protocol.comment('--> Cleanup 2')\n        protocol.comment('==============================================')\n\n        protocol.comment('--> ADDING AMPure (0.65x)')\n        WASHNUM = 2\n        if DRYRUN == 'NO':\n            AMPureVol = 32.5\n            AMPureMixRep = 50\n            AMPureMixVol = 80\n        if DRYRUN == 'YES':\n            AMPureVol = 32.5\n            AMPureMixRep = 5\n            AMPureMixVol = 80\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A7'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_1)\n            p300.mix(10,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(AMPureMixRep,AMPureMixVol)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A9'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_2)\n            p300.mix(3,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(AMPureMixRep,AMPureMixVol)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A11'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_3)\n            p300.mix(10,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(AMPureMixRep,AMPureMixVol)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=5)\n\n            protocol.comment('MAGNET ENGAGE')\n            mag_block.engage(height_from_base=8.5)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=7.5)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=7)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=6)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=5)\n            protocol.delay(minutes=1)\n\n        protocol.comment('--> Removing Supernatant')\n        RemoveSup = 100\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A7'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_1)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-30, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A7': p300.move_to(A7_p300_bead_side)\n            if X == 'A9': p300.move_to(A9_p300_bead_side)\n            if X == 'A11': p300.move_to(A11_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.aspirate(10, rate=0.1)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A9'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-30, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A7': p300.move_to(A7_p300_bead_side)\n            if X == 'A9': p300.move_to(A9_p300_bead_side)\n            if X == 'A11': p300.move_to(A11_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.aspirate(10, rate=0.1)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A11'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_3)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-30, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A7': p300.move_to(A7_p300_bead_side)\n            if X == 'A9': p300.move_to(A9_p300_bead_side)\n            if X == 'A11': p300.move_to(A11_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.aspirate(10, rate=0.1)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        if samplecolumns == 3:\n            protocol.pause('RESET TIPS')\n            p300.reset_tipracks()\n\n        protocol.comment('--> Repeating 2 washes')\n        washreps = 2\n        for wash in range(washreps):\n            protocol.comment('--> ETOH Wash #'+str(wash+1))\n            ETOHMaxVol = 150\n            WASHNUM = 2\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A7'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_1)\n                p300.aspirate(ETOHMaxVol, EtOH_1.bottom(z=p300_offset_Res))\n                if X == 'A7': p300.move_to(A7_p300_bead_side)\n                if X == 'A9': p300.move_to(A9_p300_bead_side)\n                if X == 'A11': p300.move_to(A11_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A9'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_2)\n                p300.aspirate(ETOHMaxVol, EtOH_2.bottom(z=p300_offset_Res))\n                if X == 'A7': p300.move_to(A7_p300_bead_side)\n                if X == 'A9': p300.move_to(A9_p300_bead_side)\n                if X == 'A11': p300.move_to(A11_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A11'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_3)\n                p300.aspirate(ETOHMaxVol, EtOH_3.bottom(z=p300_offset_Res))\n                if X == 'A7': p300.move_to(A7_p300_bead_side)\n                if X == 'A9': p300.move_to(A9_p300_bead_side)\n                if X == 'A11': p300.move_to(A11_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n            protocol.delay(minutes=0.5)\n\n            protocol.comment('--> Remove ETOH Wash #'+str(wash+1))\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A7'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_1)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A7': p300.move_to(A7_p300_bead_side)\n                if X == 'A9': p300.move_to(A9_p300_bead_side)\n                if X == 'A11': p300.move_to(A11_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A9'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_2)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A7': p300.move_to(A7_p300_bead_side)\n                if X == 'A9': p300.move_to(A9_p300_bead_side)\n                if X == 'A11': p300.move_to(A11_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A11'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_3)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A7': p300.move_to(A7_p300_bead_side)\n                if X == 'A9': p300.move_to(A9_p300_bead_side)\n                if X == 'A11': p300.move_to(A11_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n            wash += 1\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=2)\n\n        protocol.comment('--> Removing Residual ETOH')\n        if TIPREUSE == 'NO':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A7'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A9'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A11'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if TIPREUSE == 'YES':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A7'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_1)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A9'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_2)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A11'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_3)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        if DRYRUN == 'NO':\n            mag_block.engage(height_from_base=6)\n            protocol.comment('AIR DRY')\n            protocol.delay(minutes=0.5)\n\n            protocol.comment('MAGNET DISENGAGE')\n            mag_block.disengage()\n\n        protocol.comment('--> Adding RSB')\n        WASHNUM = 2\n        RSBVol = 25\n        RSBMixRep = 5\n        RSBMixVol = 20\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A7'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_1)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A7': p300.move_to(A7_p300_loc1)\n            if X == 'A9': p300.move_to(A9_p300_loc1)\n            if X == 'A11': p300.move_to(A11_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A7': p300.move_to(A7_p300_loc2)\n            if X == 'A9': p300.move_to(A9_p300_loc2)\n            if X == 'A11': p300.move_to(A11_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc3)\n            if X == 'A9': p300.move_to(A9_p300_loc3)\n            if X == 'A11': p300.move_to(A11_p300_loc3)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc2)\n            if X == 'A9': p300.move_to(A9_p300_loc2)\n            if X == 'A11': p300.move_to(A11_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc1)\n            if X == 'A9': p300.move_to(A9_p300_loc1)\n            if X == 'A11': p300.move_to(A11_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A7': p300.move_to(A7_p300_bead_top)\n                if X == 'A9': p300.move_to(A9_p300_bead_top)\n                if X == 'A11': p300.move_to(A11_p300_bead_top)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A7': p300.move_to(A7_p300_loc2)\n                if X == 'A9': p300.move_to(A9_p300_loc2)\n                if X == 'A11': p300.move_to(A11_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc1)\n                if X == 'A9': p300.move_to(A9_p300_loc1)\n                if X == 'A11': p300.move_to(A11_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc2)\n                if X == 'A9': p300.move_to(A9_p300_loc2)\n                if X == 'A11': p300.move_to(A11_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc3)\n                if X == 'A9': p300.move_to(A9_p300_loc3)\n                if X == 'A11': p300.move_to(A11_p300_loc3)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A9'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_2)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A7': p300.move_to(A7_p300_loc1)\n            if X == 'A9': p300.move_to(A9_p300_loc1)\n            if X == 'A11': p300.move_to(A11_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A7': p300.move_to(A7_p300_loc2)\n            if X == 'A9': p300.move_to(A9_p300_loc2)\n            if X == 'A11': p300.move_to(A11_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc3)\n            if X == 'A9': p300.move_to(A9_p300_loc3)\n            if X == 'A11': p300.move_to(A11_p300_loc3)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc2)\n            if X == 'A9': p300.move_to(A9_p300_loc2)\n            if X == 'A11': p300.move_to(A11_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc1)\n            if X == 'A9': p300.move_to(A9_p300_loc1)\n            if X == 'A11': p300.move_to(A11_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A7': p300.move_to(A7_p300_bead_top)\n                if X == 'A9': p300.move_to(A9_p300_bead_top)\n                if X == 'A11': p300.move_to(A11_p300_bead_top)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A7': p300.move_to(A7_p300_loc2)\n                if X == 'A9': p300.move_to(A9_p300_loc2)\n                if X == 'A11': p300.move_to(A11_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc1)\n                if X == 'A9': p300.move_to(A9_p300_loc1)\n                if X == 'A11': p300.move_to(A11_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc2)\n                if X == 'A9': p300.move_to(A9_p300_loc2)\n                if X == 'A11': p300.move_to(A11_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc3)\n                if X == 'A9': p300.move_to(A9_p300_loc3)\n                if X == 'A11': p300.move_to(A11_p300_loc3)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A11'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_3)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A7': p300.move_to(A7_p300_loc1)\n            if X == 'A9': p300.move_to(A9_p300_loc1)\n            if X == 'A11': p300.move_to(A11_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A7': p300.move_to(A7_p300_loc2)\n            if X == 'A9': p300.move_to(A9_p300_loc2)\n            if X == 'A11': p300.move_to(A11_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc3)\n            if X == 'A9': p300.move_to(A9_p300_loc3)\n            if X == 'A11': p300.move_to(A11_p300_loc3)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc2)\n            if X == 'A9': p300.move_to(A9_p300_loc2)\n            if X == 'A11': p300.move_to(A11_p300_loc2)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A7': p300.move_to(A7_p300_loc1)\n            if X == 'A9': p300.move_to(A9_p300_loc1)\n            if X == 'A11': p300.move_to(A11_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A7': p300.move_to(A7_p300_bead_top)\n                if X == 'A9': p300.move_to(A9_p300_bead_top)\n                if X == 'A11': p300.move_to(A11_p300_bead_top)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A7': p300.move_to(A7_p300_loc2)\n                if X == 'A9': p300.move_to(A9_p300_loc2)\n                if X == 'A11': p300.move_to(A11_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc1)\n                if X == 'A9': p300.move_to(A9_p300_loc1)\n                if X == 'A11': p300.move_to(A11_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc2)\n                if X == 'A9': p300.move_to(A9_p300_loc2)\n                if X == 'A11': p300.move_to(A11_p300_loc2)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A7': p300.move_to(A7_p300_loc3)\n                if X == 'A9': p300.move_to(A9_p300_loc3)\n                if X == 'A11': p300.move_to(A11_p300_loc3)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=2)\n\n            protocol.comment('MAGNET ENGAGE')\n            mag_block.engage(height_from_base=5)\n\n            protocol.delay(minutes=4)\n\n        if samplecolumns == 3:\n            protocol.pause('RESET TIPS')\n            p20.reset_tipracks()\n\n        protocol.comment('--> Transferring Supernatant')\n        if NOMODULES == 'NO':\n            TransferSup = 20\n        else:\n            TransferSup = 20\n        if TIPREUSE == 'NO':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A7'\n                Y = 'A2'\n                p20.pick_up_tip()\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2+5, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A9'\n                Y = 'A4'\n                p20.pick_up_tip()\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2+5, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A11'\n                Y = 'A6'\n                p20.pick_up_tip()\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2+5, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if TIPREUSE == 'YES':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A7'\n                Y = 'A2'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ResusTrans_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ResusTrans_1)\n                elif WASHNUM == 3:\n                    p300.pick_up_tip(W3_ResusTrans_1)\n                p300.aspirate(TransferSup, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n                p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A9'\n                Y = 'A4'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ResusTrans_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ResusTrans_2)\n                elif WASHNUM == 3:\n                    p300.pick_up_tip(W3_ResusTrans_2)\n                p300.aspirate(TransferSup, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n                p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A11'\n                Y = 'A6'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ResusTrans_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ResusTrans_3)\n                elif WASHNUM == 3:\n                    p300.pick_up_tip(W3_ResusTrans_3)\n                p300.aspirate(TransferSup, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n                p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.comment('MAGNET DISENGAGE')\n            mag_block.disengage()\n\n        # positions\n    ############################################################################################################################################\n    #  sample_plate_mag on the Mag Block\n    A2_p20_bead_side  = sample_plate_mag['A2'].center().move(types.Point(x=1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A2_p20_bead_top   = sample_plate_mag['A2'].center().move(types.Point(x=-1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A2_p20_bead_mid   = sample_plate_mag['A2'].center().move(types.Point(x=-1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A2_p300_bead_side = sample_plate_mag['A2'].center().move(types.Point(x=0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A2_p300_bead_top  = sample_plate_mag['A2'].center().move(types.Point(x=-1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A2_p300_bead_mid  = sample_plate_mag['A2'].center().move(types.Point(x=-0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A2_p300_loc1      = sample_plate_mag['A2'].center().move(types.Point(x=-1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-4))               #Beads to the Right\n    A2_p300_loc2      = sample_plate_mag['A2'].center().move(types.Point(x=-1.3,y=0,               z=p300_offset_Mag-4))               #Beads to the Right\n    A2_p300_loc3      = sample_plate_mag['A2'].center().move(types.Point(x=-1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-4))               #Beads to the Right\n    A2_p20_loc1       = sample_plate_mag['A2'].center().move(types.Point(x=-1.3*0.8,y=1.3*0.8,     z=p20_offset_Mag-7))             #Beads to the Right\n    A2_p20_loc2       = sample_plate_mag['A2'].center().move(types.Point(x=-1.3,y=0,               z=p20_offset_Mag-7))             #Beads to the Right\n    A2_p20_loc3       = sample_plate_mag['A2'].center().move(types.Point(x=-1.3*0.8,y=-1.3*0.8,    z=p20_offset_Mag-7))             #Beads to the Right\n    A4_p20_bead_side  = sample_plate_mag['A4'].center().move(types.Point(x=1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A4_p20_bead_top   = sample_plate_mag['A4'].center().move(types.Point(x=-1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A4_p20_bead_mid   = sample_plate_mag['A4'].center().move(types.Point(x=-1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A4_p300_bead_side = sample_plate_mag['A4'].center().move(types.Point(x=0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A4_p300_bead_top  = sample_plate_mag['A4'].center().move(types.Point(x=-1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A4_p300_bead_mid  = sample_plate_mag['A4'].center().move(types.Point(x=-0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A4_p300_loc1      = sample_plate_mag['A4'].center().move(types.Point(x=-1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-4))               #Beads to the Right\n    A4_p300_loc2      = sample_plate_mag['A4'].center().move(types.Point(x=-1.3,y=0,               z=p300_offset_Mag-4))               #Beads to the Right\n    A4_p300_loc3      = sample_plate_mag['A4'].center().move(types.Point(x=-1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-4))               #Beads to the Right\n    A4_p20_loc1       = sample_plate_mag['A4'].center().move(types.Point(x=-1.3*0.8,y=1.3*0.8,     z=p20_offset_Mag-7))             #Beads to the Right\n    A4_p20_loc2       = sample_plate_mag['A4'].center().move(types.Point(x=-1.3,y=0,               z=p20_offset_Mag-7))             #Beads to the Right\n    A4_p20_loc3       = sample_plate_mag['A4'].center().move(types.Point(x=-1.3*0.8,y=-1.3*0.8,    z=p20_offset_Mag-7))             #Beads to the Right\n    A6_p20_bead_side  = sample_plate_mag['A6'].center().move(types.Point(x=1.8*0.50,y=0,         z=p20_offset_Mag-5))                #Beads to the Right\n    A6_p20_bead_top   = sample_plate_mag['A6'].center().move(types.Point(x=-1.5,y=0,               z=p20_offset_Mag+2))                #Beads to the Right\n    A6_p20_bead_mid   = sample_plate_mag['A6'].center().move(types.Point(x=-1,y=0,                 z=p20_offset_Mag-2))                #Beads to the Right\n    A6_p300_bead_side = sample_plate_mag['A6'].center().move(types.Point(x=0.50,y=0,             z=p300_offset_Mag-7.2))             #Beads to the Right\n    A6_p300_bead_top  = sample_plate_mag['A6'].center().move(types.Point(x=-1.30,y=0,              z=p300_offset_Mag-1))               #Beads to the Right\n    A6_p300_bead_mid  = sample_plate_mag['A6'].center().move(types.Point(x=-0.80,y=0,              z=p300_offset_Mag-4))               #Beads to the Right\n    A6_p300_loc1      = sample_plate_mag['A6'].center().move(types.Point(x=-1.3*0.8,y=1.3*0.8,     z=p300_offset_Mag-4))               #Beads to the Right\n    A6_p300_loc2      = sample_plate_mag['A6'].center().move(types.Point(x=-1.3,y=0,               z=p300_offset_Mag-4))               #Beads to the Right\n    A6_p300_loc3      = sample_plate_mag['A6'].center().move(types.Point(x=-1.3*0.8,y=-1.3*0.8,    z=p300_offset_Mag-4))               #Beads to the Right\n    A6_p20_loc1       = sample_plate_mag['A6'].center().move(types.Point(x=-1.3*0.8,y=1.3*0.8,     z=p20_offset_Mag-7))             #Beads to the Right\n    A6_p20_loc2       = sample_plate_mag['A6'].center().move(types.Point(x=-1.3,y=0,               z=p20_offset_Mag-7))             #Beads to the Right\n    A6_p20_loc3       = sample_plate_mag['A6'].center().move(types.Point(x=-1.3*0.8,y=-1.3*0.8,    z=p20_offset_Mag-7))             #Beads to the Right\n    ############################################################################################################################################\n\n    if STEP_POSTPCR2 == 1:\n        protocol.comment('==============================================')\n        protocol.comment('--> Cleanup 3')\n        protocol.comment('==============================================')\n\n        protocol.comment('--> ADDING AMPure (1.2x)')\n        WASHNUM = 3\n        if DRYRUN == 'NO':\n            AMPureVol = 24\n            AMPureMixRep = 50\n            AMPureMixVol = 42\n        if DRYRUN == 'YES':\n            AMPureVol = 24\n            AMPureMixRep = 5\n            AMPureMixVol = 42\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A2'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_1)\n            p300.mix(10,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(AMPureMixRep,AMPureMixVol)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A4'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_2)\n            p300.mix(3,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(AMPureMixRep,AMPureMixVol)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A6'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_3)\n            p300.mix(3,AMPureVol+10, AMPure.bottom(z=p300_offset_Res))\n            p300.aspirate(AMPureVol, AMPure.bottom(z=p300_offset_Res), rate=0.25)\n            p300.dispense(AMPureVol, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            p300.mix(AMPureMixRep,AMPureMixVol)\n            p300.blow_out(sample_plate_mag[X].top(z=-5))\n            p300.move_to(bypass)\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=5)\n\n            protocol.comment('MAGNET ENGAGE')\n            mag_block.engage(height_from_base=8.5)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=7.5)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=7)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=6)\n            protocol.delay(minutes=1)\n            mag_block.engage(height_from_base=5)\n            protocol.delay(minutes=1)\n\n        if samplecolumns == 2:\n            protocol.pause('RESET TIPS')\n            p300.reset_tipracks()\n\n        protocol.comment('--> Removing Supernatant')\n        RemoveSup = 100\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A2'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_1)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-30, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A2': p300.move_to(A2_p300_bead_side)\n            if X == 'A4': p300.move_to(A4_p300_bead_side)\n            if X == 'A6': p300.move_to(A6_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.aspirate(10, rate=0.1)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A4'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-30, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A2': p300.move_to(A2_p300_bead_side)\n            if X == 'A4': p300.move_to(A4_p300_bead_side)\n            if X == 'A6': p300.move_to(A6_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.aspirate(10, rate=0.1)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A6'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_AMPure_Bind_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_AMPure_Bind_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_AMPure_Bind_3)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n            p300.aspirate(RemoveSup-30, rate=0.25)\n            p300.default_speed = 5\n            if X == 'A2': p300.move_to(A2_p300_bead_side)\n            if X == 'A4': p300.move_to(A4_p300_bead_side)\n            if X == 'A6': p300.move_to(A6_p300_bead_side)\n            protocol.delay(minutes=0.1)\n            p300.aspirate(20, rate=0.2)\n            p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n            protocol.delay(minutes=0.1)\n            p300.aspirate(10, rate=0.1)\n            p300.move_to(sample_plate_mag[X].top(z=2))\n            p300.default_speed = 400\n            p300.dispense(200, Liquid_trash)\n            p300.move_to(bypass)\n            p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        protocol.comment('--> Repeating 2 washes')\n        washreps = 2\n        for wash in range(washreps):\n            protocol.comment('--> ETOH Wash #'+str(wash+1))\n            ETOHMaxVol = 150\n            WASHNUM = 2\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A2'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_1)\n                p300.aspirate(ETOHMaxVol, EtOH_1.bottom(z=p300_offset_Res))\n                if X == 'A2': p300.move_to(A2_p300_bead_side)\n                if X == 'A4': p300.move_to(A4_p300_bead_side)\n                if X == 'A6': p300.move_to(A6_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A4'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_2)\n                p300.aspirate(ETOHMaxVol, EtOH_2.bottom(z=p300_offset_Res))\n                if X == 'A2': p300.move_to(A2_p300_bead_side)\n                if X == 'A4': p300.move_to(A4_p300_bead_side)\n                if X == 'A6': p300.move_to(A6_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A6'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_washtip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_washtip_3)\n                p300.aspirate(ETOHMaxVol, EtOH_2.bottom(z=p300_offset_Res))\n                if X == 'A2': p300.move_to(A2_p300_bead_side)\n                if X == 'A4': p300.move_to(A4_p300_bead_side)\n                if X == 'A6': p300.move_to(A6_p300_bead_side)\n                p300.dispense(ETOHMaxVol-50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].center())\n                p300.dispense(50, rate=0.5)\n                p300.move_to(sample_plate_mag[X].top(z=2))\n                p300.default_speed = 5\n                p300.move_to(sample_plate_mag[X].top(z=-2))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.default_speed = 400\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n            protocol.delay(minutes=0.5)\n\n            protocol.comment('--> Remove ETOH Wash #'+str(wash+1))\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A2'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_1)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A2': p300.move_to(A2_p300_bead_side)\n                if X == 'A4': p300.move_to(A4_p300_bead_side)\n                if X == 'A6': p300.move_to(A6_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A4'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_2)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A2': p300.move_to(A2_p300_bead_side)\n                if X == 'A4': p300.move_to(A4_p300_bead_side)\n                if X == 'A6': p300.move_to(A6_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A6'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_3)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+4))\n                p300.aspirate(ETOHMaxVol, rate=0.25)\n                p300.default_speed = 5\n                if X == 'A2': p300.move_to(A2_p300_bead_side)\n                if X == 'A4': p300.move_to(A4_p300_bead_side)\n                if X == 'A6': p300.move_to(A6_p300_bead_side)\n                protocol.delay(minutes=0.1)\n                p300.aspirate(200-ETOHMaxVol, rate=0.25)\n                p300.default_speed = 400\n                p300.dispense(200, Liquid_trash)\n                p300.move_to(Liquid_trash.top(z=5))\n                protocol.delay(minutes=0.1)\n                p300.blow_out()\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n            wash += 1\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=2)\n\n        protocol.comment('--> Removing Residual ETOH')\n        if TIPREUSE == 'NO':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A2'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A4'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A6'\n                p20.pick_up_tip()\n                p20.move_to(sample_plate_mag[X].bottom(z=p20_offset_Mag+1))\n                p20.aspirate(20, rate=0.25)if NOMODULES == 'NO' else p20.aspirate(10, rate=0.25)\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if TIPREUSE == 'YES':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A2'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_1)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A4'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_2)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A6'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ETOH_removetip_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ETOH_removetip_3)\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag+1))\n                p300.aspirate(20, rate=0.25)\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        if DRYRUN == 'NO':\n            mag_block.engage(height_from_base=6)\n            protocol.comment('AIR DRY')\n            protocol.delay(minutes=0.5)\n\n            protocol.comment('MAGNET DISENGAGE')\n            mag_block.disengage()\n\n        protocol.comment('--> Adding RSB')\n        WASHNUM = 3\n        RSBVol = 22\n        RSBMixRep = 5\n        RSBMixVol = 20\n        if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n            X = 'A2'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_1)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_1)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_1)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n            X = 'A4'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_2)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_2)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_2)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n        if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n            X = 'A6'\n            if TIPREUSE == 'NO':\n                p300.pick_up_tip()\n            elif WASHNUM == 1:\n                p300.pick_up_tip(W1_ResusTrans_3)\n            elif WASHNUM == 2:\n                p300.pick_up_tip(W2_ResusTrans_3)\n            elif WASHNUM == 3:\n                p300.pick_up_tip(W3_ResusTrans_3)\n            p300.aspirate(RSBVol, RSB.bottom(p300_offset_Res))\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            p300.default_speed = 5\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            if X == 'A2': p300.move_to(A2_p300_loc1)\n            if X == 'A4': p300.move_to(A4_p300_loc1)\n            if X == 'A6': p300.move_to(A6_p300_loc1)\n            p300.dispense(RSBVol/5, rate=0.75)\n            reps = 5\n            for x in range(reps):\n                p300.move_to(sample_plate_mag[X].bottom(z=p300_offset_Mag))\n                p300.aspirate(RSBVol, rate=0.5)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.dispense(RSBVol, rate=1)\n            reps = 3\n            for x in range(reps):\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n                if X == 'A2': p300.move_to(A2_p300_loc1)\n                if X == 'A4': p300.move_to(A4_p300_loc1)\n                if X == 'A6': p300.move_to(A6_p300_loc1)\n                p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].bottom(z=p300_offset_Mag))\n            p300.mix(RSBMixRep,RSBMixVol)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].top())\n            protocol.delay(seconds=0.5)\n            p300.move_to(sample_plate_mag.wells_by_name()[X].center())\n            p300.default_speed = 400\n            if TIPREUSE == 'NO':\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            else:\n                p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.delay(minutes=2)\n\n            protocol.comment('MAGNET ENGAGE')\n            mag_block.engage(height_from_base=5)\n\n            protocol.delay(minutes=4)\n\n        if samplecolumns == 2:\n            protocol.pause('RESET TIPS')\n            p20.reset_tipracks()\n\n        protocol.comment('--> Transferring Supernatant')\n        if NOMODULES == 'NO':\n            TransferSup = 20\n        else:\n            TransferSup = 20\n        if TIPREUSE == 'NO':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A2'\n                Y = 'A8'\n                p20.pick_up_tip()\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2+5, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A4'\n                Y = 'A10'\n                p20.pick_up_tip()\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2+5, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A6'\n                Y = 'A12'\n                p20.pick_up_tip()\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.aspirate(TransferSup/2, sample_plate_mag[X].bottom(z=p20_offset_Mag), rate=0.25)\n                p20.dispense(TransferSup/2+5, sample_plate_mag[Y].bottom(z=p20_offset_Mag))\n                p20.move_to(bypass)\n                p20.drop_tip() if DRYRUN == 'NO' else p20.return_tip()\n        if TIPREUSE == 'YES':\n            if samplecolumns >= 1:#-----------------------------------------------------------------------------------------\n                X = 'A2'\n                Y = 'A8'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ResusTrans_1)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ResusTrans_1)\n                elif WASHNUM == 3:\n                    p300.pick_up_tip(W3_ResusTrans_1)\n                p300.aspirate(TransferSup, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n                p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 2:#-----------------------------------------------------------------------------------------\n                X = 'A4'\n                Y = 'A10'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ResusTrans_2)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ResusTrans_2)\n                elif WASHNUM == 3:\n                    p300.pick_up_tip(W3_ResusTrans_2)\n                p300.aspirate(TransferSup, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n                p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n            if samplecolumns >= 3:#-----------------------------------------------------------------------------------------\n                X = 'A6'\n                Y = 'A12'\n                if TIPREUSE == 'NO':\n                    p300.pick_up_tip()\n                elif WASHNUM == 1:\n                    p300.pick_up_tip(W1_ResusTrans_3)\n                elif WASHNUM == 2:\n                    p300.pick_up_tip(W2_ResusTrans_3)\n                elif WASHNUM == 3:\n                    p300.pick_up_tip(W3_ResusTrans_3)\n                p300.aspirate(TransferSup, sample_plate_mag[X].bottom(z=p300_offset_Mag), rate=0.25)\n                p300.dispense(TransferSup+5, sample_plate_mag[Y].bottom(z=p300_offset_Mag))\n                p300.move_to(bypass)\n                p300.drop_tip() if DRYRUN == 'NO' else p300.return_tip()\n\n        if DRYRUN == 'NO':\n            protocol.comment('MAGNET DISENGAGE')\n            mag_block.disengage()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "Number of Samples",
            "name": "SAMPLES",
            "options": [
                {
                    "label": "8",
                    "value": "8x"
                },
                {
                    "label": "16",
                    "value": "16x"
                },
                {
                    "label": "24",
                    "value": "24x"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 30,
            "label": "Fragmentation Time (minutes)",
            "name": "FRAGTIME",
            "type": "int"
        },
        {
            "default": 4,
            "label": "PCR Cycles",
            "name": "PCRCYCLES",
            "type": "int"
        },
        {
            "label": "Dry Run",
            "name": "DRYRUN",
            "options": [
                {
                    "label": "Yes",
                    "value": "YES"
                },
                {
                    "label": "No",
                    "value": "NO"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Use Modules?",
            "name": "NOMODULES",
            "options": [
                {
                    "label": "Yes",
                    "value": "NO"
                },
                {
                    "label": "NO",
                    "value": "YES"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Reuse Tips?",
            "name": "TIPREUSE",
            "options": [
                {
                    "label": "Yes",
                    "value": "YES"
                },
                {
                    "label": "No",
                    "value": "NO"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Use protocol specific z-offsets?",
            "name": "OFFSET",
            "options": [
                {
                    "label": "Yes",
                    "value": "YES"
                },
                {
                    "label": "No",
                    "value": "NO"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include Fragmentation / End-Repair / A-Tailing Step?",
            "name": "STEP_FRERAT",
            "options": [
                {
                    "label": "Yes",
                    "value": "1"
                },
                {
                    "label": "No",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "If yes, Fragmentation / End-Repair / A-Tailing on deck or off deck?",
            "name": "STEP_FRERATDECK",
            "options": [
                {
                    "label": "On Deck",
                    "value": "1"
                },
                {
                    "label": "Off Deck",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include Ligation Step?",
            "name": "STEP_LIG",
            "options": [
                {
                    "label": "Yes",
                    "value": "1"
                },
                {
                    "label": "No",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "If yes, ligation Step on or off deck?",
            "name": "STEP_LIGDECK",
            "options": [
                {
                    "label": "On deck",
                    "value": "1"
                },
                {
                    "label": "Off deck",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include Post Ligation Step?",
            "name": "STEP_POSTLIG",
            "options": [
                {
                    "label": "Yes",
                    "value": "1"
                },
                {
                    "label": "No",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include PCR Step?",
            "name": "STEP_PCR",
            "options": [
                {
                    "label": "Yes",
                    "value": "1"
                },
                {
                    "label": "No",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "If yes, PCR step on or off deck?",
            "name": "STEP_PCRDECK",
            "options": [
                {
                    "label": "On Deck",
                    "value": "1"
                },
                {
                    "label": "Off Deck",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include First Post PCR Step?",
            "name": "STEP_POSTPCR1",
            "options": [
                {
                    "label": "Yes",
                    "value": "1"
                },
                {
                    "label": "No",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include Second Post PCR Step?",
            "name": "STEP_POSTPCR2",
            "options": [
                {
                    "label": "Yes",
                    "value": "1"
                },
                {
                    "label": "No",
                    "value": "0"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 Multi-Channel Mount",
            "name": "p20_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P300 Multi-Channel Mount",
            "name": "P300_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p20_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with Bio-Rad Well Plate 200 \u00b5L on Temperature Module GEN2 on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_aluminumblock_biorad_wellplate_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "IDT xGEN EZ",
        "source": "Protocol Library"
    },
    "modules": []
}