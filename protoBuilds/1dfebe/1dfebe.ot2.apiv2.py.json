{
    "content": "import itertools\nimport math\n\nmetadata = {\n    'protocolName': 'Urine Toxicology Using Enzyme Hydrolysis',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n\n    [use_csv, csv_samp, num_samp, v_0_tube15_enz, v_0_tube15_acid,\n        v_0_tube50, samp_asp_height, p300_mount] = get_values(  # noqa: F821\n        \"use_csv\", \"csv_samp\", \"num_samp\", \"v_0_tube15_enz\", \"v_0_tube15_acid\",\n            \"v_0_tube50\", \"samp_asp_height\",  \"p300_mount\")\n\n    if not 1 <= num_samp <= 81:\n        raise Exception(\"Enter a sample number between 1-81\")\n\n    v_0_tube50 *= 1000\n    v_0_tube15_enz *= 1000\n    v_0_tube15_acid *= 1000\n\n    # load labware\n    tuberacks = [ctx.load_labware('opentrons_24_tuberack_nest_1.5ml_screwcap',\n                                  slot, label=\"SAMPLE RACK\")\n                 for slot in ['4', '1', '5', '2']]\n    plate = ctx.load_labware('biorad_96_wellplate_200ul_pcr', '3')\n    tiprack = ctx.load_labware('opentrons_96_tiprack_300ul', '10')\n    reagents = ctx.load_labware(\n                    'opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical', '6')\n\n    # load instrument\n    p300 = ctx.load_instrument('p300_single_gen2',\n                               p300_mount, tip_racks=[tiprack])\n\n    if csv_samp[0] == ',':\n        csv_samp = csv_samp[1:]\n    plate_map_nest = [[val.strip() for val in line.split(',')][1:]\n                      for line in csv_samp.splitlines()\n                      if line.split(',')[0].strip()][1:]\n\n    # protocol\n    tube_map_double_nest = [\n\n                  [tuberacks[j].columns()[i]+tuberacks[j+1].columns()[i]\n                   for i in range(len(tuberacks[0].columns()))]\n                  for j in range(0, 4, 2)\n\n                  ]\n\n    tube_map_nest = list(itertools.chain.from_iterable(tube_map_double_nest))\n    full_tube_map = list(itertools.chain.from_iterable(tube_map_nest))\n    asp_height_concat = list(itertools.chain.from_iterable(plate_map_nest))\n    controls = 15\n\n    tube_map = full_tube_map[controls:controls+num_samp]\n    sample_plate = plate.wells()[controls:controls+num_samp]\n    asp_height_map = asp_height_concat[controls:controls+num_samp]\n\n    # liquid height tracking\n    v_naught_enz = v_0_tube15_enz\n    v_naught_acid = v_0_tube15_acid\n    v_naught_50 = v_0_tube50\n\n    radius15 = reagents.wells()[0].diameter/2\n    radius50 = reagents.wells()[-1].diameter/2\n\n    h_naught15_enz = v_naught_enz/(math.pi*radius15**2)\n    h_naught15_acid = v_naught_acid/(math.pi*radius15**2)\n    h_naught50 = v_naught_50/(math.pi*radius50**2)\n\n    h15_enz = h_naught15_enz\n    h15_acid = h_naught15_acid\n    h50 = h_naught50\n\n    def adjust_height(vol, tube):\n        nonlocal h15_enz\n        nonlocal h15_acid\n        nonlocal h50\n\n        dh15 = vol/(math.pi*radius15**2)\n        dh50 = vol/(math.pi*radius50**2)\n        if tube == 'enzyme':\n            h15_enz -= dh15\n            if h15_enz < 20:\n                h15_enz = 1\n            else:\n                return h15_enz - 10\n        elif tube == 'acid':\n            h15_acid -= dh15\n            if h15_acid < 20:\n                h15_acid = 1\n            else:\n                return h15_acid - 10\n        else:\n            h50 -= dh50\n            if h50 < 10:\n                h50 = 1\n            else:\n                return h50 - 10\n\n    # reagents\n    enzyme_hydrolysis = reagents.wells()[0]\n    trichloro_acid = reagents.wells()[1]\n    buffer = reagents.wells()[-1]\n\n    def create_chunks(list, n):\n        for i in range(0, len(list), n):\n            yield list[i:i+n]\n\n    # move enzyme to plate\n    ctx.comment('Moving enzyme to plate')\n    p300.pick_up_tip()\n    for chunk in create_chunks(plate.wells()[:num_samp+controls], 4):\n        p300.aspirate(240, enzyme_hydrolysis)\n        [p300.dispense(60, well) for well in chunk]\n        adjust_height(240, 'enzyme')\n    p300.drop_tip()\n    ctx.comment('\\n\\n\\n\\n\\n\\n')\n\n    ctx.comment('Moving urine to plate')\n    # move urine sample to plate\n    for tube, dest_well, height in zip(tube_map, sample_plate, asp_height_map):\n        p300.pick_up_tip()\n        if use_csv:\n            p300.aspirate(50, tube.bottom(\n                          z=samp_asp_height\n                          if height == 'X' or height == 'x' else 1))\n        else:\n            p300.aspirate(50, tube.bottom(z=samp_asp_height))\n        p300.dispense(50, dest_well)\n        p300.mix(5, 80, dest_well)\n        p300.touch_tip()\n        p300.drop_tip()\n    ctx.comment('\\n\\n\\n\\n\\n\\n')\n\n    ctx.delay(minutes=30)\n\n    # move acid to plate\n    ctx.comment('Moving acid to plate')\n    disp_vol = 30\n    p300.pick_up_tip()\n    for chunk in create_chunks(plate.wells()[:num_samp+controls], 13):\n        p300.aspirate(20*len(chunk)+disp_vol, trichloro_acid)\n        [p300.dispense(20, well.top(z=-2)) for well in chunk]\n        p300.dispense(disp_vol, trichloro_acid)\n        p300.blow_out()\n        adjust_height(20, 'acid')\n    p300.drop_tip()\n    ctx.comment('\\n\\n\\n\\n\\n\\n')\n    ctx.pause(\n                \"\"\"\n    Protocol pausing - Trichloroacetic acid solution has been added.\n    to the plate. Select \"Resume\" on the Opentrons App to resume the protocol.\n                \"\"\")\n\n    # move buffer to plate\n    ctx.comment('Moving buffer to plate')\n    p300.pick_up_tip()\n    for well in plate.wells()[:num_samp+controls]:\n        p300.aspirate(150, buffer)\n        p300.dispense(150, well.top())\n        p300.blow_out(well.top())\n        adjust_height(150, 'buffer')\n    p300.drop_tip()\n    ctx.comment('\\n\\n\\n\\n\\n\\n')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "Use csv for this run?",
            "name": "use_csv",
            "options": [
                {
                    "label": "Yes, use csv",
                    "value": true
                },
                {
                    "label": "No, do not use csv",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "default": ",1,2,3,4,5,6,7,8,9,10,11,12\\nA,X,X,X,X,X,X,X,O,X,X,O,X\\nB,O,X,X,X,X,X,X,X,X,X,X,X\\nC,X,X,X,O,X,X,X,X,X,X,X,X\\nD,X,X,X,X,X,X,O,X,X,X,X,X\\nE,X,O,X,X,X,X,X,X,X,X,X,X\\nF,X,X,X,X,X,O,X,O,X,X,O,X\\nG,X,X,X,X,O,X,X,X,X,X,X,X\\nH,X,X,X,X,O,X,X,X,O,X,X,X",
            "label": ".CSV File",
            "name": "csv_samp",
            "type": "textFile"
        },
        {
            "default": 81,
            "label": "Number of Samples (1-81)",
            "name": "num_samp",
            "type": "int"
        },
        {
            "default": 8.2,
            "label": "Initial Volume in Enzyme Hydrolysis 15mL tube (mL)",
            "name": "v_0_tube15_enz",
            "type": "float"
        },
        {
            "default": 11.4,
            "label": "Initial Volume in Trichloroacetic acid solution 15mL tube(mL)",
            "name": "v_0_tube15_acid",
            "type": "float"
        },
        {
            "default": 25,
            "label": "Initial Volume in Dilution Buffer 50mL tube (mL)",
            "name": "v_0_tube50",
            "type": "float"
        },
        {
            "default": 3,
            "label": "Sample Aspiration Height (mm)",
            "name": "samp_asp_height",
            "type": "int"
        },
        {
            "label": "P300 Multi-Channel Mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "SAMPLE RACK on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_24_tuberack_nest_1.5ml_screwcap"
        },
        {
            "name": "SAMPLE RACK on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_24_tuberack_nest_1.5ml_screwcap"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 3",
            "share": false,
            "slot": "3",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "SAMPLE RACK on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_24_tuberack_nest_1.5ml_screwcap"
        },
        {
            "name": "SAMPLE RACK on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_24_tuberack_nest_1.5ml_screwcap"
        },
        {
            "name": "Opentrons 10 Tube Rack with Falcon 4x50 mL, 6x15 mL Conical on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Urine Toxicology Using Enzyme Hydrolysis",
        "source": "Custom Protocol Request"
    },
    "modules": []
}