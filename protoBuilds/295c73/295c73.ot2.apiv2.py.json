{
    "content": "import math\n\nmetadata = {\n    'protocolName': 'swiftbiosci.com accel-amplicon-plus-egfr-pathway-panel',\n    'author': 'Steve Plonk <protocols@opentrons.com>',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    # get parameter values from json above\n    [sample_count, mm_volume\n     ] = get_values(  # noqa: F821\n      'sample_count', 'mm_volume')\n\n    ctx.set_rail_lights(True)\n    ctx.delay(seconds=10)\n    if sample_count < 1 or sample_count > 24:\n        raise Exception('Invalid number of DNA samples (must be 1-24).')\n\n    def pause_attention(message):\n        ctx.set_rail_lights(False)\n        ctx.delay(seconds=10)\n        ctx.pause(message)\n        ctx.set_rail_lights(True)\n\n    pause_attention(\"\"\"PCR set up: Pre-cool temp module to 4 degrees, pre-heat\n    cycler block (98) and lid (105) with OT app settings, sample plate slot 1\n    with up to 24 samples (in column order A1-H1), master mix tube A1 of block\n    on slot 5.\"\"\")\n\n    # tips, p20 single, p300 multi\n    tips20 = [ctx.load_labware(\"opentrons_96_filtertiprack_20ul\", '3')]\n    p20s = ctx.load_instrument(\n        \"p20_single_gen2\", 'left', tip_racks=tips20)\n    tips300 = [ctx.load_labware(\"opentrons_96_filtertiprack_200ul\", '4')]\n    p300m = ctx.load_instrument(\n        \"p300_multi_gen2\", 'right', tip_racks=tips300)\n    tip_max = 150\n    named_tips = {}\n    for name, well in zip([\n     'etoh_tips', 'sup_tips', 'index_rxn_tips'], ['A1', 'A2', 'A5']):\n        named_tips[name] = tips300[0][well]\n\n    # helper functions\n    def no_edges(plate):\n        return [well for column in [\n         column for column in plate.columns()[1:11]] for well in column[1:7]]\n\n    def create_chunks(list_name, n):\n        for i in range(0, len(list_name), n):\n            yield list_name[i:i+n]\n\n    def slow_tip_withdrawal(pipette, well_location, to_center=False):\n        if pipette.mount == 'right':\n            axis = 'A'\n        else:\n            axis = 'Z'\n        ctx.max_speeds[axis] = 10\n        if to_center is False:\n            pipette.move_to(well_location.top())\n        else:\n            pipette.move_to(well_location.center())\n        ctx.max_speeds[axis] = None\n\n    def etoh_settings():\n        p300m.flow_rate.blow_out = 300\n\n    def default_settings():\n        p300m.flow_rate.blow_out = 94\n\n    def rep_max_transfer(\n     remaining, source, dest, tip_max_vol=tip_max, air=0, blow=0,\n     touch=False):\n        vol = tip_max_vol - air\n        while remaining > vol:\n            p300m.aspirate(vol, source)\n            if air > 0:\n                p300m.air_gap(air)\n            p300m.dispense(tip_max_vol, dest)\n            if blow > 0:\n                for rep in range(blow):\n                    if rep > 0:\n                        p300m.aspirate(tip_max, dest)\n                    ctx.delay(seconds=1)\n                    p300m.blow_out(dest)\n            if touch is True:\n                p300m.touch_tip(radius=0.75, v_offset=-2, speed=20)\n            remaining -= vol\n        p300m.aspirate(remaining, source)\n        if air > 0:\n            p300m.air_gap(air)\n        p300m.dispense(remaining + air, dest)\n        if blow > 0:\n            for rep in range(blow):\n                if rep > 0:\n                    p300m.aspirate(tip_max, dest)\n                ctx.delay(seconds=1)\n                p300m.blow_out(dest)\n        if touch is True:\n            p300m.touch_tip(radius=0.75, v_offset=-2, speed=20)\n\n    def reuse_tips(which_tips):\n        p300m.reset_tipracks()\n        p300m.starting_tip = named_tips[which_tips]\n\n    # temp mod 4 deg, 96-well block, 96-well plate, DNA samples and master mix\n    temp = ctx.load_module('Temperature Module', '6')\n    output_plate = temp_plate = temp.load_labware(\n     'opentrons_96_aluminumblock_nest_wellplate_100ul')\n    temp.set_temperature(4)\n    pcr_setups = no_edges(temp_plate)[:sample_count]\n\n    # pre-chilled aluminum block containing master mix tube in well A1\n    block = ctx.load_labware(\n     'opentrons_24_aluminumblock_nest_2ml_snapcap', '5')\n    mm = beads = index_rxn_mx = peg_nacl = block.wells_by_name()['A1']\n\n    # thermocycler pre-heated block (98) and lid (105)\n    tc = ctx.load_module('thermocycler')\n    tc.open_lid()\n    tc_plate = tc.load_labware(\"nest_96_wellplate_100ul_pcr_full_skirt\")\n    tc.set_lid_temperature(105)\n    tc.set_block_temperature(98)\n\n    # magnetic module disengaged\n    mag = ctx.load_module('magnetic module gen2', 9)\n    mag_plate = mag.load_labware(\"nest_96_wellplate_100ul_pcr_full_skirt\")\n    mag.disengage()\n    mag_samps = mag_plate.wells()[:sample_count]\n    mag_samps_indx = mag_plate.wells()[32:sample_count + 32]\n\n    # 96-well plate slot 1 (sample plate, later index plate)\n    temporary_plate = ctx.load_labware(\n     \"nest_96_wellplate_100ul_pcr_full_skirt\", '1')\n    initial_dna = indexes = temporary_plate.wells()[:sample_count]\n\n    # reservoir for etoh, waste, te\n    reservoir = ctx.load_labware(\"nest_12_reservoir_15ml\", '2')\n    [etoh, waste, post_pcr_te] = [reservoir.wells_by_name()[\n     well] for well in ['A1', 'A3', 'A5']]\n\n    # PCR setup: p300m \"single channel\" distribute master mix to 4 degree wells\n    p300m.pick_up_tip(tips300[0]['H9'])\n    p300m.well_bottom_clearance.aspirate = 8\n    p300m.aspirate(10, mm, rate=0.25)\n    ctx.delay(seconds=1)\n    for chunk in create_chunks(pcr_setups, 6):\n        p300m.aspirate(len(chunk)*mm_volume, mm, rate=0.25)\n        ctx.delay(seconds=3)\n        slow_tip_withdrawal(p300m, mm)\n        if p300m.well_bottom_clearance.aspirate >= 3:\n            p300m.well_bottom_clearance.aspirate -= 2\n        for well in chunk:\n            p300m.dispense(20, well.bottom(2), rate=0.25)\n            ctx.delay(seconds=2)\n            slow_tip_withdrawal(p300m, well)\n    p300m.drop_tip()\n    p300m.well_bottom_clearance.aspirate = 1\n\n    # mix DNA with master mix at 4 degrees\n    for dna, rxn in zip(initial_dna, pcr_setups):\n        p20s.pick_up_tip()\n        p20s.aspirate(10, dna)\n        p20s.dispense(8, rxn)\n        for rep in range(5):\n            p20s.aspirate(15, rxn.bottom(2), rate=0.5)\n            ctx.delay(seconds=1)\n            p20s.dispense(15, rxn.bottom(2), rate=0.5)\n            ctx.delay(seconds=1)\n        slow_tip_withdrawal(p20s, rxn, to_center=True)\n        p20s.dispense(2, rxn.center())\n        ctx.delay(seconds=1)\n        p20s.blow_out()\n        p20s.touch_tip(rxn, radius=0.75, v_offset=-2, speed=10.0)\n        p20s.drop_tip()\n\n    pause_attention(\"\"\"Set up complete. Please transfer plate from temperature\n    module to pre-heated cycler and resume to run PCR.\"\"\")\n\n    # cycling profiles\n    profiles = [[{\n     'temperature': temp, 'hold_time_seconds': sec\n     } for temp, sec in zip([98], [30])], [{\n      'temperature': temp, 'hold_time_seconds': sec\n      } for temp, sec in zip([98, 63, 65], [10, 300, 60])], [{\n       'temperature': temp, 'hold_time_seconds': sec\n       } for temp, sec in zip([98, 64], [10, 60])], [{\n        'temperature': temp, 'hold_time_seconds': sec\n        } for temp, sec in zip([65], [60])]]\n\n    # run pcr\n    tc.close_lid()\n    for profile, reps in zip(profiles, [1, 4, 23, 1]):\n        tc.execute_profile(\n         steps=profile, repetitions=reps, block_max_volume=30)\n    tc.set_block_temperature(4, hold_time_seconds=30)\n    tc.deactivate_block()\n    tc.deactivate_lid()\n    tc.open_lid()\n\n    # post pcr clean up\n    pause_attention(\n      \"\"\"Post-PCR clean up: place beads (A1 of block in slot 5) and ethanol\n      (A1 of reservoir in slot 2) on OT-2 deck.\"\"\")\n\n    # one-tip dispense beads to columns of mag plate\n    num_cols = math.ceil(sample_count / 8)\n    p300m.pick_up_tip(tips300[0]['G9'])\n    p300m.aspirate(10, beads, rate=0.25)\n    ctx.delay(seconds=1)\n    for rep in range(10):\n        p300m.aspirate(100, beads.bottom(2), rate=0.25)\n        ctx.delay(seconds=2)\n        p300m.dispense(100, beads.bottom(2), rate=0.25)\n        ctx.delay(seconds=2)\n    for index, column in enumerate(mag_plate.columns()[:num_cols]):\n        p300m.aspirate(144, beads, rate=0.25)\n        ctx.delay(seconds=5)\n        slow_tip_withdrawal(p300m, beads)\n        for well in column[:4]:\n            p300m.dispense(36, well.bottom(2), rate=0.25)\n            ctx.delay(seconds=1)\n            slow_tip_withdrawal(p300m, well)\n        if index == len(mag_plate.columns()[:num_cols]) - 1:\n            p300m.aspirate(136, beads, rate=0.25)\n        else:\n            p300m.aspirate(144, beads, rate=0.25)\n        ctx.delay(seconds=5)\n        slow_tip_withdrawal(p300m, beads)\n        for well in column[4:]:\n            p300m.dispense(36, well.bottom(2), rate=0.25)\n            ctx.delay(seconds=1)\n            slow_tip_withdrawal(p300m, well)\n    p300m.drop_tip()\n\n    # post-PCR sample to mag mod (reformat columns of 6 to columns of 8), mix\n    for tip, source, dest in zip(['C10', 'A10', 'E11', 'A11', 'G12', 'A12'],\n                                 ['B2', 'B3', 'D3', 'B4', 'F4', 'B5'],\n                                 ['A1', 'G1', 'A2', 'E2', 'A3', 'C3']):\n        p300m.pick_up_tip(tips300[0][tip])\n        p300m.aspirate(30, tc_plate.wells_by_name()[source], rate=0.5)\n        ctx.delay(seconds=1)\n        p300m.dispense(25, mag_plate.wells_by_name()[dest], rate=0.5)\n        ctx.delay(seconds=1)\n        for rep in range(10):\n            p300m.aspirate(30, mag_plate.wells_by_name()[dest], rate=0.25)\n            ctx.delay(seconds=2)\n            if rep == 9:\n                p300m.dispense(35, mag_plate.wells_by_name()[dest], rate=0.25)\n            else:\n                p300m.dispense(30, mag_plate.wells_by_name()[dest], rate=0.25)\n            ctx.delay(seconds=2)\n        p300m.drop_tip()\n\n    # set thermocycler block temperature to 37 for indexing step\n    tc.set_block_temperature(37)\n\n    # magnets engaged, let stand 5 min\n    ctx.delay(minutes=5)\n    mag.engage()\n    ctx.delay(minutes=5)\n\n    # remove sup\n    reuse_tips('sup_tips')\n    for column in mag_plate.columns()[:num_cols]:\n        p300m.pick_up_tip()\n        p300m.aspirate(60, column[0].bottom(2), rate=0.25)\n        ctx.delay(seconds=2)\n        p300m.dispense(60, waste.top())\n        ctx.delay(seconds=1)\n        p300m.return_tip()\n\n    # wash 2x 180 ul 80% etoh, reuse tips\n    etoh_settings()\n    p300m.reset_tipracks()\n    p300m.pick_up_tip()\n    for repeat in range(2):\n        if repeat == 1:\n            reuse_tips('etoh_tips')\n            p300m.pick_up_tip()\n        # prewet tips with ethanol\n        for rep in range(2):\n            p300m.aspirate(100, etoh.bottom(2))\n            p300m.dispense(100, etoh.bottom(2))\n        for column in mag_plate.columns()[:num_cols]:\n            rep_max_transfer(\n             180, etoh.bottom(2), column[0].top(), air=15, blow=2)\n        p300m.return_tip()\n        reuse_tips('sup_tips')\n        for column in mag_plate.columns()[:num_cols]:\n            p300m.pick_up_tip()\n            rep_max_transfer(\n             180, column[0].bottom(2), waste.top(), air=15, blow=2)\n            p300m.return_tip()\n\n    pause_attention(\"\"\"Indexing: Place index plate (slot 1) and\n    index rxn mx tube (A1 chilled block on slot 5) on OT-2 deck.\"\"\")\n\n    # aspirate last traces of etoh\n    reuse_tips('sup_tips')\n    for column in mag_plate.columns()[:num_cols]:\n        p300m.pick_up_tip()\n        rep_max_transfer(30, column[0].bottom(2), waste.top(), air=15, blow=2)\n        p300m.return_tip()\n    default_settings()\n    ctx.comment(\"Beads drying for 3 minutes.\")\n    ctx.delay(minutes=3)\n    mag.disengage()\n\n    # indexing post-pcr beads, one-tip pickup, rxn mix to bead pellets\n    p300m.pick_up_tip(tips300[0]['F9'])\n    for chunk in create_chunks(mag_samps, 3):\n        p300m.aspirate(105, index_rxn_mx.bottom(2))\n        for well in chunk:\n            p300m.dispense(35, well.top(-2))\n    p300m.drop_tip()\n\n    # indices to bead pellets, mix, transfer beads to 37 degree cycler plate\n    p20s.transfer(\n      15, [well.bottom(2) for well in indexes[:sample_count]],\n      [mag_samp.bottom(2) for mag_samp in mag_samps], new_tip='always')\n\n    p300m.transfer(\n      55, [mag_col[0].bottom(2) for mag_col in mag_plate.columns()[:num_cols]],\n      [indx_col[0].bottom(2) for indx_col in tc_plate.columns()[6:num_cols+6]],\n      mix_before=(5, 27), new_tip='always', trash=False)\n\n    # define thermocycler profile for indexing\n    profile5 = [{'temperature': 37, 'hold_time_minutes': 20}]\n    tc.close_lid()\n    tc.execute_profile(steps=profile5, repetitions=1)\n    tc.deactivate_block()\n\n    pause_attention(\"\"\"Second clean up: Place PEG NaCl (A1 of block in slot 5)\n    and TE (A5 of reservoir in slot 2) on OT-2 deck. Replenish ethanol\n    (A1 of reservoir in slot 2).\"\"\")\n\n    # post-indexing clean up, PEG NaCl to fresh mag plate wells, 1-tip pickup\n    p300m.pick_up_tip(tips300[0]['E9'])\n    p300m.well_bottom_clearance.aspirate = 8\n    p300m.aspirate(10, peg_nacl, rate=0.25)\n    ctx.delay(seconds=1)\n    for chunk in create_chunks(mag_samps_indx, 3):\n        p300m.aspirate(len(chunk)*42.5, peg_nacl, rate=0.25)\n        ctx.delay(seconds=5)\n        slow_tip_withdrawal(p300m, peg_nacl)\n        if p300m.well_bottom_clearance.aspirate >= 2:\n            p300m.well_bottom_clearance.aspirate -= 1\n        for well in chunk:\n            p300m.dispense(42.5, well.bottom(2), rate=0.25)\n            ctx.delay(seconds=2)\n            slow_tip_withdrawal(p300m, well)\n    p300m.drop_tip()\n    p300m.well_bottom_clearance.aspirate = 1\n\n    # indexed sample to mag plate, mix with PEG NaCl\n    tc.open_lid()\n    reuse_tips('index_rxn_tips')\n    p300m.transfer(50, [\n     indx_col[0].bottom(2) for indx_col in tc_plate.columns()[6:num_cols+6]],\n      [mag_col[0].bottom(2) for mag_col in mag_plate.columns()[4:num_cols+4]],\n      mix_after=(4, 45), new_tip='always', trash=False)\n\n    ctx.delay(minutes=5)\n    mag.engage()\n    ctx.delay(minutes=5)\n\n    # remove supernatant\n    reuse_tips('index_rxn_tips')\n    for column in mag_plate.columns()[4:num_cols+4]:\n        p300m.pick_up_tip()\n        p300m.aspirate(92, column[0].bottom(2), rate=0.25)\n        ctx.delay(seconds=2)\n        slow_tip_withdrawal(p300m, column[0])\n        p300m.dispense(92, waste.top(), rate=0.25)\n        ctx.delay(seconds=2)\n        p300m.blow_out()\n        p300m.return_tip()\n\n    # post_indexing wash 2x 180 ul 80% etoh\n    etoh_settings()\n    reuse_tips('etoh_tips')\n    p300m.pick_up_tip()\n    for repeat in range(2):\n        if repeat == 1:\n            reuse_tips('etoh_tips')\n            p300m.pick_up_tip()\n        # prewet tips with ethanol\n        for rep in range(2):\n            p300m.aspirate(100, etoh.bottom(2))\n            p300m.dispense(100, etoh.bottom(2))\n        for column in mag_plate.columns()[4:num_cols+4]:\n            rep_max_transfer(\n             180, etoh.bottom(2), column[0].top(), air=15, blow=2)\n        p300m.return_tip()\n        reuse_tips('index_rxn_tips')\n        for column in mag_plate.columns()[4:num_cols+4]:\n            p300m.pick_up_tip()\n            rep_max_transfer(\n             180, column[0].bottom(2), waste.top(), air=15, blow=2)\n            p300m.return_tip()\n\n    pause_attention(\"\"\"Place output plate on temperature module.\"\"\")\n\n    # aspirate last traces of etoh\n    reuse_tips('index_rxn_tips')\n    for column in mag_plate.columns()[4:num_cols+4]:\n        p300m.pick_up_tip()\n        rep_max_transfer(30, column[0].bottom(2), waste.top(), air=15, blow=2)\n        p300m.return_tip()\n    default_settings()\n    ctx.comment(\"Beads drying for 3 minutes.\")\n    ctx.delay(minutes=3)\n    mag.disengage()\n\n    # elute, mix, transfer eluate to output plate and hold at 4 degrees C\n    p20s.transfer(20, post_pcr_te, [\n     well.bottom() for well in mag_plate.wells()[32:sample_count+32]],\n     mix_after=(4, 10), new_tip='always')\n    ctx.delay(minutes=2)\n    mag.engage()\n    ctx.delay(minutes=5)\n    p20s.transfer(20, [well.bottom() for well in mag_plate.wells()[\n     32:sample_count+32]], [well.bottom() for well in output_plate.wells()[\n      :sample_count]], new_tip='always')\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 24,
            "label": "Sample Count",
            "name": "sample_count",
            "type": "int"
        },
        {
            "default": 20,
            "label": "Mastermix Volume",
            "name": "mm_volume",
            "type": "float"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 24 Well Aluminum Block with NEST 2 mL Snapcap on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_24_aluminumblock_nest_2ml_snapcap"
        },
        {
            "name": "Opentrons 96 Well Aluminum Block with NEST Well Plate 100 \u00b5L on Temperature Module GEN1 on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_aluminumblock_nest_wellplate_100ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 9",
            "share": false,
            "slot": "9",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Steve Plonk <protocols@opentrons.com>",
        "protocolName": "swiftbiosci.com accel-amplicon-plus-egfr-pathway-panel"
    },
    "modules": []
}