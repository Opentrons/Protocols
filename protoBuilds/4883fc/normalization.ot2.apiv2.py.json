{
    "content": "metadata = {\n    'protocolName': 'Normalization',\n    'author': 'Nick Diehl <ndiehl@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.10'\n    }\n\n\ndef run(ctx):\n    [input_csv, pipette_type, pipette_mount,\n     source_type] = get_values(  # noqa: F821\n        'input_csv', 'pipette_type', 'pipette_mount', 'source_type')\n\n    # labware\n    if source_type == 'opentrons_24_tuberack_nest_1.5ml_snapcap':\n        [ctx.load_labware(source_type, slot, f'tuberack {i+1}')\n         for i, slot in enumerate(['4', '5', '7', '8'])]\n    else:\n        ctx.load_labware(source_type, '5', 'source plate')\n    end_plate = ctx.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', '6', 'end plate')\n    diluent = ctx.load_labware('nest_12_reservoir_15ml', '9',\n                               'diluent (channel 1)').wells()[0]\n\n    # pipette\n    pip_range = pipette_type.split('_')[0][1:]\n    pip_range = '300' if pip_range == '50' else pip_range\n    tiprack_def = f'opentrons_96_tiprack_{pip_range}ul'\n\n    tipracks = [ctx.load_labware(tiprack_def, slot) for slot in ['2', '3']]\n    pip = ctx.load_instrument(pipette_type, pipette_mount, tip_racks=tipracks)\n\n    # parse data\n    data = [\n        [val.strip().upper() for val in line.split(',')]\n        for line in input_csv.splitlines()\n        if line and line.split(',')[0].strip()][1:]\n\n    # transfer diluent\n    pip.pick_up_tip()\n    for line in data:\n        dest_well = end_plate.wells_by_name()[line[3]]\n        dil_vol = float(line[7])\n        pip.transfer(dil_vol, diluent, dest_well, new_tip='never')\n    pip.drop_tip()\n\n    # transfer sample and mix\n    for line in data:\n        if source_type == 'nest_96_wellplate_100ul_pcr_full_skirt':\n            source_slot = 5\n        else:\n            source_slot = int(line[1])\n        source_well = ctx.loaded_labwares[source_slot].wells_by_name()[line[2]]\n        dest_well = end_plate.wells_by_name()[line[3]]\n        sample_vol = float(line[6])\n        dil_vol = float(line[7])\n        total_vol = sample_vol + dil_vol\n\n        pip.pick_up_tip()\n        if 0.8*total_vol < pip.max_volume:\n            mix_vol = 0.8*total_vol\n        else:\n            mix_vol = pip.max_volume\n        pip.transfer(sample_vol, source_well, dest_well,\n                     mix_after=(3, mix_vol), new_tip='never')\n        pip.blow_out(dest_well.top(-1))\n        pip.touch_tip()\n        pip.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": "Sample number,Source Slot,Source well,Destination well,Start Concentration (ug/uL) Source,Final Concentraion (ug/ml) Destination,Sample volume (uL),Diluent Volume(ul),Total Volume(ul) Destination\n1,4,A1,A1,5,2,40,60,100.0\n2,4,C1,B1,3,2,67,33,100.0\n3,4,D1,C1,10,2,20,80,100.0\n4,4,E3,D1,20,2,10,90,100.0\n",
            "label": "input .csv file",
            "name": "input_csv",
            "type": "textFile"
        },
        {
            "label": "pipette type",
            "name": "pipette_type",
            "options": [
                {
                    "label": "P50 Single GEN1",
                    "value": "p50_single"
                },
                {
                    "label": "P300 Single GEN2",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "P300 Single GEN1",
                    "value": "p300_single"
                },
                {
                    "label": "P20 Single GEN2",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "P10 Single GEN1",
                    "value": "p10_single"
                },
                {
                    "label": "P1000 Single GEN2",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "P1000 Single GEN1",
                    "value": "p1000_single"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "pipette mount",
            "name": "pipette_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "source labware type",
            "name": "source_type",
            "options": [
                {
                    "label": "NEST 96-Well, 100\u00b5L PCR",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "Opentrons 24 Tube Rack with NEST 1.5 mL Snapcap",
                    "value": "opentrons_24_tuberack_nest_1.5ml_snapcap"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p50_single"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 2",
            "share": false,
            "slot": "2",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "source plate on 5",
            "share": false,
            "slot": "5",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "end plate on 6",
            "share": false,
            "slot": "6",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "diluent (channel 1) on 9",
            "share": false,
            "slot": "9",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.10",
        "author": "Nick Diehl <ndiehl@opentrons.com>",
        "protocolName": "Normalization",
        "source": "Protocol Library"
    },
    "modules": []
}