{"instruments": [{"mount": "left", "name": "p1000_single_gen2"}, {"mount": "right", "name": "p1000_single_gen2"}], "labware": [{"slot": "1", "type": "snapcap 2ml tuberack", "name": "snapcap 2ml tuberack on 1", "share": false}, {"slot": "2", "type": "screwcap 2ml tuberack", "name": "screwcap 2ml tuberack on 2", "share": false}, {"slot": "3", "type": "12-channel reservoir", "name": "12-channel reservoir on 3", "share": false}, {"slot": "5", "type": "opentrons_96_tiprack_1000ul", "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 5", "share": false}, {"slot": "6", "type": "opentrons_96_tiprack_1000ul", "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 6", "share": false}, {"slot": "12", "type": "opentrons_1_trash_1100ml_fixed", "name": "Opentrons Fixed Trash on 12", "share": false}], "fields": [{"type": "dropDown", "label": "right pipette type", "name": "right_pipette", "options": [{"label": "GEN2 P1000 Single", "value": "p1000_single_gen2"}, {"label": "GEN2 P300 Single", "value": "p300_single_gen2"}, {"label": "GEN2 P20 Single", "value": "p20_single_gen2"}, {"label": "GEN1 P1000 Single", "value": "p1000_single"}, {"label": "GEN1 P300 Single", "value": "p300_single"}, {"label": "GEN1 P50 Single", "value": "p50_single"}, {"label": "GEN1 P10 Single", "value": "p10_single"}, {"label": "none", "value": null}]}, {"type": "dropDown", "label": "left pipette type", "name": "left_pipette", "options": [{"label": "GEN2 P1000 Single", "value": "p1000_single_gen2"}, {"label": "GEN2 P300 Single", "value": "p300_single_gen2"}, {"label": "GEN2 P20 Single", "value": "p20_single_gen2"}, {"label": "GEN1 P1000 Single", "value": "p1000_single"}, {"label": "GEN1 P300 Single", "value": "p300_single"}, {"label": "GEN1 P50 Single", "value": "p50_single"}, {"label": "GEN1 P10 Single", "value": "p10_single"}, {"label": "none", "value": null}]}, {"type": "textFile", "label": "master mix .csv file", "name": "master_mix_csv", "default": "Reagent,Slot,Well,Volume\nBuffer,1,A2,3\nMgCl,1,A3,40\ndNTPs,2,A2,90\nWater,2,A3,248\nprimer 1,1,A4,25\nprimer 2,1,A5,25\n"}], "modules": [], "metadata": {"protocolName": "PCR Prep", "author": "Opentrons <protocols@opentrons.com>", "source": "Protocol Library", "apiLevel": "2.0"}, "content": "metadata = {\n    'protocolName': 'PCR Prep',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.0'\n}\n\n\ndef run(protocol_context):\n    [left_pipette, right_pipette, master_mix_csv] = get_values(  # noqa: F821\n        \"left_pipette\", \"right_pipette\", \"master_mix_csv\")\n\n    if not left_pipette and not right_pipette:\n        raise Exception('You have to select at least 1 pipette.')\n\n    pipette_l = None\n    pipette_r = None\n\n    for pip, mount, slot in zip(\n            [left_pipette, right_pipette], ['left', 'right'], ['5', '6']):\n\n        if pip:\n            range = pip.split('_')[0][1:]\n            rack = 'opentrons_96_tiprack_' + range + 'ul'\n            tiprack = protocol_context.load_labware(rack, slot)\n            if mount == 'left':\n                pipette_l = protocol_context.load_instrument(\n                    pip, mount, tip_racks=[tiprack])\n            else:\n                pipette_r = protocol_context.load_instrument(\n                    pip, mount, tip_racks=[tiprack])\n\n    # labware setup\n    snaprack = protocol_context.load_labware(\n        'opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap',\n        '1',\n        'snapcap 2ml tuberack'\n    )\n    screwrack = protocol_context.load_labware(\n        'opentrons_24_tuberack_generic_2ml_screwcap',\n        '2',\n        'screwcap 2ml tuberack'\n    )\n    res12 = protocol_context.load_labware(\n        'usascientific_12_reservoir_22ml', '3', '12-channel reservoir')\n    reagents = {\n        '1': snaprack,\n        '2': screwrack,\n        '3': res12\n    }\n\n    # determine which pipette has the smaller volume range\n    if pipette_l and pipette_r:\n        if left_pipette == right_pipette:\n            pip_s = pipette_l\n            pip_l = pipette_r\n        else:\n            if pipette_l.max_volume < pipette_r.max_volume:\n                pip_s, pip_l = pipette_l, pipette_r\n            else:\n                pip_s, pip_l = pipette_r, pipette_l\n    else:\n        pipette = pipette_l if pipette_l else pipette_r\n\n    # destination\n    mastermix_dest = res12.wells()[0]\n\n    info_list = [\n        [cell.strip() for cell in line.split(',')]\n        for line in master_mix_csv.splitlines()[1:] if line\n    ]\n\n    for line in info_list[1:]:\n        source = reagents[line[1]].wells(line[2].upper())\n        vol = float(line[3])\n        if pipette_l and pipette_r:\n            if vol <= pip_s.max_volume:\n                pipette = pip_s\n            else:\n                pipette = pip_l\n        pipette.transfer(vol, source, mastermix_dest)\n", "custom_labware_defs": []}