{
    "content": "metadata = {\n    'apiLevel': '2.5',\n    'protocolName': 'TG Nextera XT index kit v2 Set A to D',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request'\n}\n\n\ndef run(ctx):\n    sample_count = get_values(  # noqa: F821\n            'sample_count')[0]\n\n    thermocycler = ctx.load_module('thermocycler')\n    thermocycler.open_lid()\n    thermocycler_plate = thermocycler.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt')\n\n    temp_deck = ctx.load_module(\n        'temperature module gen2',\n        '1')\n    temp_rack = temp_deck.load_labware(\n        'opentrons_24_aluminumblock_generic_2ml_screwcap')\n    temp_deck.set_temperature(4)\n    phusion_mm = temp_rack.wells_by_name()[\"A1\"]\n    kapa_mm = temp_rack.wells_by_name()[\"B1\"]\n    north_indexing_primers = [\n        temp_rack.wells_by_name()[x] for x in [\n            \"{}{}\".format(\n                b, a) for a in [\n                \"2\", \"3\"] for b in [\n                    \"A\", \"B\", \"C\", \"D\"]]]\n    south_indexing_primers = [\n        temp_rack.wells_by_name()[x] for x in [\n            \"{}{}\".format(\n                b, a) for a in [\n                \"4\", \"5\", \"6\"] for b in [\n                    \"A\", \"B\", \"C\", \"D\"]]]\n\n    mag_deck = ctx.load_module('magnetic module gen2', '4')\n    mag_deck.disengage()\n    mag_plate = mag_deck.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt')\n\n    DNA_plate = ctx.load_labware(\n        'nest_96_wellplate_100ul_pcr_full_skirt', '2')\n\n    reservoir = ctx.load_labware('nest_12_reservoir_15ml', '5')\n    beads = reservoir.wells_by_name()[\"A1\"]\n    h2o = reservoir.wells_by_name()[\"A2\"]\n\n    etoh_list = [reservoir.wells_by_name()[x]\n                 for x in [\"A3\", \"A4\", \"A5\", \"A6\"]]\n    liquid_trash_list = [reservoir.wells_by_name()[x]\n                         for x in [\"A7\", \"A8\", \"A9\", \"A10\", \"A11\"]]\n\n    p20s = ctx.load_instrument(\n        \"p20_single_gen2\", \"right\", tip_racks=[\n            ctx.load_labware(\n                \"opentrons_96_filtertiprack_20ul\", \"3\")])\n    p300s = ctx.load_instrument(\n        \"p300_single_gen2\",\n        \"left\",\n        tip_racks=[\n            ctx.load_labware(\n                \"opentrons_96_filtertiprack_200ul\",\n                x) for x in [\n                \"6\",\n                \"9\"]])\n\n    dna_wells = DNA_plate.wells()[:sample_count]\n    mag_wells = mag_plate.wells()[:sample_count]\n    thermo_wells = thermocycler_plate.wells()[:sample_count]\n\n    # Ethanol and Liquid trash simulation\n    class ReservoirMaterial():\n        def __init__(self, lanes):\n            self.lanes = lanes\n        liquid_taken = 0\n        depth_per_lane = 14800\n        current_lane = 0\n\n        def get_lane(self, liquid_quantity):\n            if liquid_quantity + self.liquid_taken > self.depth_per_lane:\n                self.current_lane += 1\n                self.liquid_taken = 0\n            self.liquid_taken += liquid_quantity\n            return self.lanes[self.current_lane]\n\n    etoh = ReservoirMaterial(etoh_list)\n    liquid_trash = ReservoirMaterial(liquid_trash_list)\n\n    # Tip simulation function\n    class TipCounter():\n        def __init__(self, pipette, tip_kind):\n            self.pipette = pipette\n            self.tip_kind = tip_kind\n        i = 0\n\n        def get_tip(self, quantity=sample_count):\n            if self.i + quantity > 96:\n                ctx.pause(\"Replace {} tip boxes\".format(self.tip_kind))\n                self.pipette.reset_tipracks()\n            else:\n                self.i += quantity\n\n    c20 = TipCounter(p20s, \"20ul\")\n    c300 = TipCounter(p300s, \"200ul\")\n\n    # Genomic DNA amplification\n\n    c300.get_tip()\n    p300s.transfer(\n        21,\n        phusion_mm,\n        thermocycler_plate.wells()[\n            :sample_count],\n        new_tip='once')\n    c20.get_tip()\n    p20s.transfer(2, dna_wells, thermo_wells, new_tip='always')\n    ctx.pause(\"Switch DNA plate out with Primer plate\")\n    c20.get_tip()\n    p20s.transfer(2, dna_wells, thermo_wells, new_tip='always')\n\n    def stp(temp, hold):\n        return {\"temperature\": temp, \"hold_time_seconds\": hold}\n    steps = []\n    steps.append(stp(98, 300))\n    steps += [item for sublist in [[stp(98, 10), stp(69 - x, 10), stp(72, 30)]\n                                   for x in range(0, 10)] for item in sublist]\n    steps += [item for sublist in [[stp(98, 10), stp(72, 30)]\n                                   for _ in range(0, 25)] for item in sublist]\n    steps.append(stp(72, 420))\n    steps.append(stp(10, 10))\n\n    thermocycler.close_lid()\n    thermocycler.set_lid_temperature(99)\n    thermocycler.execute_profile(\n        steps=steps,\n        repetitions=1, block_max_volume=25)\n    thermocycler.open_lid()\n\n    ctx.pause(\"\"\"Move thermocycler plate to magdeck.\n    Replace DNA plate with indexing plate I.\n    Replace thermocycler plate with reaction plate C\"\"\")\n\n    # PCR amplicons beads clean\n    def wash():\n        c300.get_tip()\n        p300s.transfer(\n            45, beads, mag_wells, mix_before=(\n                5, 100), mix_after=(\n                15, 50), new_tip='always')\n        ctx.delay(300)\n        mag_deck.engage()\n        ctx.delay(600)\n\n        # Wash start\n        c300.get_tip()\n        p300s.transfer(\n            200,\n            mag_wells,\n            liquid_trash.get_lane(200),\n            new_tip='always')\n        for _ in range(0, 2):\n            # Protocol from customer did not include a sample resuspension\n            # or a step for removing EtOH. I am doing what I assume it meant.\n            for mag_well in mag_wells:\n                p300s.pick_up_tip()\n                c300.get_tip(quantity=1)\n                p300s.transfer(\n                    150,\n                    etoh.get_lane(150),\n                    mag_well,\n                    new_tip='never')\n                p300s.transfer(\n                    150,\n                    mag_well,\n                    liquid_trash.get_lane(150),\n                    new_tip='never')\n                p300s.drop_tip()\n        c20.get_tip()\n        p20s.transfer(\n            10,\n            mag_wells,\n            liquid_trash.get_lane(10),\n            new_tip='always')\n\n        ctx.delay(360)\n        mag_deck.disengage()\n\n        c300.get_tip()\n        p300s.transfer(\n            40, h2o, mag_wells, mix_after=(\n                20, 30), new_tip='always')\n        ctx.delay(120)\n        mag_deck.engage()\n        ctx.delay(180)\n        c300.get_tip()\n        p300s.transfer(36, mag_wells, dna_wells)\n    wash()\n\n    # Library indexing PCR KAPA\n    c20.get_tip()\n    p20s.transfer(17.5, kapa_mm, thermo_wells)\n    c20.get_tip()\n    p20s.transfer(2.5, dna_wells, thermo_wells)\n\n    # transfer north index\n    for col in thermocycler_plate.columns():\n        for i, well in enumerate(col):\n            if well in thermo_wells:\n                c20.get_tip(1)\n                p20s.transfer(\n                    2.5,\n                    north_indexing_primers[i],\n                    well,\n                    new_tip='always')\n    # transfer south index\n    for row in thermocycler_plate.rows():\n        for i, well in enumerate(row):\n            if well in thermo_wells:\n                c20.get_tip(1)\n                p20s.transfer(\n                    2.5,\n                    south_indexing_primers[i],\n                    well,\n                    new_tip='always')\n\n    steps = []\n    steps.append(stp(95, 30))\n    steps += [item for sublist in [[stp(95, 10), stp(55, 30), stp(72, 30)]\n                                   for _ in range(0, 12)] for item in sublist]\n    steps.append(stp(72, 300))\n    steps.append(stp(4, 10))\n\n    thermocycler.close_lid()\n    thermocycler.set_lid_temperature(99)\n    thermocycler.execute_profile(\n        steps=steps,\n        repetitions=1, block_max_volume=25)\n\n    thermocycler.open_lid()\n    ctx.pause(\n        \"\"\"Move thermocycler plate to magdeck.\n        Replace indexing I plate with output plate.\"\"\")\n\n    # Index library beads clean\n    wash()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 96,
            "label": "Number of Samples (1-96)",
            "name": "sample_count",
            "type": "int"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        },
        {
            "mount": "right",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 24 Well Aluminum Block with Generic 2 mL Screwcap on Temperature Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_24_aluminumblock_generic_2ml_screwcap"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on 2",
            "share": false,
            "slot": "2",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 3",
            "share": false,
            "slot": "3",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 4",
            "share": false,
            "slot": "4",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 5",
            "share": false,
            "slot": "5",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.5",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "TG Nextera XT index kit v2 Set A to D",
        "source": "Custom Protocol Request"
    },
    "modules": [
        {
            "name": "ThermocyclerContext at Thermocycler Module on 7 lw NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Thermocycler Module on 7",
            "share": false,
            "slot": "7",
            "type": "thermocycler"
        },
        {
            "name": "TemperatureModuleContext at Temperature Module GEN2 on 1 lw Opentrons 24 Well Aluminum Block with Generic 2 mL Screwcap on Temperature Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "tempdeck"
        },
        {
            "name": "MagneticModuleContext at Magnetic Module GEN2 on 4 lw NEST 96 Well Plate 100 \u00b5L PCR Full Skirt on Magnetic Module GEN2 on 4",
            "share": false,
            "slot": "4",
            "type": "magdeck"
        }
    ]
}