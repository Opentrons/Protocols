{
    "content": "from opentrons import protocol_api\nfrom opentrons.protocol_api.labware import Well, Labware\nfrom math import ceil\nfrom typing import Sequence, Tuple\nimport re\n\n\nmetadata = {\n    'protocolName': '022548-2 - Sample transfer and bead mastermix addition',\n    'author': 'Eskil Andersen <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'   # CHECK IF YOUR API LEVEL HERE IS UP TO DATE\n                         # IN SECTION 5.2 OF THE APIV2 \"VERSIONING\"\n}\n\n\ndef parse_range_string(range_string: str) -> Tuple[int, int]:\n    \"\"\" Parses a range or a single number from the input string.\n    the format for a number is n-m, where n and m are any positive\n    integers.\n    :param range_string: range string to decode\n    :return value: A tuple of the start and end index of the range\n    \"\"\"\n    single_num_pattern = re.compile('[0-9]+')\n    range_pattern = re.compile('[0-9]+-[0-9]+')\n    # Case when there's only one index (e.g. the string decodes to a single\n    # well\n    if single_num_pattern.fullmatch(range_string) is not None:\n        index = int(range_string)\n        return index, index\n    if range_pattern.fullmatch(range_string):\n        # Return both substrings that match numbers (i.e. the start and\n        # end indices\n        start, end = range_string.split('-')\n        return int(start), int(end)\n    # If neither regular expression matched then we assume that the string\n    # is incorrectly formatted\n    raise Exception((\"Invalid range string: it was \\\"{}\\\" but should be a \"\n                     \"natural number or a range in the format of \"\n                     \"n-m where n and m are natural numbers, \"\n                     \"e.g: 1-4\").format(range_string))\n\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{\n                                  \"n_samples_rack_1\":32,\n                                  \"n_samples_rack_2\":32,\n                                  \"n_samples_rack_3\":32,\n                                  \"master_mix_range\":\"1-5\",\n                                  \"mastermix_max_vol\":9.54,\n                                  \"mastermix_mix_rate_multiplier\":0.3,\n                                  \"mm_aspiration_flowrate_multiplier\":0.1,\n                                  \"mm_dispense_flowrate_multiplier\":0.1,\n                                  \"p300_mount\":\"left\",\n                                  \"m300_mount\":\"right\",\n                                  \"do_mm_resusp_pause\":true\n                                  }\n                                  \"\"\")\n    return [_all_values[n] for n in names]\n\n\ndef run(ctx: protocol_api.ProtocolContext):\n\n    [\n     n_samples_rack_1,\n     n_samples_rack_2,\n     n_samples_rack_3,\n     master_mix_range,\n     mastermix_max_vol,\n     mastermix_mix_rate_multiplier,\n     mm_aspiration_flowrate_multiplier,\n     mm_dispense_flowrate_multiplier,\n     p300_mount,\n     m300_mount,\n     do_mm_resusp_pause] = get_values(  # noqa: F821\n     \"n_samples_rack_1\",\n     \"n_samples_rack_2\",\n     \"n_samples_rack_3\",\n     \"master_mix_range\",\n     \"mastermix_max_vol\",\n     \"mastermix_mix_rate_multiplier\",\n     \"mm_aspiration_flowrate_multiplier\",\n     \"mm_dispense_flowrate_multiplier\",\n     \"p300_mount\",\n     \"m300_mount\",\n     \"do_mm_resusp_pause\")\n\n    is_debug_mode = False\n\n    n_total_samples = 0\n    for i, n in enumerate([n_samples_rack_1,\n                           n_samples_rack_2,\n                           n_samples_rack_3]):\n        if n < 0 or n > 32:\n            raise Exception(\n                \"Invalid number of samples (n={}) on tuberack #{}\".format(\n                    n, i+1)\n                )\n        n_total_samples += n\n\n    # Check that there are enough mastermix wells\n\n    # Todo: If tuberack: Error check that all tubes are 15 mL types\n\n    # Define labware and slots\n    sample_tuberack_loader = \\\n        (\"nest_32_tuberack_8x15ml_8x15ml_8x15ml_8x15ml\", ['2', '4', '7'])\n    target_plate_loader = \\\n        (\"thermofisherkingfisherdeepwell_96_wellplate_2000ul\", '1')\n    mastermix_labware_loader = ('nest_12_reservoir_15ml', '10')\n    sample_200ul_filtertiprack_loader = \\\n        ('opentrons_96_filtertiprack_200ul', '6')\n    mastermix_300uL_tiprack_loader = ('opentrons_96_tiprack_300ul', '11')\n\n    mm_well_vol_ul = mastermix_max_vol * 1_000\n    # TODO: Remove dead volumes from the protocols - the dead-volume is\n    # already defined by the 1.5 multiplier (1/3rd of the total vol)\n    dead_vol = 1/3 * mm_well_vol_ul\n\n    mm_start_index, mm_end_index = parse_range_string(master_mix_range)\n    n_mm_wells = mm_end_index - mm_start_index + 1\n    mm_vol_per_sample = 275\n    total_mm_vol = mm_vol_per_sample * n_total_samples\n\n    # No more than 5 wells should be required for the mastermix\n    # maximum number of samples: 31*3=93, mm volume per sample = 275\n    # excess volume factor: 1.5\n    # 93*275*1.5=38,362.5 uL, max volume per mm well is 9540 uL\n    # n_wells = 38262.5/9540 = 4.02 wells\n    n_required_mm_wells = ceil(total_mm_vol/(mm_well_vol_ul-dead_vol))\n    if is_debug_mode:\n        msg = \"\\n\\nNumber of required wells: {}\\n\"\n        msg = msg.format(n_required_mm_wells)\n        ctx.comment(msg)\n    if n_required_mm_wells > n_mm_wells:\n        msg = (\"This protocol run requires {} wells of mastermix, but \"\n               \"there are only {} wells available, please ensure that there \"\n               \"is enough mastermix\")\n        msg = msg.format(n_required_mm_wells, n_mm_wells)\n        raise Exception(msg)\n\n    # define all custom variables above here with descriptions:\n\n    # load modules\n\n    '''\n\n    Add your modules here with:\n\n    module_name = ctx.load_module('{module_loadname}', '{slot number}')\n\n    Note: if you are loading a thermocycler, you do not need to specify\n    a slot number - thermocyclers will always occupy slots 7, 8, 10, and 11.\n\n    For all other modules, you can load them on slots 1, 3, 4, 6, 7, 9, 10.\n\n    '''\n\n    # load labware\n\n    '''\n\n    Add your labware here with:\n\n    labware_name = ctx.load_labware('{loadname}', '{slot number}')\n\n    If loading labware on a module, you can load with:\n\n    labware_name = module_name.load_labware('{loadname}')\n    where module_name is defined above.\n\n    '''\n    sample_rack_1 = ctx.load_labware(\n        sample_tuberack_loader[0], sample_tuberack_loader[1][0])\n    sample_rack_2 = ctx.load_labware(\n        sample_tuberack_loader[0], sample_tuberack_loader[1][1])\n    sample_rack_3 = ctx.load_labware(\n        sample_tuberack_loader[0], sample_tuberack_loader[1][2])\n    target_plate = ctx.load_labware(\n        target_plate_loader[0], target_plate_loader[1])\n    mm_source = ctx.load_labware(\n        mastermix_labware_loader[0], mastermix_labware_loader[1])\n    # load tipracks\n\n    '''\n\n    Add your tipracks here as a list:\n\n    For a single tip rack:\n\n    tiprack_name = [ctx.load_labware('{loadname}', '{slot number}')]\n\n    For multiple tip racks of the same type:\n\n    tiprack_name = [ctx.load_labware('{loadname}', 'slot')\n                     for slot in ['1', '2', '3']]\n\n    If two different tipracks are on the deck, use convention:\n    tiprack[number of microliters]\n    e.g. tiprack10, tiprack20, tiprack200, tiprack300, tiprack1000\n\n    '''\n    tiprack_200 = ctx.load_labware(sample_200ul_filtertiprack_loader[0],\n                                   sample_200ul_filtertiprack_loader[1])\n    tiprack_300 = ctx.load_labware(mastermix_300uL_tiprack_loader[0],\n                                   mastermix_300uL_tiprack_loader[1])\n\n    # load instrument\n\n    '''\n    Nomenclature for pipette:\n\n    use 'p'  for single-channel, 'm' for multi-channel,\n    followed by number of microliters.\n\n    p20, p300, p1000 (single channel pipettes)\n    m20, m300 (multi-channel pipettes)\n\n    If loading pipette, load with:\n\n    ctx.load_instrument(\n                        '{pipette api load name}',\n                        pipette_mount (\"left\", or \"right\"),\n                        tip_racks=tiprack\n                        )\n    '''\n    p300 = ctx.load_instrument(\n                              'p300_single_gen2',\n                              p300_mount,\n                              tip_racks=[tiprack_200]\n                              )\n    m300 = ctx.load_instrument(\n                              'p300_multi_gen2',\n                              m300_mount,\n                              tip_racks=[tiprack_300]\n                              )\n\n    # pipette functions   # INCLUDE ANY BINDING TO CLASS\n\n    '''\n\n    Define all pipette functions, and class extensions here.\n    These may include but are not limited to:\n\n    - Custom pickup functions\n    - Custom drop tip functions\n    - Custom Tip tracking functions\n    - Custom Trash tracking functions\n    - Slow tip withdrawal\n\n    For any functions in your protocol, describe the function as well as\n    describe the parameters which are to be passed in as a docstring below\n    the function (see below).\n\n    def pick_up(pipette):\n        \"\"\"`pick_up()` will pause the protocol when all tip boxes are out of\n        tips, prompting the user to replace all tip racks. Once tipracks are\n        reset, the protocol will start picking up tips from the first tip\n        box as defined in the slot order when assigning the labware definition\n        for that tip box. `pick_up()` will track tips for both pipettes if\n        applicable.\n\n        :param pipette: The pipette desired to pick up tip\n        as definited earlier in the protocol (e.g. p300, m20).\n        \"\"\"\n        try:\n            pipette.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            ctx.pause(\"Replace empty tip racks\")\n            pipette.reset_tipracks()\n            pipette.pick_up_tip()\n\n    '''\n    def pick_up(pipette):\n        \"\"\"`pick_up()` will pause the protocol when all tip boxes are out of\n        tips, prompting the user to replace all tip racks. Once tipracks are\n        reset, the protocol will start picking up tips from the first tip\n        box as defined in the slot order when assigning the labware definition\n        for that tip box. `pick_up()` will track tips for both pipettes if\n        applicable.\n\n        :param pipette: The pipette desired to pick up tip\n        as definited earlier in the protocol (e.g. p300, m20).\n        \"\"\"\n        try:\n            pipette.pick_up_tip()\n        except protocol_api.labware.OutOfTipsError:\n            ctx.pause(\"Replace empty tip racks\")\n            pipette.reset_tipracks()\n            pipette.pick_up_tip()\n\n    # helper functions\n    '''\n    Define any custom helper functions outside of the pipette scope here, using\n    the convention seen above.\n\n    e.g.\n\n    def remove_supernatant(vol, index):\n        \"\"\"\n        function description\n\n        :param vol:\n\n        :param index:\n        \"\"\"\n\n\n    '''\n    class VolTracker:\n        def __init__(self, labware: Labware,\n                     well_vol: float = 0,\n                     start: int = 1,\n                     end: int = 8,\n                     mode: str = 'reagent',\n                     pip_type: str = 'single',\n                     msg: str = 'Refill labware volumes',\n                     reagent_name: str = 'nameless reagent',\n                     is_verbose: bool = True,\n                     is_strict_mode: bool = False,\n                     threshhold_advancement_vol: float = 1,\n                     dead_volume: float = 0):\n            \"\"\"\n            Voltracker tracks the volume(s) used in a piece of labware.\n            It's conceptually important to understand that in reagent\n            mode the volumes tracked are how much volume has been removed from\n            the VolTracker, but waste and target is how much has been added\n            to it, and how much was there/have been taken out to begin with.\n            This will have implications for how the class is initialized.\n\n            :param labware: The labware to track\n            :param well_vol: The volume of the liquid in the wells, if using a\n            multi-pipette with a well plate, treat the plate like a reservoir,\n            i.e. start=1, end=1, well_vol = 8 * vol of each individual well.\n            :param pip_type: The pipette type used: 'single' or 'multi',\n            when the type is 'multi' volumes are multiplied by 8 to reflect\n            the true volumes used by the pipette.\n            :param mode: 'reagent', 'target' or 'waste'\n            :param start: The starting well\n            :param end: The ending well\n            :param msg: Message to send to the user when all wells are empty\n            (or full when in waste mode)\n            :param reagent_name: Name of the reagent tracked by the object\n            :param is_verbose: Whether to have VolTracker send ProtocolContext\n            messages about its actions or not.\n            :param is_strict_mode: If set to True VolTracker will pause\n            execution when its tracked wells are depleted (or filled), ask the\n            user to replace the labware and reset the volumes. If it's False\n            VolTracker will raise an exception if trying to use more volume\n            than the VolTracker is set up for. strict_mode also forces the\n            user to check if there's enough volume in the active well and\n            to manually advance to the next well by calling advance_well()\n            :param threshhold_advancement_vol: If using strict mode VolTr.\n            will throw an exception if the user advances the well while there\n            is more than the threshhold_advancement_vol of volume left in\n            the well.\n            \"\"\"\n            # Boolean value: True if the well has been filled\n            # or has been depleted\n            self.labware_wells = {}\n            for well in labware.wells()[start-1:end]:\n                self.labware_wells[well] = [0, False]\n            self.labware_wells_backup = self.labware_wells.copy()\n            self.well_vol = well_vol\n            self.pip_type = pip_type\n            self.mode = mode\n            self.start = start\n            self.end = end\n            self.msg = msg\n            self.is_verbose = is_verbose\n            # Total vol changed - how much volume has been withdrawn or added\n            # to this Voltracker\n            self.total_vol_changed = 0\n            # If true, then labware should raise an exception when full\n            # rather than reset\n            self.is_strict_mode = is_strict_mode\n            self.reagent_name = reagent_name\n            self.dead_volume = dead_volume\n\n            valid_modes = ['reagent', 'waste', 'target']\n\n            # Parameter error checking\n            if not (pip_type == 'single' or pip_type == 'multi'):\n                raise Exception('Pipette type must be single or multi')\n\n            if mode not in valid_modes:\n                msg = \"Invalid mode, valid modes are {}\"\n                msg = msg.format(valid_modes)\n                raise Exception(msg)\n\n            if mode != 'reagent' and dead_volume > 0:\n                raise Exception((\"Setting a dead/min volume only makes sense \"\n                                 \"for reagents\"))\n\n        def __str__(self):\n            msg = (self.reagent_name + \" \" + self.mode\n                   + \" volume change: \" + str(self.total_vol_changed),\n                   + \" well vol: \" + str(self.well_vol) + \" dead vol: \"\n                   + str(self.dead_volume))\n            msg += \"\\nChanges in each well:\\n\"\n            for i, well_tracker in enumerate(self.labware_wells.values()):\n                msg += \"well {}: Volume change: {}\\n\".format(\n                    i+1, well_tracker[0])\n            return msg\n\n        @staticmethod\n        def flash_lights():\n            \"\"\"\n            Flash the lights of the robot to grab the users attention\n            \"\"\"\n            nonlocal ctx\n            initial_light_state = ctx.rail_lights_on\n            opposite_state = not initial_light_state\n            for _ in range(5):\n                ctx.set_rail_lights(opposite_state)\n                ctx.delay(seconds=0.5)\n                ctx.set_rail_lights(initial_light_state)\n                ctx.delay(seconds=0.5)\n\n        def get_wells(self) -> Sequence:\n            return list(self.labware_wells.keys())\n\n        def to_list(self):\n            return list(self.labware_wells.items())\n\n        def get_total_initial_vol(self):\n            \"\"\"\n            Return the total initial volume of the\n            tracker = n_wells * well_vol\n            \"\"\"\n            return len(self.labware_wells) * self.well_vol\n\n        def get_total_dead_volume(self):\n            \"\"\"\n            Returns the total dead volume of the tracker\n            \"\"\"\n            return len(self.labware_wells) * self.dead_volume\n\n        def get_total_remaining_vol(self):\n            \"\"\"\n            Returns the total volume remaining in the tracker\n            including the dead volume\n            \"\"\"\n            return (self.get_total_initial_vol()\n                    - self.total_vol_changed)\n\n        def get_active_well_vol_change(self):\n            \"\"\"\n            Return the volume either used up (reagents) or added\n            (target or trash) in the currently active well\n            \"\"\"\n            well = self.get_active_well()\n            return self.labware_wells[well][0]\n\n        def get_active_well_remaining_vol(self):\n            \"\"\"\n            Returns how much volume is remaing to be used (reagents) or the\n            space left to fill the well (waste and targets)\n            \"\"\"\n            vol_change = self.get_active_well_vol_change()\n            return self.well_vol - vol_change - self.dead_volume\n\n        def get_active_well(self):\n            for key in self.labware_wells:\n                # Return the first well that is not full\n                if self.labware_wells[key][1] is False:\n                    return key\n\n        def advance_well(self):\n            curr_well = self.get_active_well()\n            # Mark the current well as 'used up'\n            self.labware_wells[curr_well][1] = True\n            wells = self.to_list()\n            all_depleted = True\n            for tracked_well in wells:\n                status = tracked_well[1][1]\n                if status is False:\n                    all_depleted = False\n                    break\n            if all_depleted:\n                raise Exception(\"All tracker wells have been depleted\")\n\n        def reset_labware(self):\n            VolTracker.flash_lights()\n            ctx.pause(self.msg)\n            self.labware_wells = self.labware_wells_backup.copy()\n\n        def get_active_well_vol(self):\n            well = self.get_active_well()\n            return self.labware_wells[well][0]\n\n        def get_current_vol_by_key(self, well_key):\n            return self.labware_wells[well_key][0]\n\n        def track(self, vol: float, **kwargs) -> Well:\n            \"\"\"track() will track how much liquid\n            was used up per well. If the volume of\n            a given well is greater than self.well_vol\n            it will remove it from the dictionary and iterate\n            to the next well which will act as the active source well.\n            :param vol: How much volume to track (per tip), i.e. if it's one\n            tip track vol, but if it's multi-pipette, track 8 * vol.\n\n            This implies that VolTracker will treat a column like a well,\n            whether it's a plate or a reservoir.\n            \"\"\"\n            well = self.get_active_well()\n            # Treat plates like reservoirs and add 8 well volumes together\n            # Total vol changed keeps track across labware resets, i.e.\n            # when the user replaces filled/emptied wells\n            if 'custom_num_tips' in kwargs.keys():\n                vol = vol * kwargs['custom_num_tips']\n            else:\n                vol = vol * 8 if self.pip_type == 'multi' else vol\n\n            # Track the total change in volume of this volume tracker\n            self.total_vol_changed += vol\n\n            if (self.labware_wells[well][0] + vol\n                    > self.well_vol - self.dead_volume):\n                if self.is_strict_mode:\n                    msg = (\"Tracking a volume of {} uL would {} the \"\n                           \"current well: {} on the {} {} tracker. \"\n                           \"The max well volume is {}, and \"\n                           \"the current vol is {}. The dead volume is {}\")\n                    mode_msg = (\"over-deplete`\" if self.mode == \"reagent\"\n                                else \"over-fill\")\n                    msg = msg.format(\n                        vol, mode_msg, well, self.reagent_name, self.mode,\n                        self.well_vol, self.get_active_well_vol(),\n                        self.dead_volume)\n                    raise Exception(msg)\n                self.labware_wells[well][1] = True\n                is_all_used = True\n\n                # Check if wells are completely full (or depleted)\n                for w in self.labware_wells:\n                    if self.labware_wells[w][1] is False:\n                        is_all_used = False\n\n                if is_all_used is True:\n                    if self.is_strict_mode is False:\n                        self.reset_labware()\n                    else:\n                        e_msg = (\"{}: {} {} wells would be {} by this action \"\n                                 \"this VolTracker is in strict mode, check why\"\n                                 \"manual reset was not performed\")\n\n                        fill_status = \\\n                            (\"over-depleted\" if self.mode == \"reagent\" else\n                             \"over-filled\")\n                        e_msg = e_msg.format(str(self),\n                                             self.reagent,\n                                             self.mode, fill_status)\n                        raise Exception(e_msg)\n\n                well = self.get_active_well()\n                if self.is_verbose:\n                    ctx.comment(\n                        \"\\n{} {} tracker switching to well {}\\n\".format(\n                            self.reagent_name, self.mode, well))\n            self.labware_wells[well][0] += vol\n\n            if self.is_verbose:\n                if self.mode == 'waste':\n                    ctx.comment('{}: {} ul of total waste'\n                                .format(well,\n                                        int(self.labware_wells[well][0])))\n                elif self.mode == 'target':\n                    ctx.comment('{}: {} ul of reagent added to target well'\n                                .format(well,\n                                        int(self.labware_wells[well][0])))\n                else:\n                    ctx.comment('{} uL of liquid used from {}'\n                                .format(int(self.labware_wells[well][0]),\n                                        well))\n            return well\n\n    # reagents\n\n    '''\n    Define where all reagents are on the deck using the labware defined above.\n\n    e.g.\n\n    water = reservoir12.wells()[-1]\n    waste = reservoir.wells()[0]\n    samples = plate.rows()[0][0]\n    dnase = tuberack.wells_by_name()['A4']\n\n    '''\n    mm_tracker = VolTracker(\n        labware=mm_source,\n        well_vol=mm_well_vol_ul,\n        start=mm_start_index,\n        end=mm_end_index,\n        pip_type='multi',\n        reagent_name='Bead/binding buffer mastermix',\n        dead_volume=dead_vol,\n        is_verbose=is_debug_mode,\n        is_strict_mode=True\n        )\n    # plate, tube rack maps\n\n    '''\n    Define any plate or tube maps here.\n\n    e.g.\n\n    plate_wells_by_row = [well for row in plate.rows() for well in row]\n\n    '''\n\n    total_samples = n_samples_rack_1 + n_samples_rack_2 + n_samples_rack_3\n    sample_wells = []\n    for num_s, rack in zip(\n        [n_samples_rack_1, n_samples_rack_2, n_samples_rack_3],\n            [sample_rack_1, sample_rack_2, sample_rack_3]):\n        for well in rack.wells()[0:num_s]:\n            sample_wells.append(well)\n\n    dest_rows = target_plate.rows()\n\n    i = 0\n    dest_wells = []\n    for row in dest_rows:\n        for well in row:\n            dest_wells.append(well)\n            i += 1\n            if i == total_samples:\n                break\n\n    # protocol\n\n    '''\n\n    Include header sections as follows for each \"section\" of your protocol.\n\n    Section can be defined as a step in a bench protocol.\n\n    e.g.\n\n    ctx.comment('\\n\\nMOVING MASTERMIX TO SAMPLES IN COLUMNS 1-6\\n')\n\n    for .... in ...:\n        ...\n        ...\n\n    ctx.comment('\\n\\nRUNNING THERMOCYCLER PROFILE\\n')\n\n    ...\n    ...\n    ...\n\n\n    '''\n    # Step 1 to 4 - Distribute samples from tubes to target plate\n    \"\"\"\n    Step 1: Aspirate 200 uL of sample mixture from sample tube [Different\n    Tips; 5 - 10 uL air gap if possible; Touch tip to side of tube]\n    Step 2: Dispense sample into the one corresponding deep-well on 96\n    deep-well plate in the order A1, A2... A12, B1, B2... B12, etc.\n    [Different Tips; with blow out; Touch tip to side of deep-well]\n    Step 3: Discard tip in waste\n    Step 4: Repeat for all specified samples in rack for each specified rack\n    \"\"\"\n    ctx.comment(\"\\n\\nDistributing samples from tubes to target plate wells\\n\")\n    for s, d in zip(sample_wells, dest_wells):\n        if not p300.has_tip:\n            pick_up(p300)\n        p300.aspirate(200, s)\n        p300.touch_tip()\n        p300.dispense(200, d)\n        p300.blow_out()\n        p300.touch_tip()\n        p300.drop_tip()\n\n    # Mastermix steps (5-11) are performed in protocol 1 - mastermix creation\n    # Step 11 to 14 - Distribute binding buffer/bead mastermix\n    # 13: Use 300 uL non-filtered tips to mix bead mastermix\n    # Mix seven times\n    # blowout after mix, touch tips (if tube source)\n\n    # Check if we're using the tuberack or reservoir\n    \"\"\"\n    Step 12: All used tips from the prior steps are discarded\n    Step 13: The 8-channel pipettor acquires 8x300 uL non-filtered pipette\n    tips and then slowly (make speed variable) pipette-mixes the bead master\n    mixture 7 times in each well of the 12-well reservoir [same tips; blowout\n    used after the last mix in each well; tip touch on side of each well in\n    reservoir]\n    Step 14: Discard Tips\n    \"\"\"\n    n_tips = 8\n    m300.pick_up_tip(tiprack_300.wells()[0])\n\n    ctx.comment(\"\\n\\nMixing the mastermix\\n\")\n    mm_wells = mm_tracker.get_wells()\n    # TODO: Have to set a height offset for mixing tubes\n    max_mix_vol = min(m300.max_volume*n_tips, mm_tracker.well_vol)\n    per_tip_mix_vol = max_mix_vol/n_tips\n    for i, well in enumerate(mm_wells):\n        m300.mix(7, per_tip_mix_vol, well,\n                 mastermix_mix_rate_multiplier)\n        m300.blow_out(well)\n        m300.touch_tip()\n    m300.drop_tip()\n\n    \"\"\"\n    Step 15: 8-channel pipette acquires [variable 1-8]x300uL non-filtered\n    pipette tips and slowly aspirates 275 uL of master bead mixture from\n    12-well reservoir [different tips; variable aspiration speed; tip touch\n    on side of well]. For 4-8 samples in a column have the P300 remove\n    8-n tips (0-4) and use the M300. For 1-3 samples transfer the mastermix\n    with the P300. Make sure to adjust the pickup current for volume\n    correction.\n    Step 16: 8-Channel pippettor then dispenses 275 uL of master bead mix\n    into the first column (column 1 starting with A1, B1, etc...) of the 96\n    deep-well plate [different tips; variable dispensing speed; with blowout;\n    tip touch on side of wells]\n    Step 17: The tips are discarded [different tips]\n    Step 18: Steps 15 - 17 are repeated for all designated wells on 96\n    deep-well plate\n    \"\"\"\n\n    ctx.comment(\"\\n\\nDistributing mastermix to samples on the target plate\\n\")\n    # Calculate the number of sample wells in each column\n    used_sample_wells_per_column = []\n    n_wells_per_row = 12  # in a 96 well plate 8x12\n    n_full_rows = total_samples // n_wells_per_row\n    last_row_wells = total_samples % n_wells_per_row\n    for i in range(n_wells_per_row):\n        wells = n_full_rows + 1 if i < last_row_wells else n_full_rows\n        used_sample_wells_per_column.append(wells)\n\n    # Multi-channel pipette mastermix distribution\n    # 1st step: Remove tips from wells that do not correspond to sample\n    # wells using the p300\n    if p300.has_tip:\n        p300.drop_tip()\n\n    # Check if there's enough tips to refill the first col with as many\n    # tips as neccesary, otherwise ask user to replace tiprack so that\n    # there will be enough tips for all of the samples\n    do_refill_first_column = True\n    if total_samples > 96-used_sample_wells_per_column[0]:\n        ctx.pause(\n            \"\\nPlease replace the 300 uL tiprack on deck slot 11\\n\")\n        do_refill_first_column = False\n\n    # Use the single channel pip to remove tips from the 300 uL\n    # tiprack from rows not matching any sample wells\n    # then when m300 is used to aspirate it doesn't waste mastermix\n    # on unused sample wells\n\n    ctx.comment(\"\\nRemoving unused tips from tiprack 300\\n\")\n    tiprack_300_columns = tiprack_300.columns()\n    offset = 1 if do_refill_first_column else 0\n    first_tiprack_col = tiprack_300_columns[0]\n    n_tips_first_col_left = used_sample_wells_per_column[0]\n    for n_used_wells, col in zip(\n            used_sample_wells_per_column, tiprack_300_columns[offset:]):\n        wells = col[n_used_wells:]\n        for well in wells:\n            p300.pick_up_tip(well)\n            if do_refill_first_column and n_tips_first_col_left >= 0:\n                p300.drop_tip(first_tiprack_col[n_tips_first_col_left])\n                n_tips_first_col_left -= 1\n            else:\n                p300.drop_tip()\n\n    # Transfer mastermix to samples\n    air_gap_vol = 10\n    m300.reset_tipracks()\n    mm_tracker = mm_tracker\n    ctx.comment(\"\\n\\nDistributing mastermix to samples on target plate\\n\")\n    for well, n_used_wells in zip(\n            target_plate.rows()[0], used_sample_wells_per_column):\n        m300.pick_up_tip()\n        aspiration_vol = n_used_wells * mm_vol_per_sample\n        remaining_well_vol = mm_tracker.get_active_well_remaining_vol()\n        if remaining_well_vol < aspiration_vol:\n            per_tip_vol = remaining_well_vol/n_used_wells\n            m300.aspirate(per_tip_vol,\n                          mm_tracker.track(per_tip_vol,\n                                           custom_num_tips=n_used_wells),\n                          mm_aspiration_flowrate_multiplier)\n            try:\n                mm_tracker.advance_well()\n            except Exception:\n                ctx.comment(\"\\n\\nMastermix wells depleted\\n\")\n            remaining_tip_vol = mm_vol_per_sample - per_tip_vol\n            m300.aspirate(remaining_tip_vol,\n                          mm_tracker.track(remaining_tip_vol,\n                                           custom_num_tips=n_used_wells),\n                          mm_aspiration_flowrate_multiplier)\n\n        else:\n            m300.aspirate(\n                mm_vol_per_sample, mm_tracker.track(\n                    mm_vol_per_sample, custom_num_tips=n_used_wells),\n                mm_aspiration_flowrate_multiplier)\n        m300.air_gap(air_gap_vol)\n        m300.dispense(\n            mm_vol_per_sample+air_gap_vol, well,\n            mm_dispense_flowrate_multiplier)\n        m300.blow_out()\n        m300.touch_tip()\n        m300.drop_tip()\n\n    ctx.comment(\"\\n\\n - Protocol finished! - \\n\")\n\n    if is_debug_mode:\n        msg = \"\\nExpected mastermix transfer volume: {}\\n\"\n        msg = msg.format(total_mm_vol)\n        ctx.comment(msg)\n        msg = \"\\nActually transferred volume of mastermix: {}\\n\"\n        msg = msg.format(mm_tracker.total_vol_changed)\n        ctx.comment(msg)\n",
    "custom_labware_defs": [
        {
            "brand": {
                "brand": "Opentrons",
                "brandId": [],
                "links": []
            },
            "cornerOffsetFromSlot": {
                "x": 0,
                "y": 0,
                "z": 0
            },
            "dimensions": {
                "xDimension": 260,
                "yDimension": 85.5,
                "zDimension": 121.3
            },
            "groups": [
                {
                    "brand": {
                        "brand": "NEST",
                        "brandId": [],
                        "links": []
                    },
                    "metadata": {
                        "displayCategory": "tubeRack",
                        "displayName": "NEST 15 mL Conical",
                        "wellBottomShape": "v"
                    },
                    "wells": [
                        "A1",
                        "C1",
                        "A3",
                        "C3",
                        "A5",
                        "C5",
                        "A7",
                        "C7"
                    ]
                },
                {
                    "brand": {
                        "brand": "NEST",
                        "brandId": [],
                        "links": []
                    },
                    "metadata": {
                        "displayCategory": "tubeRack",
                        "displayName": "NEST 15 mL Conical",
                        "wellBottomShape": "v"
                    },
                    "wells": [
                        "A2",
                        "C2",
                        "A4",
                        "C4",
                        "A6",
                        "C6",
                        "A8",
                        "C8"
                    ]
                },
                {
                    "brand": {
                        "brand": "NEST",
                        "brandId": [],
                        "links": []
                    },
                    "metadata": {
                        "displayCategory": "tubeRack",
                        "displayName": "NEST 15 mL Conical",
                        "wellBottomShape": "v"
                    },
                    "wells": [
                        "B1",
                        "D1",
                        "B3",
                        "D3",
                        "B5",
                        "D5",
                        "B7",
                        "D7"
                    ]
                },
                {
                    "brand": {
                        "brand": "NEST",
                        "brandId": [],
                        "links": []
                    },
                    "metadata": {
                        "displayCategory": "tubeRack",
                        "displayName": "NEST 15 mL Conical",
                        "wellBottomShape": "v"
                    },
                    "wells": [
                        "B2",
                        "D2",
                        "B4",
                        "D4",
                        "B6",
                        "D6",
                        "B8",
                        "D8"
                    ]
                }
            ],
            "metadata": {
                "displayCategory": "tubeRack",
                "displayName": "NEST 32 Tuberack 15ml (2 Slot)",
                "displayVolumeUnits": "mL",
                "tags": []
            },
            "namespace": "custom_beta",
            "ordering": [
                [
                    "A1",
                    "B1",
                    "C1",
                    "D1"
                ],
                [
                    "A2",
                    "B2",
                    "C2",
                    "D2"
                ],
                [
                    "A3",
                    "B3",
                    "C3",
                    "D3"
                ],
                [
                    "A4",
                    "B4",
                    "C4",
                    "D4"
                ],
                [
                    "A5",
                    "B5",
                    "C5",
                    "D5"
                ],
                [
                    "A6",
                    "B6",
                    "C6",
                    "D6"
                ],
                [
                    "A7",
                    "B7",
                    "C7",
                    "D7"
                ],
                [
                    "A8",
                    "B8",
                    "C8",
                    "D8"
                ]
            ],
            "parameters": {
                "format": "irregular",
                "isMagneticModuleCompatible": false,
                "isTiprack": false,
                "loadName": "nest_32_tuberack_8x15ml_8x15ml_8x15ml_8x15ml"
            },
            "schemaVersion": 2,
            "version": 1,
            "wells": {
                "A1": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 24.87,
                    "y": 72.76,
                    "z": 3.55
                },
                "A2": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 60.87,
                    "y": 72.76,
                    "z": 3.55
                },
                "A3": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 87.37,
                    "y": 72.76,
                    "z": 3.55
                },
                "A4": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 123.37,
                    "y": 72.76,
                    "z": 3.55
                },
                "A5": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 149.87,
                    "y": 72.76,
                    "z": 3.55
                },
                "A6": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 185.87,
                    "y": 72.76,
                    "z": 3.55
                },
                "A7": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 212.37,
                    "y": 72.76,
                    "z": 3.55
                },
                "A8": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 248.37,
                    "y": 72.76,
                    "z": 3.55
                },
                "B1": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 11.62,
                    "y": 52.75,
                    "z": 3.55
                },
                "B2": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 47.62,
                    "y": 52.75,
                    "z": 3.55
                },
                "B3": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 74.12,
                    "y": 52.75,
                    "z": 3.55
                },
                "B4": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 110.12,
                    "y": 52.75,
                    "z": 3.55
                },
                "B5": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 136.62,
                    "y": 52.75,
                    "z": 3.55
                },
                "B6": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 172.62,
                    "y": 52.75,
                    "z": 3.55
                },
                "B7": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 199.12,
                    "y": 52.75,
                    "z": 3.55
                },
                "B8": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 235.12,
                    "y": 52.75,
                    "z": 3.55
                },
                "C1": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 24.87,
                    "y": 32.74,
                    "z": 3.55
                },
                "C2": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 60.87,
                    "y": 32.74,
                    "z": 3.55
                },
                "C3": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 87.37,
                    "y": 32.74,
                    "z": 3.55
                },
                "C4": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 123.37,
                    "y": 32.74,
                    "z": 3.55
                },
                "C5": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 149.87,
                    "y": 32.74,
                    "z": 3.55
                },
                "C6": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 185.87,
                    "y": 32.74,
                    "z": 3.55
                },
                "C7": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 212.37,
                    "y": 32.74,
                    "z": 3.55
                },
                "C8": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 248.37,
                    "y": 32.74,
                    "z": 3.55
                },
                "D1": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 11.62,
                    "y": 12.73,
                    "z": 3.55
                },
                "D2": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 47.62,
                    "y": 12.73,
                    "z": 3.55
                },
                "D3": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 74.12,
                    "y": 12.73,
                    "z": 3.55
                },
                "D4": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 110.12,
                    "y": 12.73,
                    "z": 3.55
                },
                "D5": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 136.62,
                    "y": 12.73,
                    "z": 3.55
                },
                "D6": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 172.62,
                    "y": 12.73,
                    "z": 3.55
                },
                "D7": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 199.12,
                    "y": 12.73,
                    "z": 3.55
                },
                "D8": {
                    "depth": 117.75,
                    "diameter": 15,
                    "shape": "circular",
                    "totalLiquidVolume": 15000,
                    "x": 235.12,
                    "y": 12.73,
                    "z": 3.55
                }
            }
        },
        {
            "brand": {
                "brand": "Thermo-Fisher Kingfisher deep well",
                "brandId": [
                    "A48305"
                ]
            },
            "cornerOffsetFromSlot": {
                "x": 0,
                "y": 0,
                "z": 0
            },
            "dimensions": {
                "xDimension": 127.8,
                "yDimension": 85.5,
                "zDimension": 44
            },
            "groups": [
                {
                    "metadata": {
                        "wellBottomShape": "v"
                    },
                    "wells": [
                        "A1",
                        "B1",
                        "C1",
                        "D1",
                        "E1",
                        "F1",
                        "G1",
                        "H1",
                        "A2",
                        "B2",
                        "C2",
                        "D2",
                        "E2",
                        "F2",
                        "G2",
                        "H2",
                        "A3",
                        "B3",
                        "C3",
                        "D3",
                        "E3",
                        "F3",
                        "G3",
                        "H3",
                        "A4",
                        "B4",
                        "C4",
                        "D4",
                        "E4",
                        "F4",
                        "G4",
                        "H4",
                        "A5",
                        "B5",
                        "C5",
                        "D5",
                        "E5",
                        "F5",
                        "G5",
                        "H5",
                        "A6",
                        "B6",
                        "C6",
                        "D6",
                        "E6",
                        "F6",
                        "G6",
                        "H6",
                        "A7",
                        "B7",
                        "C7",
                        "D7",
                        "E7",
                        "F7",
                        "G7",
                        "H7",
                        "A8",
                        "B8",
                        "C8",
                        "D8",
                        "E8",
                        "F8",
                        "G8",
                        "H8",
                        "A9",
                        "B9",
                        "C9",
                        "D9",
                        "E9",
                        "F9",
                        "G9",
                        "H9",
                        "A10",
                        "B10",
                        "C10",
                        "D10",
                        "E10",
                        "F10",
                        "G10",
                        "H10",
                        "A11",
                        "B11",
                        "C11",
                        "D11",
                        "E11",
                        "F11",
                        "G11",
                        "H11",
                        "A12",
                        "B12",
                        "C12",
                        "D12",
                        "E12",
                        "F12",
                        "G12",
                        "H12"
                    ]
                }
            ],
            "metadata": {
                "displayCategory": "wellPlate",
                "displayName": "Thermo-Fisher Kingfisher Deep Well 96 Well Plate 2000 \u00b5L",
                "displayVolumeUnits": "\u00b5L",
                "tags": []
            },
            "namespace": "custom_beta",
            "ordering": [
                [
                    "A1",
                    "B1",
                    "C1",
                    "D1",
                    "E1",
                    "F1",
                    "G1",
                    "H1"
                ],
                [
                    "A2",
                    "B2",
                    "C2",
                    "D2",
                    "E2",
                    "F2",
                    "G2",
                    "H2"
                ],
                [
                    "A3",
                    "B3",
                    "C3",
                    "D3",
                    "E3",
                    "F3",
                    "G3",
                    "H3"
                ],
                [
                    "A4",
                    "B4",
                    "C4",
                    "D4",
                    "E4",
                    "F4",
                    "G4",
                    "H4"
                ],
                [
                    "A5",
                    "B5",
                    "C5",
                    "D5",
                    "E5",
                    "F5",
                    "G5",
                    "H5"
                ],
                [
                    "A6",
                    "B6",
                    "C6",
                    "D6",
                    "E6",
                    "F6",
                    "G6",
                    "H6"
                ],
                [
                    "A7",
                    "B7",
                    "C7",
                    "D7",
                    "E7",
                    "F7",
                    "G7",
                    "H7"
                ],
                [
                    "A8",
                    "B8",
                    "C8",
                    "D8",
                    "E8",
                    "F8",
                    "G8",
                    "H8"
                ],
                [
                    "A9",
                    "B9",
                    "C9",
                    "D9",
                    "E9",
                    "F9",
                    "G9",
                    "H9"
                ],
                [
                    "A10",
                    "B10",
                    "C10",
                    "D10",
                    "E10",
                    "F10",
                    "G10",
                    "H10"
                ],
                [
                    "A11",
                    "B11",
                    "C11",
                    "D11",
                    "E11",
                    "F11",
                    "G11",
                    "H11"
                ],
                [
                    "A12",
                    "B12",
                    "C12",
                    "D12",
                    "E12",
                    "F12",
                    "G12",
                    "H12"
                ]
            ],
            "parameters": {
                "format": "irregular",
                "isMagneticModuleCompatible": false,
                "isTiprack": false,
                "loadName": "thermofisherkingfisherdeepwell_96_wellplate_2000ul",
                "quirks": []
            },
            "schemaVersion": 2,
            "version": 1,
            "wells": {
                "A1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "A9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 74.2,
                    "z": 1.7
                },
                "B1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "B9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 65.2,
                    "z": 1.7
                },
                "C1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "C9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 56.2,
                    "z": 1.7
                },
                "D1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "D9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 47.2,
                    "z": 1.7
                },
                "E1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "E9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 38.2,
                    "z": 1.7
                },
                "F1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "F9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 29.2,
                    "z": 1.7
                },
                "G1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "G9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 20.2,
                    "z": 1.7
                },
                "H1": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 14.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H10": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 95.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H11": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 104.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H12": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 113.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H2": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 23.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H3": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 32.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H4": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 41.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H5": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 50.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H6": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 59.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H7": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 68.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H8": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 77.4,
                    "y": 11.2,
                    "z": 1.7
                },
                "H9": {
                    "depth": 42.3,
                    "diameter": 8.3,
                    "shape": "circular",
                    "totalLiquidVolume": 2000,
                    "x": 86.4,
                    "y": 11.2,
                    "z": 1.7
                }
            }
        }
    ],
    "fields": [
        {
            "default": 32,
            "label": "Number of samples in tuberack 1 slot(2-3)",
            "name": "n_samples_rack_1",
            "type": "int"
        },
        {
            "default": 32,
            "label": "Number of samples in tuberack 2 (slot 4-5)",
            "name": "n_samples_rack_2",
            "type": "int"
        },
        {
            "default": 32,
            "label": "Number of samples in tuberack 3 (7-8)",
            "name": "n_samples_rack_3",
            "type": "int"
        },
        {
            "default": "1-3",
            "label": "Master mix wells/tubes",
            "name": "master_mix_range",
            "type": "str"
        },
        {
            "default": 9.45,
            "label": "Mastermix max volume per well (mL)",
            "name": "mastermix_max_vol",
            "type": "float"
        },
        {
            "default": 0.3,
            "label": "Mastermix mixing rate multiplier",
            "name": "mastermix_mix_rate_multiplier",
            "type": "float"
        },
        {
            "default": 0.1,
            "label": "mastermix aspiration flow rate multiplier",
            "name": "mm_aspiration_flowrate_multiplier",
            "type": "float"
        },
        {
            "default": 0.1,
            "label": "mastermix dispension flow rate multiplier",
            "name": "mm_dispense_flowrate_multiplier",
            "type": "float"
        },
        {
            "label": "Mount for 300 uL single channel pipette",
            "name": "p300_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Mount for 300 uL multi channel pipette",
            "name": "m300_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Pause after mixing the mastermix for vortex/resuspension?",
            "name": "do_mm_resusp_pause",
            "options": [
                {
                    "label": "Yes",
                    "value": true
                },
                {
                    "label": "No",
                    "value": false
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "Thermo-Fisher Kingfisher Deep Well 96 Well Plate 2000 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "thermofisherkingfisherdeepwell_96_wellplate_2000ul"
        },
        {
            "name": "NEST 32 Tuberack 15ml (2 Slot) on 2",
            "share": false,
            "slot": "2",
            "type": "nest_32_tuberack_8x15ml_8x15ml_8x15ml_8x15ml"
        },
        {
            "name": "NEST 32 Tuberack 15ml (2 Slot) on 4",
            "share": false,
            "slot": "4",
            "type": "nest_32_tuberack_8x15ml_8x15ml_8x15ml_8x15ml"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "NEST 32 Tuberack 15ml (2 Slot) on 7",
            "share": false,
            "slot": "7",
            "type": "nest_32_tuberack_8x15ml_8x15ml_8x15ml_8x15ml"
        },
        {
            "name": "NEST 12 Well Reservoir 15 mL on 10",
            "share": false,
            "slot": "10",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Eskil Andersen <protocols@opentrons.com>",
        "protocolName": "022548-2 - Sample transfer and bead mastermix addition",
        "source": "Custom Protocol Request"
    },
    "modules": []
}