{
    "content": "from opentrons.types import Point\nmetadata = {\n    'protocolName': 'Pierce NiNTA Magnetic Beads: part-2',\n    'author': 'Boren Lin <boren.lin@opentrons.com>',\n    'apiLevel': '2.11'\n}\n\n########################\n\nNUM_SAMPLES = 96\nELUTE_TIMES = 2\n\ntotal_cols = int(NUM_SAMPLES//8)\nr1 = int(NUM_SAMPLES % 8)\nif r1 != 0:\n    total_cols = total_cols + 1\n\nASP_COUNT = NUM_SAMPLES//5\nLEFTOVER = NUM_SAMPLES % 5\n\n#########################\n\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{ \"asp_height\": 0.5,\n                                  \"length_from_side\": 2.5,\n                                  \"p300_mount\":\"left\"}\"\"\")\n    return [_all_values[n] for n in names]\n\n\ndef run(ctx):\n\n    [asp_height,\n        length_from_side, p300_mount] = get_values(  # noqa: F821\n        \"asp_height\",\n            \"length_from_side\", \"p300_mount\")\n\n    # load labware\n\n    # eql_res= ctx.load_labware(\n    # 'nest_12_reservoir_15ml', '4', 'equilibration stock')\n    wash_res = ctx.load_labware('nest_12_reservoir_15ml', '4', 'wash buffer')\n    eln_res = ctx.load_labware('nest_12_reservoir_15ml', '2', 'elution buffer')\n\n    # bead_tube = ctx.load_labware(\n    # 'opentrons_15_tuberack_nest_15ml_conical', '5', 'beads')\n\n    mag_mod = ctx.load_module('magnetic module gen2', '1')\n    mag_rack = mag_mod.load_labware('nest_96_wellplate_2ml_deep')\n\n    # sample_plate = ctx.load_labware('nest_96_wellplate_2ml_deep', '7')\n    elution_plate = ctx.load_labware(\n     'nest_96_wellplate_2ml_deep', '3', 'eluates')\n\n    # tiprack = [ctx.load_labware('opentrons_96_tiprack_300ul', slot)\n    # for slot in ['9', '10']]\n    tiprack = ctx.load_labware('opentrons_96_tiprack_300ul', '6')\n    tiprack_wash = ctx.load_labware('opentrons_96_tiprack_300ul', '7')\n    tiprack_eln = ctx.load_labware('opentrons_96_tiprack_300ul', '5')\n    waste_res = ctx.load_labware('nest_1_reservoir_195ml', '8', 'waste')\n\n    # load pipette\n    pip300 = ctx.load_instrument('p300_multi_gen2',\n                                 p300_mount,\n                                 tip_racks=[tiprack])\n\n    # liquids\n    # eql = eql_res.wells()[:total_cols]\n    wash = wash_res.wells()[:total_cols]\n    eln = eln_res.wells()[:total_cols]\n\n    # beads = bead_res.wells()[0]\n    # beads = bead_tube.wells()[0][0]\n\n    waste = waste_res.wells()[0]\n    # samples = sample_plate.rows()[0][:total_cols]\n    working_cols = mag_rack.rows()[0][:total_cols]\n    final_cols = elution_plate.rows()[0][:total_cols]\n\n    def add_wash(vol2):\n        pip300.pick_up_tip()\n        if vol2 > 250:\n            vol2 = vol2/2\n            for wash_wells, working_wells in zip(wash, working_cols):\n                for _ in range(2):\n                    pip300.aspirate(vol2, wash_wells)\n                    pip300.dispense(vol2, working_wells.bottom(7.5))\n            pip300.drop_tip()\n        else:\n            for wash_wells, working_wells in zip(wash, working_cols):\n                pip300.aspirate(vol2, wash_wells)\n                pip300.dispense(vol2, working_wells.bottom(7.5))\n                # x = x + 8\n            pip300.drop_tip()\n\n    def remove_supernatant(vol3):\n        ctx.comment('\\n\\n\\n~~~~~~~~REMOVING SUPERNATANT~~~~~~~~\\n')\n        pip300.pick_up_tip()\n        pip300.flow_rate.aspirate = 45\n\n        if vol3 > 250:\n            vol3 = vol3/2\n            for i, col in enumerate(working_cols):\n                side = -1 if i % 2 == 0 else 1\n                aspirate_loc = col.bottom(z=asp_height).move(\n                            Point(x=(col.length/2-length_from_side)*side))\n                for _ in range(2):\n                    pip300.transfer(vol3,\n                                    aspirate_loc,\n                                    waste.bottom(z=25),\n                                    new_tip='never',\n                                    blow_out=True,\n                                    blowout_location='destination well')\n        else:\n            for i, col in enumerate(working_cols):\n                side = -1 if i % 2 == 0 else 1\n                aspirate_loc = col.bottom(z=asp_height).move(\n                            Point(x=(col.length/2-length_from_side)*side))\n                pip300.transfer(vol3,\n                                aspirate_loc,\n                                waste.bottom(z=25),\n                                new_tip='never',\n                                blow_out=True,\n                                blowout_location='destination well')\n\n        pip300.flow_rate.aspirate = 92\n        pip300.drop_tip()\n\n    # protocol\n    mag_mod.disengage()\n    ctx.pause('load sample plate')\n\n    ctx.comment('\\n\\n\\n~~~~~~~~REMOVING ACCESS~~~~~~~~\\n')\n    mag_mod.engage(height_from_base=4.2)\n    ctx.delay(minutes=3)\n    remove_supernatant(500)\n    mag_mod.disengage()\n\n    ctx.comment('\\n\\n\\n~~~~~~~~TWO WASHES~~~~~~~~\\n')\n    for i in range(2):\n        ctx.comment('\\n\\n\\n~~~~~~~~ADDING WASH~~~~~~~~\\n')\n        add_wash(500)\n        x = 0\n        for wells in working_cols:\n            pip300.pick_up_tip(tiprack_wash.well(x))\n            pip300.mix(10, 200, wells.bottom(z=2), rate=3)\n            pip300.return_tip()\n            x = x + 8\n        mag_mod.engage(height_from_base=4.2)\n        ctx.delay(minutes=2)\n        remove_supernatant(500)\n        # if i == 1: remove_residue(20)\n        mag_mod.disengage()\n\n    ctx.comment('\\n\\n\\n~~~~~~~~ELUTION~~~~~~~~\\n')\n    vol6 = 250\n    for _ in range(ELUTE_TIMES):\n        ctx.comment('\\n\\n\\n~~~~~~~~ADDING ELUTION BUFFER~~~~~~~~\\n')\n        x = 0\n        for eln_wells, working_wells in zip(eln, working_cols):\n            pip300.pick_up_tip(tiprack_eln.well(x))\n            pip300.aspirate(vol6, eln_wells)\n            pip300.dispense(vol6, working_wells.bottom(z=15))\n            pip300.mix(10, vol6, working_wells.bottom(z=2))\n            pip300.return_tip()\n            x = x + 8\n        ctx.pause('10 min gentle shaking, room temp')\n\n        ctx.comment('\\n\\n\\n~~~~~~~~TRANSFERRING ELUTE TO CLEAN TUBE~~~~~~~~\\n')\n        mag_mod.engage(height_from_base=4.2)\n        ctx.delay(minutes=2)\n        y = 0\n        for i, col in enumerate(working_cols):\n            side = -1 if i % 2 == 0 else 1\n            aspirate_loc = col.bottom(z=asp_height).move(\n                        Point(x=(col.length/2-length_from_side)*side))\n            pip300.pick_up_tip(tiprack_eln.well(y))\n            pip300.aspirate(vol6, aspirate_loc)\n            pip300.dispense(vol6, final_cols[i].bottom(z=10))\n            pip300.blow_out()\n            pip300.return_tip()\n            y = y + 8\n\n        mag_mod.disengage()\n",
    "custom_labware_defs": [],
    "fields": [],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "NEST 96 Deepwell Plate 2mL on Magnetic Module GEN2 on 1",
            "share": false,
            "slot": "1",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "elution buffer on 2",
            "share": false,
            "slot": "2",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "eluates on 3",
            "share": false,
            "slot": "3",
            "type": "nest_96_wellplate_2ml_deep"
        },
        {
            "name": "wash buffer on 4",
            "share": false,
            "slot": "4",
            "type": "nest_12_reservoir_15ml"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 6",
            "share": false,
            "slot": "6",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "waste on 8",
            "share": false,
            "slot": "8",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Boren Lin <boren.lin@opentrons.com>",
        "protocolName": "Pierce NiNTA Magnetic Beads: part-2"
    },
    "modules": []
}