{
    "content": "from opentrons.types import Point\n\nmetadata = {\n    'protocolName': 'OT-2 Guided Walk-through',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.7'\n}\n\n\ndef run(ctx):\n\n    [well_plate, pipette, tips, pipette_mount] = get_values(  # noqa: F821\n        \"well_plate\", \"pipette\", \"tips\", \"pipette_mount\")\n\n    # load labware\n    plate = ctx.load_labware(well_plate, '1')\n    tiprack = ctx.load_labware(tips, '2')\n\n    # load instrument\n    pip = ctx.load_instrument(pipette, pipette_mount, tip_racks=[tiprack])\n\n    # protocol\n    test_well = plate.wells()[0]\n\n    pip.pick_up_tip()\n\n    ctx.pause('''Welcome to the OT-2 Test Drive Protocol-\n                    This is the `Pause` function.\n                    Pauses can be put at any point during a protocol\n                    to replace plates, reagents, spin down plates,\n                    or for any other instance where human intervention\n                    is needed. Protocols continue after a `Pause` when\n                    the `Resume` button is selected. Select `Resume`\n                    to see more OT-2 features.''')\n\n    ctx.pause('''Pipettes can move almost anywhere within the OT-2-\n                   Select `Resume` to see the pipette aspirate liquid\n                   from the side of the well, and dispense at the top of the\n                   well.''')\n\n    if well_plate == 'corning_384_wellplate_112ul_flat':\n        dimension = int(test_well.length)/2\n\n    elif well_plate == 'nest_96_wellplate_2ml_deep':\n        dimension = int(test_well.length)/2\n\n    elif well_plate == 'usascientific_96_wellplate_2.4ml_deep':\n        dimension = int(test_well.length)/2\n\n    else:\n        dimension = int(test_well.diameter)/2\n\n    well_vol = test_well.geometry.max_volume\n    vol = well_vol/1.5 if well_vol < pip.max_volume else pip.max_volume/1.5\n\n    pip.move_to(plate['A1'].top())\n    pip.aspirate(vol, test_well.bottom().move(\n             Point(x=(dimension-1.1))))\n    pip.dispense(vol, test_well.top())\n    pip.aspirate(vol, test_well.bottom().move(\n             Point(x=((dimension-1.1)*-1))))\n    pip.dispense(vol, test_well.top())\n\n    ctx.pause('''Now we will mix 3 times at the default flow rate.''')\n    pip.mix(3, vol, test_well)\n\n    ctx.pause('''Now, let's change the flow rate of the pipette to 1/2.''')\n    pip.flow_rate.aspirate = 0.5*pip.flow_rate.aspirate\n    pip.flow_rate.dispense = 0.5*pip.flow_rate.dispense\n    for _ in range(2):\n        pip.aspirate(vol, test_well)\n        pip.dispense(vol, test_well.top())\n\n    ctx.pause('''Doubling the flow rate of the pipette.''')\n    pip.flow_rate.aspirate = 4*pip.flow_rate.aspirate\n    pip.flow_rate.dispense = 4*pip.flow_rate.dispense\n    for _ in range(2):\n        pip.aspirate(vol, test_well)\n        pip.dispense(vol, test_well.top())\n\n    ctx.pause('''The touch tip functon can be called after aspirating\n                   or dispensing. Touch tip is to move the pipette\u2019s currently\n                   attached tip to four opposite edges of a well, to knock off\n                   any droplets that might be hanging from the tip.\n                   Select `Resume` to see touch tip.''')\n\n    for _ in range(2):\n        pip.aspirate(vol, test_well)\n        pip.touch_tip()\n        pip.dispense(vol, test_well.top())\n\n    ctx.pause('''The blow out function can be called after dispensing liquid.\n                   To blow out is to push an extra amount of air through the\n                   pipette\u2019s tip, to make sure that any remaining droplets are\n                   expelled. Select `Resume` to see blow out.''')\n\n    for _ in range(2):\n        pip.aspirate(vol, test_well)\n        pip.dispense(vol, test_well.top())\n        pip.blow_out()\n\n    ctx.pause('''Now lets change the blow out flow rate, and blow out in the\n                   trash on Slot 12. ''')\n\n    pip.flow_rate.blow_out = 0.5*pip.flow_rate.blow_out\n    pip.transfer(vol, plate.wells()[0], plate.wells()[16], blow_out=True,\n                 lowout_location='trash', new_tip='never')\n    pip.flow_rate.blow_out = 2*pip.flow_rate.blow_out\n\n    ctx.pause('''Now let's drop a tip in the trash and pick up a new tip.''')\n    pip.drop_tip()\n    pip.pick_up_tip()\n    pip.move_to(plate['A1'].top())\n\n    ctx.pause('''The airgap function can be called after aspirating -\n                 When dealing with certain liquids, you may need to aspirate\n                 air after aspirating the liquid to prevent it from sliding out\n                of the pipette\u2019s tip. We will use the delay function to\n                pause for 5 seconds after air-gapping. Delays are similar to\n                pauses except for there is no `Resume` button that has to be\n                selected by the user. Delays are especially useful for\n                incubation periods, or after aspirating viscous liquid\n                to achieve full volume.''')\n    airgap = pip.max_volume/3\n    for _ in range(3):\n        pip.aspirate(vol/3, test_well)\n        pip.air_gap(airgap)\n        ctx.delay(seconds=5)\n        pip.dispense(vol/2+airgap, test_well.top())\n\n    ctx.pause('We can even airgap within the same tip')\n\n    airgap = pip.max_volume/8\n    for _ in range(2):\n        pip.aspirate(vol/8, plate.wells()[0])\n        pip.air_gap(airgap)\n    ctx.delay(seconds=5)\n    pip.blow_out()\n    ctx.pause('''Now let's return the tip for later on in the protocol,''')\n    pip.return_tip()\n    pip.pick_up_tip()\n\n    ctx.pause('''Now we can consolidate and distribute.\n                 Volumes going to the same destination well are combined\n                 within the same tip, so that multiple aspirates can be\n                 combined to a single dispense (consolidation).\n                 For the distribute function, volumes from the same source well\n                 are combined within the same tip, so that one aspirate can\n                 provide for multiple dispenses. Click `Resume` to see\n                 a consolidate function call followed by a distribute''')\n\n    pip.consolidate(vol/8,\n                    plate.wells()[0:8], plate.wells()[8], new_tip='never')\n\n    pip.drop_tip()\n    ctx.pause('''Before we distribute, let's use our parked tip from before''')\n    pip.pick_up_tip(tiprack.wells()[1])\n    pip.distribute(vol/8,\n                   plate.wells()[8], plate.wells()[0:8], new_tip='never')\n    pip.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "Well Plate",
            "name": "well_plate",
            "options": [
                {
                    "label": "Bio-RAD 96 Well Plate 200ul PCR",
                    "value": "biorad_96_wellplate_200ul_pcr"
                },
                {
                    "label": "Corning 12 Well Plate 360ul Flat",
                    "value": "corning_96_wellplate_360ul_flat"
                },
                {
                    "label": "NEST 96 Well Plate 100ul PCR Full Skirt",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "NEST 96 Well Plate 200ul Flat",
                    "value": "nest_96_wellplate_200ul_flat"
                },
                {
                    "label": "NEST 96 Well Plate 2mL Deep",
                    "value": "nest_96_wellplate_2ml_deep"
                },
                {
                    "label": "USA Scientific 96 Well Plate 2.4 mL Deep",
                    "value": "usascientific_96_wellplate_2.4ml_deep"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Pipette",
            "name": "pipette",
            "options": [
                {
                    "label": "P20 Single GEN2",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "P300 Single GEN2",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "P1000 Single GEN2",
                    "value": "p1000_single_gen2"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Pipette Tips",
            "name": "tips",
            "options": [
                {
                    "label": "GEB 1000ul",
                    "value": "geb_96_tiprack_1000ul"
                },
                {
                    "label": "GEB 10ul",
                    "value": "geb_96_tiprack_10ul"
                },
                {
                    "label": "Opentrons Filter tips 1000ul",
                    "value": "opentrons_96_filtertiprack_1000ul"
                },
                {
                    "label": "Opentrons Filter tips 10ul",
                    "value": "opentrons_96_filtertiprack_10ul"
                },
                {
                    "label": "Opentrons Filter tips 200ul",
                    "value": "opentrons_96_filtertiprack_200ul"
                },
                {
                    "label": "Opentrons Filter tips 20ul",
                    "value": "opentrons_96_filtertiprack_20ul"
                },
                {
                    "label": "Opentrons tips 1000ul",
                    "value": "opentrons_96_tiprack_1000ul"
                },
                {
                    "label": "Opentrons tips 10ul",
                    "value": "opentrons_96_tiprack_10ul"
                },
                {
                    "label": "Opentrons tips 20ul",
                    "value": "opentrons_96_tiprack_20ul"
                },
                {
                    "label": "Opentrons tips 300ul",
                    "value": "opentrons_96_tiprack_300ul"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Pipette Mount",
            "name": "pipette_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 1",
            "share": false,
            "slot": "1",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "GEB 96 Tip Rack 1000 \u00b5L on 2",
            "share": false,
            "slot": "2",
            "type": "geb_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.7",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "OT-2 Guided Walk-through",
        "source": "Custom Protocol Request"
    },
    "modules": []
}