{
    "content": "import math\n\nmetadata = {\n    'protocolName': 'COVID MM-QC-v3 Protocol',\n    'author': 'Sakib <sakib.hossain@opentrons.com>',\n    'description': 'Custom Protocol Request',\n    'apiLevel': '2.8'\n}\n\n\ndef run(ctx):\n\n    [p1000_mount, temperature, volume, mm_height] = get_values(  # noqa: F821\n     \"p1000_mount\", \"temperature\", \"volume\", \"mm_height\")\n\n    # Load Labware\n    tuberack = ctx.load_labware(\n        'opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical', 4)\n    temp_mod = ctx.load_module('temperature module gen2', 10)\n    dest_tubes = temp_mod.load_labware(\n        'opentrons_24_aluminumblock_generic_2ml_screwcap')\n    tiprack_1000ul = ctx.load_labware('opentrons_96_filtertiprack_1000ul', 1)\n\n    # Load Instruments\n    p1000 = ctx.load_instrument('p1000_single_gen2', p1000_mount,\n                                tip_racks=[tiprack_1000ul])\n\n    # Liquid Level Tracking\n    float(mm_height)\n    min_h = 1\n    compensation_coeff = 1.1\n    heights = dict(zip(tuberack.wells()[:1], [mm_height]))\n\n    def h_track(vol, tube):\n        nonlocal heights\n\n        # calculate height decrement based on volume\n        dh = ((math.pi*((tube.diameter/2)**2))/vol)*compensation_coeff\n\n        # make sure height decrement will not crash into the bottom of the tube\n        h = heights[tube] - dh if heights[tube] - dh > min_h else min_h\n        heights[tube] = h\n        return h\n\n    # Set Temperature to 8C\n    temp_mod.set_temperature(temperature)\n\n    # Transfer Reagent to Tubes\n    p1000.pick_up_tip()\n    for d_tube in dest_tubes.wells():\n        h = h_track(60, tuberack['A1'])\n        p1000.transfer(volume, tuberack['A1'].bottom(h), d_tube,\n                       new_tip='never')\n    p1000.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "label": "P1000-single GEN2 mount",
            "name": "p1000_mount",
            "options": [
                {
                    "label": "right",
                    "value": "right"
                },
                {
                    "label": "left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 8,
            "label": "Temperature in Celsius (Temperature Module)",
            "name": "temperature",
            "type": "int"
        },
        {
            "default": 546,
            "label": "Master Mix Volume (uL)",
            "name": "volume",
            "type": "float"
        },
        {
            "default": 75,
            "label": "Master Mix Volume Height (mm)",
            "name": "mm_height",
            "type": "float"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Filter Tip Rack 1000 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_filtertiprack_1000ul"
        },
        {
            "name": "Opentrons 10 Tube Rack with Falcon 4x50 mL, 6x15 mL Conical on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_10_tuberack_falcon_4x50ml_6x15ml_conical"
        },
        {
            "name": "Opentrons 24 Well Aluminum Block with Generic 2 mL Screwcap on Temperature Module GEN2 on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_24_aluminumblock_generic_2ml_screwcap"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.8",
        "author": "Sakib <sakib.hossain@opentrons.com>",
        "description": "Custom Protocol Request",
        "protocolName": "COVID MM-QC-v3 Protocol"
    },
    "modules": []
}