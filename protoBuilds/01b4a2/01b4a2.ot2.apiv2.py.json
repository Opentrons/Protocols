{
    "content": "import math\nmetadata = {\n    'protocolName': 'Sample Prep with DMSO and CSV Input',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n\n    [num_plates, csv_samp, init_vol,\n        p300_mount, p1000_mount] = get_values(  # noqa: F821\n        \"num_plates\", \"csv_samp\", \"init_vol\",\n            \"p300_mount\", \"p1000_mount\")\n\n    # labware\n    final_plates = [ctx.load_labware('corning_96_wellplate_360ul_flat', slot)\n                    for slot in [6, 3]][:num_plates]\n    reag_rack = ctx.load_labware('opentrons_6_tuberack_nest_50ml_conical', 8)\n    middle_rack = ctx.load_labware('opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap', 9)\n    tips300 = [ctx.load_labware('opentrons_96_tiprack_300ul', slot)\n               for slot in [5]]\n    tips1000 = [ctx.load_labware('opentrons_96_tiprack_1000ul', slot)\n                for slot in [7]]\n\n    # pipettes\n    p300 = ctx.load_instrument('p300_single_gen2',\n                               p300_mount, tip_racks=tips300)\n    p1000 = ctx.load_instrument('p1000_single_gen2',\n                                p1000_mount, tip_racks=tips1000)\n\n    # liquid height tracking\n    v_naught_dil = init_vol*1000\n    radius = reag_rack.wells()[0].diameter/2\n    h_naught_dil = 0.6*v_naught_dil/(math.pi*radius**2)\n    h = h_naught_dil\n\n    def adjust_height(vol):\n        nonlocal h\n        dh = vol/(math.pi*radius**2)\n        h -= dh\n        if h < 12:\n            h = 1\n\n    # mapping\n    csv_rows = [[val.strip() for val in line.split(',')]\n                for line in csv_samp.splitlines()\n                if line.split(',')[0].strip()][1:]\n\n    buff = reag_rack.wells()[0]\n\n    # protocol\n    for row in csv_rows:\n        transfer_vol = int(row[2])\n        dest_well = middle_rack.wells_by_name()[row[1]]\n        p1000.pick_up_tip()\n        p1000.transfer(transfer_vol, buff.bottom(h),\n                       dest_well, new_tip='never', touch_tip=True)\n        p1000.mix(10, transfer_vol/2, dest_well)\n        p1000.touch_tip()\n        p1000.drop_tip()\n        adjust_height(transfer_vol)\n\n    ctx.pause(\"Check vials then select `Resume` in the Opentrons app\")\n\n    all_cols = [col for plate in final_plates for col in plate.columns()]\n\n    for row, dest_col in zip(csv_rows, all_cols):\n        source_well = middle_rack.wells_by_name()[row[1]]\n        p300.pick_up_tip()\n        p300.aspirate(270, source_well)\n        p300.touch_tip()\n        for well in dest_col:\n            p300.dispense(30, well)\n            p300.touch_tip()\n        p300.dispense(30, source_well)\n        p300.touch_tip()\n        p300.drop_tip()\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 1,
            "label": "How many 96 well plates? (1 or 2)",
            "name": "num_plates",
            "type": "int"
        },
        {
            "default": "vial_id, parent_well, dmso_volume, daughter_column\n1, A1, 1000, 1",
            "label": ".CSV File",
            "name": "csv_samp",
            "type": "textFile"
        },
        {
            "default": 40,
            "label": "Initial volume in 50mL tube on slot 8",
            "name": "init_vol",
            "type": "int"
        },
        {
            "label": "P300 Single-Channel Mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P1000 Single-Channel Mount",
            "name": "p1000_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p300_single_gen2"
        },
        {
            "mount": "right",
            "name": "p1000_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Corning 96 Well Plate 360 \u00b5L Flat on 3",
            "share": false,
            "slot": "3",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 5",
            "share": false,
            "slot": "5",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Corning 96 Well Plate 360 \u00b5L Flat on 6",
            "share": false,
            "slot": "6",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Opentrons 96 Tip Rack 1000 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_tiprack_1000ul"
        },
        {
            "name": "Opentrons 6 Tube Rack with NEST 50 mL Conical on 8",
            "share": false,
            "slot": "8",
            "type": "opentrons_6_tuberack_nest_50ml_conical"
        },
        {
            "name": "Opentrons 24 Tube Rack with Eppendorf 2 mL Safe-Lock Snapcap on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_24_tuberack_eppendorf_2ml_safelock_snapcap"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Sample Prep with DMSO and CSV Input",
        "source": "Custom Protocol Request"
    },
    "modules": []
}