{
    "content": "from opentrons.types import Point\n\nmetadata = {\n    'protocolName': 'Liquid Deposition on Custom Surface',\n    'author': 'Nick <protocols@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.9'\n}\n\n\ndef run(ctx):\n\n    volume, loc_csv, p20_type, p20_mount = get_values(  # noqa: F821\n        'volume', 'loc_csv', 'p20_type', 'p20_mount')\n\n    res = ctx.load_labware('usascientific_96_wellplate_2.4ml_deep', '10')\n    tiprack20 = [ctx.load_labware('opentrons_96_tiprack_20ul', '11')]\n    plate = ctx.load_labware('custom_1_other_20ul', '1')\n    if p20_type == 'p20_multi_gen2':\n        sources = res.rows([0][:2])\n    else:\n        sources = res.columns()[0]\n\n    p20 = ctx.load_instrument(p20_type, p20_mount, tip_racks=tiprack20)\n    # match mount to axis\n    axis_map = {\n        'right': 'A',\n        'left': 'Z'\n    }\n\n    # parse .csv\n    offsets = [\n        [float(val) for val in line.split(',')]\n        for line in loc_csv.splitlines()[1:]]\n\n    # grid creation methods\n    x_spaces = [0, 9, 13.5, 22.5]\n    y_spaces = [0, -9, -18, -27]\n    ref_a1 = plate.wells()[0].top().move(Point(x=0, y=0))\n\n    def create_col(ref):\n        col = [ref.move(Point(y=y_space)) for y_space in y_spaces]\n        return col\n\n    def create_grid(x_grid, y_grid):\n        grid = []\n        for x_start, y_start in zip([0, -4.5], [0, -4.5]):\n            for x_space in x_spaces:\n                ref = ref_a1.move(Point(x=x_grid+x_space+x_start,\n                                        y=y_grid+y_start))\n                grid.append(create_col(ref))\n        return grid\n\n    # initialize and create grids\n    grids = [create_grid(0, 0)]\n    for offset in offsets:\n        x, y = offset\n        grid = create_grid(x, y)\n        grids.append(grid)\n\n    # setup destinations depending on pipette type\n    if p20_type == 'p20_multi_gen2':\n        for grid in grids:\n            dests = [col[0] for col in grid]\n            p20.pick_up_tip()\n            for i, d in enumerate(dests):\n                # if i % 4 == 0:\n                source = sources[i//4]\n                # shift to tips 5-8 if accessing second set of columns\n                dest = d.move(Point(y=(i//4)*36))\n                p20.aspirate(volume, source)\n                p20.move_to(dest.move(Point(z=10)))\n                ctx.max_speeds[axis_map[p20_mount]] = 10\n                p20.move_to(dest)\n                p20.dispense(volume, dest)\n                del ctx.max_speeds[axis_map[p20_mount]]\n                # if (i+1) % 4 == 0:\n            p20.drop_tip()\n\n    else:\n        for grid in grids:\n            dest_sets = [\n                [col[well] for col in grid[set*4:(set+1)*4]]\n                for set in range(2)\n                for well in range(4)]\n            for source, dest_set in zip(sources, dest_sets):\n                p20.pick_up_tip()\n                for dest in dest_set:\n                    p20.aspirate(volume, source)\n                    p20.move_to(dest.move(Point(z=10)))\n                    ctx.max_speeds[axis_map[p20_mount]] = 10\n                    p20.move_to(dest)\n                    p20.dispense(volume, dest)\n                    del ctx.max_speeds[axis_map[p20_mount]]\n                p20.drop_tip()\n",
    "custom_labware_defs": [
        {
            "brand": {
                "brand": "custom",
                "brandId": [],
                "links": []
            },
            "cornerOffsetFromSlot": {
                "x": 0,
                "y": 0,
                "z": 0
            },
            "dimensions": {
                "xDimension": 397.5,
                "yDimension": 236,
                "zDimension": 100
            },
            "groups": [
                {
                    "metadata": {
                        "wellBottomShape": "flat"
                    },
                    "wells": [
                        "A1"
                    ]
                }
            ],
            "metadata": {
                "displayCategory": "other",
                "displayName": "Custom Surface",
                "displayVolumeUnits": "\u00b5L",
                "tags": []
            },
            "namespace": "custom_beta",
            "ordering": [
                [
                    "A1"
                ]
            ],
            "parameters": {
                "format": "irregular",
                "isMagneticModuleCompatible": false,
                "isTiprack": false,
                "loadName": "custom_1_other_20ul"
            },
            "schemaVersion": 2,
            "version": 1,
            "wells": {
                "A1": {
                    "depth": 0.5,
                    "diameter": 4.5,
                    "shape": "circular",
                    "totalLiquidVolume": 20,
                    "x": 14.38,
                    "y": 224.77,
                    "z": 99.5
                }
            }
        }
    ],
    "fields": [
        {
            "default": 10,
            "label": "transfer volume (in \u00b5l)",
            "name": "volume",
            "type": "float"
        },
        {
            "default": "x offset (in mm),y offset (in mm)\n20, -20",
            "label": "location offset .csv",
            "name": "loc_csv",
            "type": "textFile"
        },
        {
            "label": "P20 GEN2 type",
            "name": "p20_type",
            "options": [
                {
                    "label": "single",
                    "value": "p20_single_gen2"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 GEN2 pipette mount",
            "name": "p20_mount",
            "options": [
                {
                    "label": "left",
                    "value": "left"
                },
                {
                    "label": "right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Custom Surface on 1",
            "share": false,
            "slot": "1",
            "type": "custom_1_other_20ul"
        },
        {
            "name": "USA Scientific 96 Deep Well Plate 2.4 mL on 10",
            "share": false,
            "slot": "10",
            "type": "usascientific_96_wellplate_2.4ml_deep"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.9",
        "author": "Nick <protocols@opentrons.com>",
        "protocolName": "Liquid Deposition on Custom Surface",
        "source": "Custom Protocol Request"
    },
    "modules": []
}