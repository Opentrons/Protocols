{
    "content": "from itertools import groupby\nimport os\nimport csv\nimport math\n\ndef get_values(*names):\n    import json\n    _all_values = json.loads(\"\"\"{\"csv_samp\":\"Plate number,Well,Concentration (ng/ul0,Diluent Volume (ul),Sample volume (ul),Total volume (ul),Desired concentration(ng/ul)\\\\n1,A1,50,2,40,100,20\\\\n1,F1,300,0,6.666666667,100,20\\\\n1,G1,400,95,5,100,20\\\\n2,A1,50,60,40,100,20\\\\n2,A2,75,73.33333333,26.66666667,100,20\\\\n2,A4,150,86.66666667,13.33333333,100,20\\\\n2,A5,200,90,10,100,20\\\\n2,A6,300,93.33333333,6.666666667,100,20\\\\n2,A7,400,95,5,100,20\\\\n2,A8,500,96,4,100,20\\\\n2,A9,50,60,40,100,20\\\\n2,A10,75,73.33333333,26.66666667,100,20\\\\n2,A11,100,80,20,100,20\\\\n2,A12,150,86.66666667,13.33333333,100,20\\\\n3,A12,200,90,10,100,20\\\\n3,B12,300,93.33333333,6.666666667,100,20\\\\n3,C12,400,95,5,100,20\\\\n3,D12,500,96,4,100,20\\\\n3,E12,50,60,40,100,20\\\\n3,F12,75,73.33333333,26.66666667,100,20\\\\n3,G12,100,80,20,100,20\\\\n3,H8,150,86.66666667,13.33333333,100,20\\\\n3,H9,200,90,10,100,20\\\\n3,H10,300,93.33333333,6.666666667,100,20\\\\n3,H11,400,95,5,100,20\",\"reset_tipracks\":true,\"include_pause\":true,\"v_0_tube1\":30000,\"p300_mount\":\"right\",\"p20_mount\":\"left\"}\"\"\")\n    return [_all_values[n] for n in names]\n\nmetadata = {\n    'protocolName': 'Normalization with Input .CSV File',\n    'author': 'Rami Farawi <rami.farawi@opentrons.com>',\n    'source': 'Custom Protocol Request',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n    [csv_samp, reset_tipracks, include_pause, v_0_tube1,\n        p20_mount, p300_mount] = get_values(  # noqa: F821\n        \"csv_samp\", \"reset_tipracks\",\n        \"include_pause\", \"v_0_tube1\", \"p20_mount\", \"p300_mount\")\n\n    # load labware\n    source_plates = [ctx.load_labware('biorad_96_wellplate_200ul_pcr', slot)\n                     for slot in ['2', '5', '8']]\n    dest_plates = [ctx.load_labware('biorad_96_wellplate_200ul_pcr', slot)\n                   for slot in ['3', '6', '9']]\n    tiprack20 = [ctx.load_labware('opentrons_96_filtertiprack_20ul', slot)\n                 for slot in ['1', '4', '7']]\n    tiprack200 = [ctx.load_labware('opentrons_96_filtertiprack_200ul', '10')]\n    diluent_rack = ctx.load_labware(\n                    'opentrons_6_tuberack_50000ul', '11')\n\n    # load instrument\n    p20 = ctx.load_instrument('p20_single_gen2', p20_mount,\n                              tip_racks=tiprack20)\n    p300 = ctx.load_instrument('p300_single_gen2', p300_mount,\n                               tip_racks=tiprack200)\n    p300.starting_tip = tiprack200[0].wells()[reset_tipracks-1]\n\n    plate_map = [[val.strip() for val in line.split(',')]\n                 for line in csv_samp.splitlines()\n                 if line.split(',')[0].strip()][1:]\n\n    # Tip tracking between runs\n    if not ctx.is_simulating():\n        file_path = '/data/csv/tiptracking.csv'\n        file_dir = os.path.dirname(file_path)\n        # check for file directory\n        if not os.path.exists(file_dir):\n            os.makedirs(file_dir)\n        # check for file; if not there, create initial tip count tracking\n        if not os.path.isfile(file_path):\n            with open(file_path, 'w') as outfile:\n                outfile.write(\"0, 0\\n\")\n\n    tip_count_list = []\n    if ctx.is_simulating():\n        tip_count_list = [0, 0]\n    elif reset_tipracks:\n        tip_count_list = [0, 0]\n    else:\n        with open(file_path) as csv_file:\n            csv_reader = csv.reader(csv_file, delimiter=',')\n            tip_count_list = next(csv_reader)\n\n    num_one = int(tip_count_list[0])\n    p300.starting_tip = tiprack200[0].wells()[num_one]\n\n    def pick_up300(sample_tip=num_one, use_park=False):\n        nonlocal num_one\n        if num_one == 95:\n            ctx.pause(\"Replace all 300ul non-filter tip racks\")\n            num_one = 0\n            p300.pick_up_tip(tiprack200[0].wells()[num_one])\n        else:\n            p300.pick_up_tip(tiprack200[0].wells()[num_one])\n            num_one += 1\n\n    # liquid height tracking\n    v_naught1 = v_0_tube1\n    radius = diluent_rack.wells()[0].diameter/2\n    h_naught1 = v_naught1/(math.pi*radius**2)\n    h1 = h_naught1\n\n    def adjust_height(vol):\n        nonlocal h1\n        dh = vol/(math.pi*radius**2)*10\n        h1 -= dh\n        if h1 < 20:\n            h1 = 1\n        else:\n            return h1 - 10\n\n    # csv numbers\n    plate_num = 0\n    well = 1\n    dil_vol = 3\n    sample_vol = 4\n\n    plate_lengths = []\n    for row in plate_map:\n        plate_lengths.append(row[plate_num])\n\n    grouped_plates = [list(b) for a, b in groupby(plate_lengths)]\n\n    # TRANSFER DILUENT\n    pick_up300()\n    for row in plate_map:\n        if float(row[dil_vol]) > 0:\n            p300.aspirate(float(row[dil_vol]),\n                          diluent_rack.wells()[0].bottom(z=h1))\n            p300.dispense(float(row[dil_vol]),\n                          dest_plates[int(row[plate_num])-1].wells_by_name()[\n                            row[well]])\n            adjust_height(float(row[dil_vol]))\n            p300.blow_out()\n            p300.touch_tip()\n    p300.drop_tip()\n    ctx.comment('\\n\\n\\n')\n\n    if include_pause:\n        ctx.pause('''\n                     Diluent is transferred to all plates.\n                     Place the first sample source plate in slot 3 to begin\n                     after selecting \"Resume\" on the Opentrons App.\n                 ''')\n\n    # TRANSFER SAMPLE\n    row_ctr = 0\n    for i, chunk in enumerate(grouped_plates):\n        for row, plate in zip(plate_map[row_ctr:], chunk):\n            p20.pick_up_tip(tiprack20[int(row[plate_num])-1].wells_by_name()\n                            [row[well]])\n            p20.transfer(float(row[sample_vol]),\n                         source_plates[int(row[plate_num])-1].wells_by_name()\n                         [row[well]],\n                         dest_plates[int(row[plate_num])-1].wells_by_name()[\n                              row[well]],\n                         new_tip='never')\n            p20.mix(1, 15, dest_plates[int(row[plate_num])-1].wells_by_name()[\n               row[well]])\n            p20.blow_out()\n            p20.touch_tip()\n            p20.drop_tip()\n            row_ctr += 1\n            ctx.comment('\\n')\n        if i < 2 and include_pause:\n            ctx.pause(f'''Source plate {i+1} is transferred,\n                    please load source plate {i+2}\n                    and select \"Resume on the Opentrons App.\"\n                    ''')\n\n    # write updated tipcount to CSV\n    num_two = 0\n    new_tip_count = str(num_one)+\", \"+str(num_two)+\"\\n\"\n    if not ctx.is_simulating():\n        with open(file_path, 'w') as outfile:\n            outfile.write(new_tip_count)\n",
    "custom_labware_defs": [
        {
            "brand": {
                "brand": "Corning",
                "brandId": [
                    "2341111"
                ]
            },
            "cornerOffsetFromSlot": {
                "x": 0,
                "y": 0,
                "z": 0
            },
            "dimensions": {
                "xDimension": 127.76,
                "yDimension": 85.48,
                "zDimension": 122
            },
            "groups": [
                {
                    "metadata": {
                        "displayCategory": "tubeRack",
                        "wellBottomShape": "v"
                    },
                    "wells": [
                        "A1",
                        "B1",
                        "A2",
                        "B2",
                        "A3",
                        "B3"
                    ]
                }
            ],
            "metadata": {
                "displayCategory": "tubeRack",
                "displayName": "Opentrons 6 Tube Rack with Corning 50 mL",
                "displayVolumeUnits": "\u00b5L",
                "tags": []
            },
            "namespace": "custom_beta",
            "ordering": [
                [
                    "A1",
                    "B1"
                ],
                [
                    "A2",
                    "B2"
                ],
                [
                    "A3",
                    "B3"
                ]
            ],
            "parameters": {
                "format": "irregular",
                "isMagneticModuleCompatible": false,
                "isTiprack": false,
                "loadName": "opentrons_6_tuberack_50000ul",
                "quirks": []
            },
            "schemaVersion": 2,
            "version": 1,
            "wells": {
                "A1": {
                    "depth": 114,
                    "diameter": 28,
                    "shape": "circular",
                    "totalLiquidVolume": 50000,
                    "x": 35.5,
                    "y": 60.24,
                    "z": 8
                },
                "A2": {
                    "depth": 114,
                    "diameter": 28,
                    "shape": "circular",
                    "totalLiquidVolume": 50000,
                    "x": 70.5,
                    "y": 60.24,
                    "z": 8
                },
                "A3": {
                    "depth": 114,
                    "diameter": 28,
                    "shape": "circular",
                    "totalLiquidVolume": 50000,
                    "x": 105.5,
                    "y": 60.24,
                    "z": 8
                },
                "B1": {
                    "depth": 114,
                    "diameter": 28,
                    "shape": "circular",
                    "totalLiquidVolume": 50000,
                    "x": 35.5,
                    "y": 25.24,
                    "z": 8
                },
                "B2": {
                    "depth": 114,
                    "diameter": 28,
                    "shape": "circular",
                    "totalLiquidVolume": 50000,
                    "x": 70.5,
                    "y": 25.24,
                    "z": 8
                },
                "B3": {
                    "depth": 114,
                    "diameter": 28,
                    "shape": "circular",
                    "totalLiquidVolume": 50000,
                    "x": 105.5,
                    "y": 25.24,
                    "z": 8
                }
            }
        }
    ],
    "fields": [
        {
            "default": "Plate number,Well,Concentration (ng/ul0,Diluent Volume (ul),Sample volume (ul),Total volume (ul),Desired concentration(ng/ul)\n1,A1,50,60,40,100,20\n1,F1,300,93.33333333,6.666666667,100,20\n1,G1,400,95,5,100,20\n2,A1,50,60,40,100,20\n2,A2,75,73.33333333,26.66666667,100,20\n2,A4,150,86.66666667,13.33333333,100,20\n2,A5,200,90,10,100,20\n2,A6,300,93.33333333,6.666666667,100,20\n2,A7,400,95,5,100,20\n2,A8,500,96,4,100,20\n2,A9,50,60,40,100,20\n2,A10,75,73.33333333,26.66666667,100,20\n2,A11,100,80,20,100,20\n2,A12,150,86.66666667,13.33333333,100,20\n3,A12,200,90,10,100,20\n3,B12,300,93.33333333,6.666666667,100,20\n3,C12,400,95,5,100,20\n3,D12,500,96,4,100,20\n3,E12,50,60,40,100,20\n3,F12,75,73.33333333,26.66666667,100,20\n3,G12,100,80,20,100,20\n3,H8,150,86.66666667,13.33333333,100,20\n3,H9,200,90,10,100,20\n3,H10,300,93.33333333,6.666666667,100,20\n3,H11,400,95,5,100,20",
            "label": ".CSV File",
            "name": "csv_samp",
            "type": "textFile"
        },
        {
            "label": "Reset tipracks?",
            "name": "reset_tipracks",
            "options": [
                {
                    "label": "Yes reset",
                    "value": true
                },
                {
                    "label": "No do not reset",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Include pause steps?",
            "name": "include_pause",
            "options": [
                {
                    "label": "Yes, include pause",
                    "value": true
                },
                {
                    "label": "No, do not include pause",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "default": 30000,
            "label": "Initial volume in buffer tube (ul, for liquid height tracking)",
            "name": "v_0_tube1",
            "type": "int"
        },
        {
            "label": "P300 Single-Channel Mount",
            "name": "p300_mount",
            "options": [
                {
                    "label": "Right",
                    "value": "right"
                },
                {
                    "label": "Left",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "P20 Single-Channel Mount",
            "name": "p20_mount",
            "options": [
                {
                    "label": "Left",
                    "value": "left"
                },
                {
                    "label": "Right",
                    "value": "right"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_single_gen2"
        },
        {
            "mount": "right",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 2",
            "share": false,
            "slot": "2",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 3",
            "share": false,
            "slot": "3",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 5",
            "share": false,
            "slot": "5",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 6",
            "share": false,
            "slot": "6",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 20 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_filtertiprack_20ul"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 8",
            "share": false,
            "slot": "8",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Bio-Rad 96 Well Plate 200 \u00b5L PCR on 9",
            "share": false,
            "slot": "9",
            "type": "biorad_96_wellplate_200ul_pcr"
        },
        {
            "name": "Opentrons 96 Filter Tip Rack 200 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_filtertiprack_200ul"
        },
        {
            "name": "Opentrons 6 Tube Rack with Corning 50 mL on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_6_tuberack_50000ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Rami Farawi <rami.farawi@opentrons.com>",
        "protocolName": "Normalization with Input .CSV File",
        "source": "Custom Protocol Request"
    },
    "modules": []
}