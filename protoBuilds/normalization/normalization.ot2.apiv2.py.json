{
    "content": "metadata = {\n    'protocolName': 'Normalization',\n    'author': 'Opentrons <protocols@opentrons.com>',\n    'source': 'Protocol Library',\n    'apiLevel': '2.2'\n    }\n\ntiprack_slots = ['1', '4', '7', '10']\n\n\ndef transpose_matrix(m):\n    return [[r[i] for r in reversed(m)] for i in range(len(m[0]))]\n\n\ndef flatten_matrix(m):\n    return [cell for row in m for cell in row]\n\n\ndef well_csv_to_list(csv_string):\n    \"\"\"\n    Takes a csv string and flattens it to a list, re-ordering to match\n    Opentrons well order convention (A1, B1, C1, ..., A2, B2, B2, ...)\n    \"\"\"\n    data = [\n        line.split(',')\n        for line in reversed(csv_string.split('\\n')) if line.strip()\n        if line\n    ]\n    if len(data[0]) > len(data):\n        # row length > column length ==> \"landscape\", so transpose\n        return flatten_matrix(transpose_matrix(data))\n    # \"portrait\"\n    return flatten_matrix(data)\n\n\ndef run(protocol):\n    [volumes_csv, pip_model, pip_mount, plate_type,\n     res_type, filter_tip, tip_reuse] = get_values(  # noqa: F821\n        'volumes_csv', 'pip_model', 'pip_mount', 'plate_type',\n         'res_type', 'filter_tip', 'tip_reuse')\n\n    # create labware\n    plate = protocol.load_labware(plate_type, '3')\n\n    reservoir = protocol.load_labware(res_type, '2')\n    source = reservoir.wells()[0]\n\n    pip_size = pip_model.split('_')[0][1:]\n\n    pip_size = '300' if pip_size == '50' else pip_size\n    tip_name = 'opentrons_96_tiprack_'+pip_size+'ul'\n    if filter_tip == 'yes':\n        pip_size = '200' if pip_size == '300' else pip_size\n        tip_name = 'opentrons_96_filtertiprack_'+pip_size+'ul'\n\n    tipracks = [protocol.load_labware(tip_name, slot)\n                for slot in tiprack_slots]\n\n    pipette = protocol.load_instrument(pip_model, pip_mount,\n                                       tip_racks=tipracks)\n\n    # create volumes list\n    volumes = [float(cell) for cell in well_csv_to_list(volumes_csv)]\n\n    for vol in volumes:\n        if vol < pipette.min_volume:\n            protocol.comment(\n                'WARNING: volume {} is below pipette\\'s minimum volume.'\n                .format(vol))\n\n    pipette.transfer(\n        volumes,\n        source,\n        plate.wells()[:len(volumes)],  # added for simulation purposes\n        new_tip=tip_reuse)\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": "1,2,3",
            "label": "Volumes CSV",
            "name": "volumes_csv",
            "type": "textFile"
        },
        {
            "label": "Pipette Model",
            "name": "pip_model",
            "options": [
                {
                    "label": "P300 Single GEN2",
                    "value": "p300_single_gen2"
                },
                {
                    "label": "P300 Single GEN1",
                    "value": "p300_single"
                },
                {
                    "label": "P20 Single GEN2",
                    "value": "p20_single_gen2"
                },
                {
                    "label": "P50 Single GEN1",
                    "value": "p50_single"
                },
                {
                    "label": "P10 Single GEN1",
                    "value": "p10_single"
                },
                {
                    "label": "P1000 Single GEN2",
                    "value": "p1000_single_gen2"
                },
                {
                    "label": "P1000 Single GEN1",
                    "value": "p1000_single"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Pipette Mount",
            "name": "pip_mount",
            "options": [
                {
                    "label": "Right side",
                    "value": "right"
                },
                {
                    "label": "Left side",
                    "value": "left"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Plate Type",
            "name": "plate_type",
            "options": [
                {
                    "label": "NEST 96-Well, 200\u00b5L Flat",
                    "value": "nest_96_wellplate_200ul_flat"
                },
                {
                    "label": "NEST 96-Well, 100\u00b5L PCR",
                    "value": "nest_96_wellplate_100ul_pcr_full_skirt"
                },
                {
                    "label": "BioRad 96-Well, 200\u00b5L PCR",
                    "value": "biorad_96_wellplate_200ul_pcr"
                },
                {
                    "label": "Corning 96-Well, 360\u00b5L Flat",
                    "value": "corning_96_wellplate_360ul_flat"
                },
                {
                    "label": "Corning 384-Well, 112\u00b5L Flat",
                    "value": "corning_384_wellplate_112ul_flat"
                },
                {
                    "label": "USA Scientific 96-Deepwell, 2.4mL",
                    "value": "usascientific_96_wellplate_2.4ml_deep"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Reservoir Type",
            "name": "res_type",
            "options": [
                {
                    "label": "NEST 1-Well, 195mL",
                    "value": "nest_1_reservoir_195ml"
                },
                {
                    "label": "NEST 12-Well, 15mL",
                    "value": "nest_12_reservoir_15ml"
                },
                {
                    "label": "Agilent 1-Well, 290mL",
                    "value": "agilent_1_reservoir_290ml"
                },
                {
                    "label": "Axygen 1-Well, 90mL",
                    "value": "axygen_1_reservoir_90ml"
                },
                {
                    "label": "USA Scientific 12-Well, 22mL",
                    "value": "usascientific_12_reservoir_22ml"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Use Filter Tips?",
            "name": "filter_tip",
            "options": [
                {
                    "label": "No",
                    "value": "no"
                },
                {
                    "label": "Yes",
                    "value": "yes"
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Tip Usage Strategy",
            "name": "tip_reuse",
            "options": [
                {
                    "label": "Use a new tip for each transfer",
                    "value": "always"
                },
                {
                    "label": "Reuse tip for each transfer",
                    "value": "once"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "right",
            "name": "p300_single_gen2"
        }
    ],
    "labware": [
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 1",
            "share": false,
            "slot": "1",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "NEST 1 Well Reservoir 195 mL on 2",
            "share": false,
            "slot": "2",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "NEST 96 Well Plate 200 \u00b5L Flat on 3",
            "share": false,
            "slot": "3",
            "type": "nest_96_wellplate_200ul_flat"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 4",
            "share": false,
            "slot": "4",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 7",
            "share": false,
            "slot": "7",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.2",
        "author": "Opentrons <protocols@opentrons.com>",
        "protocolName": "Normalization",
        "source": "Protocol Library"
    },
    "modules": []
}