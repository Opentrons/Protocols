{
    "content": "import math\n\nmetadata = {\n    'protocolName': 'Add Samples and Standard Dilutions to ELISA Plates',\n    'author': 'Steve Plonk <protocols@opentrons.com>',\n    'apiLevel': '2.11'\n}\n\n\ndef run(ctx):\n\n    # get parameter values from json above\n    [plate_count, tip_touch, replenish_tips_manually,\n     labware_elisa_plate] = get_values(  # noqa: F821\n      'plate_count', 'tip_touch', 'replenish_tips_manually',\n      'labware_elisa_plate')\n\n    ctx.set_rail_lights(True)\n    ctx.delay(seconds=10)\n    if plate_count < 1 or plate_count > 5:\n        raise Exception('Invalid number of ELISA plates (must be 1-5).')\n\n    # 20 uL tips, 300 uL tips, empty 300 uL tip box, p20 multi, p300 multi\n\n    # col 1 for buffer distribution, cols 2-12 to replenish row H of empty box\n    tips300buffer = [ctx.load_labware(\n     \"opentrons_96_tiprack_300ul\", str(slot)) for slot in [11]]\n    tipsource = [\n     tip for row in reversed(tips300buffer[0].rows()) for tip in row[1:]]\n\n    # empty 300 uL box slot 9 (standards with one-tip on front-most channel)\n    tips300standards = [ctx.load_labware(\n     \"opentrons_96_tiprack_300ul\", str(slot)) for slot in [9]]\n    tips20 = [ctx.load_labware(\n     \"opentrons_96_tiprack_20ul\", str(slot)) for slot in [10]]\n    p20m = ctx.load_instrument(\n        \"p20_multi_gen2\", 'left', tip_racks=tips20)\n    p300m = ctx.load_instrument(\n        \"p300_multi_gen2\", 'right', tip_racks=tips300standards)\n\n    # yield list chunks of size n\n    def create_chunks(list_name, n):\n        for i in range(0, len(list_name), n):\n            yield list_name[i:i+n]\n\n    # nest_96_wellplate_200ul_flat   corning_96_wellplate_360ul_flat\n    elisaplates = [\n     ctx.load_labware(labware_elisa_plate, str(slot+1),\n                      'Elisa Plate in Slot {}'.format(\n                      str(slot+1))) for slot in [*range(5)]]\n\n    reagentreservoir = ctx.load_labware(\n     'nest_1_reservoir_195ml', '7', 'Bulk Reagent 1x Assay Diluent A')\n\n    sample_plate = ctx.load_labware(\n     'nest_96_wellplate_100ul_pcr_full_skirt', '8', 'Sample Plate')\n\n    # 90 uL buffer to rows A-G of each ELISA plate\n\n    vol = 90\n\n    source = reagentreservoir.wells()[0]\n\n    for index, plate in enumerate(elisaplates[:plate_count]):\n\n        if index > 0:\n            ctx.pause(\"\"\"\\nPlease ensure 20 uL tips and the sample plate\\n\n            \\nfor ELISA plate {} are on deck\\n\"\"\".format(index+1))\n\n        # pick up 7 tips\n        p300m.pick_up_tip(tips300buffer[0]['B1'])\n\n        # if tip touch, repeat dispense (faster plate filling), disposal vol\n        if tip_touch:\n\n            disposal_volume = 30\n\n            dispense_locations = [column[0] for column in plate.columns()]\n\n            chunk_size = math.floor(\n             (tips300buffer[0].wells()[0].max_volume - disposal_volume) / vol)\n\n            chunks = [*create_chunks(dispense_locations, chunk_size)]\n\n            for chunk in chunks:\n\n                p300m.aspirate(\n                 len(chunk)*vol + disposal_volume, source.bottom(1))\n\n                for well in chunk:\n                    p300m.dispense(vol, well.top(2))\n                    p300m.touch_tip()\n\n                # return disposal to source for less reagent usage\n                p300m.dispense(disposal_volume, source.bottom(1))\n\n        # for clean top dispense when tip touch is not an option\n        else:\n\n            for column in plate.columns():\n\n                # pre air gap\n                p300m.move_to(source.top())\n                p300m.air_gap(20)\n                p300m.aspirate(vol, source.bottom(1))\n\n                # dispense liquid followed by air at rate=2\n                p300m.dispense(vol+20, column[0].top(2), rate=2)\n                # followed by delayed blowout\n                ctx.delay(seconds=0.5)\n                p300m.blow_out()\n\n        if index + 1 < plate_count:\n            p300m.return_tip()\n        else:\n            p300m.drop_tip()\n\n        # load row H of empty standards tip box in slot 9\n        def standardtips():\n            yield from tipsource\n\n        standardtip = standardtips()\n\n        if not replenish_tips_manually:\n            for column in tips300standards[0].columns():\n                p300m.pick_up_tip(next(standardtip))\n                p300m.drop_tip(column[-1])\n\n            p300m.reset_tipracks()\n\n        # single tip on front-most channel only\n        # 100 uL standard from sample plate row H to ELISA plate row H\n        p300m.transfer(\n         100, [column[0].bottom(1) for column in sample_plate.columns()],\n         [column[0].bottom(4) for column in plate.columns()],\n         touch_tip=True, new_tip='always')\n\n        # 7-tip 10 uL sample to ELISA plate rows A-G\n        tiplist = ['B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                   'B7', 'B8', 'B9', 'B10', 'B11', 'B12']\n\n        for tip, col1, col2 in zip(\n         tiplist, sample_plate.columns(), plate.columns()):\n            p20m.pick_up_tip(tips20[0][tip])\n            p20m.transfer(\n             10, col1[0].bottom(1), col2[0].bottom(4),\n             touch_tip=True, new_tip='never')\n            p20m.drop_tip()\n\n    ctx.comment(\"Finished\")\n",
    "custom_labware_defs": [],
    "fields": [
        {
            "default": 5,
            "label": "Number of ELISA plates (1-5)",
            "name": "plate_count",
            "type": "int"
        },
        {
            "label": "Include tip touch after dispense? (yes or no)",
            "name": "tip_touch",
            "options": [
                {
                    "label": "YES - touch tip after each dispense",
                    "value": true
                },
                {
                    "label": "NO - avoid tip touch after each dispense",
                    "value": false
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Manually place tips for transfer of standards in slot 9 empty box row H (yes or no)",
            "name": "replenish_tips_manually",
            "options": [
                {
                    "label": "NO - let the robot place and replenish these tips",
                    "value": false
                },
                {
                    "label": "YES - place and replenish these tips manually",
                    "value": true
                }
            ],
            "type": "dropDown"
        },
        {
            "label": "Labware for the ELISA plate",
            "name": "labware_elisa_plate",
            "options": [
                {
                    "label": "corning_96_wellplate_360ul_flat",
                    "value": "corning_96_wellplate_360ul_flat"
                },
                {
                    "label": "nest_96_wellplate_200ul_flat",
                    "value": "nest_96_wellplate_200ul_flat"
                }
            ],
            "type": "dropDown"
        }
    ],
    "instruments": [
        {
            "mount": "left",
            "name": "p20_multi_gen2"
        },
        {
            "mount": "right",
            "name": "p300_multi_gen2"
        }
    ],
    "labware": [
        {
            "name": "Elisa Plate in Slot 1 on 1",
            "share": false,
            "slot": "1",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Elisa Plate in Slot 2 on 2",
            "share": false,
            "slot": "2",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Elisa Plate in Slot 3 on 3",
            "share": false,
            "slot": "3",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Elisa Plate in Slot 4 on 4",
            "share": false,
            "slot": "4",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Elisa Plate in Slot 5 on 5",
            "share": false,
            "slot": "5",
            "type": "corning_96_wellplate_360ul_flat"
        },
        {
            "name": "Bulk Reagent 1x Assay Diluent A on 7",
            "share": false,
            "slot": "7",
            "type": "nest_1_reservoir_195ml"
        },
        {
            "name": "Sample Plate on 8",
            "share": false,
            "slot": "8",
            "type": "nest_96_wellplate_100ul_pcr_full_skirt"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 9",
            "share": false,
            "slot": "9",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 20 \u00b5L on 10",
            "share": false,
            "slot": "10",
            "type": "opentrons_96_tiprack_20ul"
        },
        {
            "name": "Opentrons 96 Tip Rack 300 \u00b5L on 11",
            "share": false,
            "slot": "11",
            "type": "opentrons_96_tiprack_300ul"
        },
        {
            "name": "Opentrons Fixed Trash on 12",
            "share": false,
            "slot": "12",
            "type": "opentrons_1_trash_1100ml_fixed"
        }
    ],
    "metadata": {
        "apiLevel": "2.11",
        "author": "Steve Plonk <protocols@opentrons.com>",
        "protocolName": "Add Samples and Standard Dilutions to ELISA Plates"
    },
    "modules": []
}