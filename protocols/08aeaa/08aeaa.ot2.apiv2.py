def get_values(*names):
    import json
    _all_values = json.loads("""{"norm_data":"Plate position,ng/ul,Volume,ng TOT,ul Final Dil,ul Water\\nA1,19.9,15,298.7,19.9,4.9\\nB1,22.4,15,335.5,22.4,7.4\\nC1,22.2,15,332.9,22.2,7.2\\nD1,11.8,15,177.7,11.8,-3.2\\nE1,43.6,15,654.4,43.6,28.6\\nF1,30.8,15,461.6,30.8,15.8\\nG1,36.7,15,550.2,36.7,21.7\\nH1,20.3,15,304.6,20.3,5.3\\nA2,30.7,15,460.4,30.7,15.7\\nB2,30.2,15,452.5,30.2,15.2\\nC2,27.5,15,412.0,27.5,12.5\\nD2,35.2,15,528.5,35.2,20.2\\nE2,25.2,15,378.4,25.2,10.2\\nF2,26.5,15,397.5,26.5,11.5\\nG2,27.6,15,413.7,27.6,12.6\\nH2,17.5,15,262.2,17.5,2.5\\nA3,27.1,15,406.0,27.1,12.1\\nB3,32.1,15,481.0,32.1,17.1\\nC3,37.1,15,556.4,37.1,22.1\\nD3,27.1,15,406.8,27.1,12.1\\nE3,41.6,15,624.7,41.6,26.6\\nF3,26.7,15,400.3,26.7,11.7\\nG3,22.3,15,334.9,22.3,7.3\\nH3,24.4,15,366.2,24.4,9.4\\nA4,33.1,15,496.1,33.1,18.1\\nB4,34.1,15,512.1,34.1,19.1\\nC4,28.4,15,426.0,28.4,13.4\\nD4,67.4,15,1010.9,67.4,52.4\\nE4,35.6,15,533.9,35.6,20.6\\nF4,38.8,15,582.1,38.8,23.8\\nG4,21.0,15,315.4,21.0,6.0\\nH4,29.6,15,443.7,29.6,14.6\\nA5,19.1,15,286.4,19.1,4.1\\nB5,20.9,15,312.9,20.9,5.9\\nC5,47.1,15,705.8,47.1,32.1\\nD5,23.2,15,348.3,23.2,8.2\\nE5,24.0,15,360.1,24.0,9.0\\nF5,18.9,15,284.2,18.9,3.9\\nG5,29.7,15,445.4,29.7,14.7\\nH5,22.0,15,330.0,22.0,7.0\\nA6,43.5,15,652.2,43.5,28.5\\nB6,25.4,15,380.4,25.4,10.4\\nC6,16.9,15,253.4,16.9,1.9\\nD6,14.0,15,210.4,14.0,-1.0\\nE6,20.9,15,313.5,20.9,5.9\\nF6,21.0,15,314.3,21.0,6.0\\nG6,27.3,15,410.1,27.3,12.3\\nH6,32.6,15,489.2,32.6,17.6\\nA7,18.1,15,272.2,18.1,3.1\\nB7,27.3,15,409.0,27.3,12.3\\nC7,35.7,15,535.1,35.7,20.7\\nD7,25.1,15,375.8,25.1,10.1\\nE7,31.9,15,478.8,31.9,16.9\\nF7,34.8,15,522.7,34.8,19.8\\nG7,17.8,15,267.7,17.8,2.8\\nH7,17.6,15,263.7,17.6,2.6\\nA8,31.9,15,478.6,31.9,16.9\\nB8,43.3,15,649.1,43.3,28.3\\nC8,33.0,15,495.2,33.0,18.0\\nD8,27.9,15,418.7,27.9,12.9\\nE8,5.0,15,75.6,5.0,-10.0\\nF8,29.3,15,440.0,29.3,14.3\\nG8,29.5,15,442.6,29.5,14.5\\nH8,42.8,15,642.7,42.8,27.8\\nA9,44.0,15,660.7,44.0,29.0\\nB9,38.2,15,573.5,38.2,23.2\\nC9,35.0,15,525.7,35.0,20.0\\nD9,22.3,15,334.1,22.3,7.3\\nE9,38.7,15,581.0,38.7,23.7\\nF9,37.0,15,554.6,37.0,22.0\\nG9,29.1,15,437.0,29.1,14.1\\nH9,59.7,15,895.0,59.7,44.7\\nA10,37.4,15,561.6,37.4,22.4\\nB10,31.0,15,464.9,31.0,16.0\\nC10,31.5,15,472.9,31.5,16.5\\nD10,11.8,15,176.6,11.8,-3.2\\nE10,40.9,15,613.4,40.9,25.9\\nF10,22.3,15,334.1,22.3,7.3\\nG10,31.3,15,470.2,31.3,16.3\\nH10,21.7,15,325.9,21.7,6.7\\nA11,26.5,15,398.2,26.5,11.5\\nB11,26.7,15,401.2,26.7,11.7\\nC11,35.3,15,529.8,35.3,20.3\\nD11,31.7,15,474.8,31.7,16.7\\nE11,14.8,15,222.3,14.8,-0.2\\nF11,22.9,15,342.9,22.9,7.9\\nG11,32.9,15,493.9,32.9,17.9\\nH11,19.1,15,286.1,19.1,4.1\\nA12,34.7,15,521.0,34.7,19.7\\nB12,51.0,15,764.8,51.0,36.0\\nC12,33.9,15,508.0,33.9,18.9\\nD12,32.0,15,480.1,32.0,17.0\\nE12,44.9,15,672.8,44.9,29.9\\nF12,19.1,15,286.8,19.1,4.1\\nG12,22.1,15,332.1,22.1,7.1\\nH12,22.4,15,335.7,22.4,7.4\", "p300_mount":"left", "p20_mount":"right"}""")
    return [_all_values[n] for n in names]

metadata = {
    'protocolName': 'Sample Normalization',
    'author': 'Sakib <sakib.hossain@opentrons.com>',
    'description': 'Custom Protocol Request',
    'apiLevel': '2.9'
}


def run(ctx):

    [norm_data, p300_mount, p20_mount] = get_values(  # noqa: F821
        "norm_data", "p300_mount", "p20_mount")

    # Load Labware
    tipracks_20ul = [ctx.load_labware('opentrons_96_tiprack_20ul', slot) for slot in range(1, 3)]
    tipracks_300ul = [ctx.load_labware('opentrons_96_tiprack_300ul', slot) for slot in range(3, 5)]
    sample_plate = ctx.load_labware('micronic_96_rack_300ul_tubes', 5)
    pcr_plate = ctx.load_labware('abgene_96_wellplate_200ul', 6)
    water = ctx.load_labware('agilent_1_reservoir_290ml', 8)['A1']

    # Load Pipettes
    p300 = ctx.load_instrument('p300_single_gen2', p300_mount, tip_racks=tipracks_300ul)
    p20 = ctx.load_instrument('p20_single_gen2', p20_mount, tip_racks=tipracks_20ul)

    data = [[val.strip() for val in line.split(',')]
                    for line in norm_data.splitlines()
                    if line.split(',')[0].strip()][1:]

    dna_wells = []

    # Part 1
    for line in data:
        well, vol = line[0], float(line[5])
        if vol < 0:
            continue
        pip = p20 if vol < 20 else p300
        pip.transfer(vol, water, sample_plate[well], new_tip='always', mix_after=(3, 15))
        dna_wells.append(well)

    # Part 2
    p300.pick_up_tip()
    for well in dna_wells:
        p300.transfer(32.5, water, pcr_plate[well], new_tip='never')
    p300.drop_tip()

    for well in dna_wells:
        p20.transfer(5, sample_plate[well], pcr_plate[well], new_tip='always', mix_after=(3, 15))
